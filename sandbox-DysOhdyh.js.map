{"version":3,"file":"sandbox-DysOhdyh.js","sources":["../../../../node_modules/native-file-system-adapter/src/adapters/sandbox.js"],"sourcesContent":["/* global Blob, DOMException */\n\nimport { errors } from '../util.js'\n\nconst { DISALLOWED } = errors\n\nclass Sink {\n  /**\n   * @param {FileWriter} writer\n   * @param {FileEntry} fileEntry\n   */\n  constructor (writer, fileEntry) {\n    this.writer = writer\n    this.fileEntry = fileEntry\n  }\n\n  /**\n   * @param {BlobPart | Object} chunk\n   */\n  async write (chunk) {\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            await new Promise((resolve, reject) => {\n              this.writer.onwriteend = resolve\n              this.writer.onerror = reject\n              this.writer.truncate(chunk.position)\n            })\n            this.writer.seek(chunk.position)\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. write requires a data argument', 'SyntaxError')\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            throw new DOMException('seeking position failed', 'InvalidStateError')\n          }\n          return\n        } else {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. seek requires a position argument', 'SyntaxError')\n        }\n      } else if (chunk.type === 'truncate') {\n        return new Promise(resolve => {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            this.writer.onwriteend = evt => resolve()\n            this.writer.truncate(chunk.size)\n          } else {\n            throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. truncate requires a size argument', 'SyntaxError')\n          }\n        })\n      }\n    }\n    await new Promise((resolve, reject) => {\n      this.writer.onwriteend = resolve\n      this.writer.onerror = reject\n      this.writer.write(new Blob([chunk]))\n    })\n  }\n\n  close () {\n    return new Promise(this.fileEntry.file.bind(this.fileEntry))\n  }\n}\n\nexport class FileHandle {\n  /** @param {FileEntry} file */\n  constructor (file, writable = true) {\n    this.file = file\n    this.kind = 'file'\n    this.writable = writable\n    this.readable = true\n  }\n\n  get name () {\n    return this.file.name\n  }\n\n  /**\n   * @param {{ file: { toURL: () => string; }; }} other\n   */\n  isSameEntry (other) {\n    return this.file.toURL() === other.file.toURL()\n  }\n\n  /** @return {Promise<File>} */\n  getFile () {\n    return new Promise(this.file.file.bind(this.file))\n  }\n\n  /** @return {Promise<Sink>} */\n  createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n\n    return new Promise((resolve, reject) =>\n      this.file.createWriter(fileWriter => {\n        if (opts.keepExistingData === false) {\n          fileWriter.onwriteend = evt => resolve(new Sink(fileWriter, this.file))\n          fileWriter.truncate(0)\n        } else {\n          resolve(new Sink(fileWriter, this.file))\n        }\n      }, reject)\n    )\n  }\n}\n\nexport class FolderHandle {\n  /** @param {DirectoryEntry} dir */\n  constructor (dir, writable = true) {\n    this.dir = dir\n    this.writable = writable\n    this.readable = true\n    this.kind = 'directory'\n    this.name = dir.name\n  }\n\n  /** @param {FolderHandle} other */\n  isSameEntry (other) {\n    return this.dir.fullPath === other.dir.fullPath\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    const reader = this.dir.createReader()\n    const entries = await new Promise(reader.readEntries.bind(reader))\n    for (const x of entries) {\n      yield [x.name, x.isFile ? new FileHandle(x, this.writable) : new FolderHandle(x, this.writable)]\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FolderHandle>}\n   */\n  getDirectoryHandle (name, opts) {\n    return new Promise((resolve, reject) => {\n      this.dir.getDirectory(name, opts, dir => {\n        resolve(new FolderHandle(dir))\n      }, reject)\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FileHandle>}\n   */\n  getFileHandle (name, opts) {\n    return new Promise((resolve, reject) =>\n      this.dir.getFile(name, opts, file => resolve(new FileHandle(file)), reject)\n    )\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ recursive: boolean; }} opts\n   */\n  async removeEntry (name, opts) {\n    /** @type {Error|FolderHandle|FileHandle} */\n    const entry = await this.getDirectoryHandle(name, { create: false }).catch(err =>\n      err.name === 'TypeMismatchError' ? this.getFileHandle(name, { create: false }) : err\n    )\n\n    if (entry instanceof Error) throw entry\n\n    return new Promise((resolve, reject) => {\n      if (entry instanceof FolderHandle) {\n        opts.recursive\n          ? entry.dir.removeRecursively(() => resolve(), reject)\n          : entry.dir.remove(() => resolve(), reject)\n      } else if (entry.file) {\n        entry.file.remove(() => resolve(), reject)\n      }\n    })\n  }\n}\n\nexport default (opts = {}) => new Promise((resolve, reject) =>\n  window.webkitRequestFileSystem(\n    opts._persistent, 0,\n    e => resolve(new FolderHandle(e.root)),\n    reject\n  )\n)\n"],"names":["DISALLOWED","errors","Sink","writer","fileEntry","chunk","resolve","reject","evt","FileHandle","file","writable","other","opts","fileWriter","FolderHandle","dir","reader","entries","x","name","entry","err","sandbox","e"],"mappings":"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","x_google_ignoreList":[0]}