{"version":3,"file":"index-BrXp_xv9.js","sources":["../../../../node_modules/lodash-es/isSymbol.js","../../../../node_modules/lodash-es/_arrayMap.js","../../../../node_modules/lodash-es/_baseToString.js","../../../../node_modules/lodash-es/noop.js","../../../../node_modules/lodash-es/_baseFindIndex.js","../../../../node_modules/lodash-es/_baseIsNaN.js","../../../../node_modules/lodash-es/_strictIndexOf.js","../../../../node_modules/lodash-es/_baseIndexOf.js","../../../../node_modules/lodash-es/_arrayIncludes.js","../../../../node_modules/lodash-es/_isKey.js","../../../../node_modules/lodash-es/_memoizeCapped.js","../../../../node_modules/lodash-es/_stringToPath.js","../../../../node_modules/lodash-es/toString.js","../../../../node_modules/lodash-es/_castPath.js","../../../../node_modules/lodash-es/_toKey.js","../../../../node_modules/lodash-es/_baseGet.js","../../../../node_modules/lodash-es/get.js","../../../../node_modules/lodash-es/clone.js","../../../../node_modules/lodash-es/_baseIsMatch.js","../../../../node_modules/lodash-es/_isStrictComparable.js","../../../../node_modules/lodash-es/_getMatchData.js","../../../../node_modules/lodash-es/_matchesStrictComparable.js","../../../../node_modules/lodash-es/_baseMatches.js","../../../../node_modules/lodash-es/_baseHasIn.js","../../../../node_modules/lodash-es/_hasPath.js","../../../../node_modules/lodash-es/hasIn.js","../../../../node_modules/lodash-es/_baseMatchesProperty.js","../../../../node_modules/lodash-es/_baseProperty.js","../../../../node_modules/lodash-es/_basePropertyDeep.js","../../../../node_modules/lodash-es/property.js","../../../../node_modules/lodash-es/_baseIteratee.js","../../../../node_modules/lodash-es/_createSet.js","../../../../node_modules/lodash-es/_baseUniq.js","../../../../node_modules/lodash-es/uniq.js","../../../../node_modules/lodash-es/uniqBy.js","../../../../node_modules/@herbcaudill/eventemitter42/dist/EventEmitter.js","../../../../node_modules/@noble/hashes/_assert.js","../../../../node_modules/@noble/hashes/_u64.js","../../../../node_modules/@noble/hashes/crypto.js","../../../../node_modules/@noble/hashes/utils.js","../../../../node_modules/@noble/hashes/sha3.js","../../../../node_modules/@paralleldrive/cuid2/src/index.js","../../../../node_modules/@paralleldrive/cuid2/index.js","../../../../node_modules/@localfirst/crdx/dist/index.js","../../../../node_modules/xstate/dev/dist/xstate-dev.esm.js","../../../../node_modules/xstate/dist/raise-c17ec2bc.esm.js","../../../../node_modules/xstate/dist/log-3d9d72a9.esm.js","../../../../node_modules/xstate/dist/xstate.esm.js","../../../../node_modules/@localfirst/auth/dist/index.js"],"sourcesContent":["import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","export class EventEmitter {\n    #listenerMap = {};\n    #eventsCount = 0;\n    /** Calls each of the listeners registered for a given event. */\n    emit(event, ...args) {\n        if (!this.#listenerMap[event])\n            return false;\n        const listeners = [...this.#listenerMap[event]];\n        for (let i = 0; i < listeners.length; i++) {\n            const { once, fn } = listeners[i];\n            if (once)\n                this.removeListener(event, fn);\n            fn(...args);\n        }\n        return true;\n    }\n    /** Add a listener for a given event. */\n    addListener(event, fn) {\n        return this.#addListener(event, fn, false);\n    }\n    on = this.addListener;\n    /** Add a one-time listener for a given event. */\n    once(event, fn) {\n        return this.#addListener(event, fn, true);\n    }\n    removeListener(event, fn) {\n        const listeners = this.#listenerMap[event];\n        if (listeners) {\n            if (!fn) {\n                this.removeAllListeners(event);\n            }\n            else {\n                // find the listener\n                const removals = [];\n                for (let i = 0; i < listeners.length; i++) {\n                    if (listeners[i].fn === fn) {\n                        const listener = listeners[i];\n                        // remove this listener\n                        this.#eventsCount -= 1;\n                        if (this.#eventsCount === 0) {\n                            // if there are no more listeners, reset the events object\n                            this.#listenerMap = {};\n                            this.#eventsCount = 0;\n                        }\n                        else if (listeners.length === 1) {\n                            // if this is the last listener, remove the key\n                            delete this.#listenerMap[event];\n                        }\n                        else {\n                            // remove this listener from the array\n                            removals.push(i);\n                        }\n                    }\n                }\n                for (let i = removals.length - 1; i >= 0; i--) {\n                    listeners.splice(removals[i], 1);\n                }\n            }\n            return this;\n        }\n    }\n    off = this.removeListener;\n    removeAllListeners(event) {\n        if (event) {\n            const listeners = this.#listenerMap[event];\n            // just remove listeners for this event\n            if (listeners) {\n                this.#eventsCount -= listeners.length;\n                if (this.#eventsCount === 0) {\n                    // if there are no more listeners, reset the events object\n                    this.#listenerMap = {};\n                }\n                else {\n                    // remove the key\n                    delete this.#listenerMap[event];\n                }\n            }\n        }\n        else {\n            this.#listenerMap = {};\n            this.#eventsCount = 0;\n        }\n        return this;\n    }\n    #addListener(event, fn, once = false) {\n        const listener = { fn, once };\n        const events = this.#listenerMap[event] ?? [];\n        events.push(listener);\n        this.#listenerMap[event] = events;\n        this.#eventsCount++;\n        return this;\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","\"use strict\";\n/**\n * Internal assertion helpers.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.anumber = anumber;\nexports.abytes = abytes;\nexports.ahash = ahash;\nexports.aexists = aexists;\nexports.aoutput = aoutput;\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = void 0;\nexports.fromBig = fromBig;\nexports.split = split;\nexports.add = add;\n/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = exports.nextTick = exports.byteSwapIfBE = exports.isLE = void 0;\nexports.isBytes = isBytes;\nexports.u8 = u8;\nexports.u32 = u32;\nexports.createView = createView;\nexports.rotr = rotr;\nexports.rotl = rotl;\nexports.byteSwap = byteSwap;\nexports.byteSwap32 = byteSwap32;\nexports.bytesToHex = bytesToHex;\nexports.hexToBytes = hexToBytes;\nexports.asyncLoop = asyncLoop;\nexports.utf8ToBytes = utf8ToBytes;\nexports.toBytes = toBytes;\nexports.concatBytes = concatBytes;\nexports.checkOpts = checkOpts;\nexports.wrapConstructor = wrapConstructor;\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\nexports.randomBytes = randomBytes;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nfunction u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nfunction u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n// Cast array to view\nfunction createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nfunction rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nfunction rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexports.isLE = (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nfunction byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexports.byteSwapIfBE = exports.isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.abytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0, _assert_js_1.abytes)(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.abytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** For runtime check if class implements interface */\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Wraps hash function, creating an interface on top of it */\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto_1.crypto && typeof crypto_1.crypto.randomBytes === 'function') {\n        return crypto_1.crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = void 0;\nexports.keccakP = keccakP;\n/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\n/** Keccak sponge function. */\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.anumber)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.aexists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.aexists)(this, false);\n        (0, _assert_js_1.abytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.anumber)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.aoutput)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/** SHA3-256 hash function. Different from keccak-256. */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\n/** SHA3-384 hash function. */\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\n/** SHA3-512 hash function. */\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\n/** keccak-224 hash function. */\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/** keccak-256 hash function. Different from SHA3-256. */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\n/** keccak-384 hash function. */\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\n/** keccak-512 hash function. */\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\n/** SHAKE256 XOF with 256-bit security. */\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/* global global, window, module */\nconst { sha3_512: sha3 } = require(\"@noble/hashes/sha3\");\n\nconst defaultLength = 24;\nconst bigLength = 32;\n\nconst createEntropy = (length = 4, random = Math.random) => {\n  let entropy = \"\";\n\n  while (entropy.length < length) {\n    entropy = entropy + Math.floor(random() * 36).toString(36);\n  }\n  return entropy;\n};\n\n/*\n * Adapted from https://github.com/juanelas/bigint-conversion\n * MIT License Copyright (c) 2018 Juan Hernández Serrano\n */\nfunction bufToBigInt(buf) {\n  let bits = 8n;\n\n  let value = 0n;\n  for (const i of buf.values()) {\n    const bi = BigInt(i);\n    value = (value << bits) + bi;\n  }\n  return value;\n}\n\nconst hash = (input = \"\") => {\n  // Drop the first character because it will bias the histogram\n  // to the left.\n  return bufToBigInt(sha3(input)).toString(36).slice(1);\n};\n\nconst alphabet = Array.from({ length: 26 }, (x, i) =>\n  String.fromCharCode(i + 97)\n);\n\nconst randomLetter = (random) =>\n  alphabet[Math.floor(random() * alphabet.length)];\n\n/*\nThis is a fingerprint of the host environment. It is used to help\nprevent collisions when generating ids in a distributed system.\nIf no global object is available, you can pass in your own, or fall back\non a random string.\n*/\nconst createFingerprint = ({\n  globalObj = typeof global !== \"undefined\"\n    ? global\n    : typeof window !== \"undefined\"\n    ? window\n    : {},\n  random = Math.random,\n} = {}) => {\n  const globals = Object.keys(globalObj).toString();\n  const sourceString = globals.length\n    ? globals + createEntropy(bigLength, random)\n    : createEntropy(bigLength, random);\n\n  return hash(sourceString).substring(0, bigLength);\n};\n\nconst createCounter = (count) => () => {\n  return count++;\n};\n\n// ~22k hosts before 50% chance of initial counter collision\n// with a remaining counter range of 9.0e+15 in JavaScript.\nconst initialCountMax = 476782367;\n\nconst init = ({\n  // Fallback if the user does not pass in a CSPRNG. This should be OK\n  // because we don't rely solely on the random number generator for entropy.\n  // We also use the host fingerprint, current time, and a session counter.\n  random = Math.random,\n  counter = createCounter(Math.floor(random() * initialCountMax)),\n  length = defaultLength,\n  fingerprint = createFingerprint({ random }),\n} = {}) => {\n  return function cuid2() {\n    const firstLetter = randomLetter(random);\n\n    // If we're lucky, the `.toString(36)` calls may reduce hashing rounds\n    // by shortening the input to the hash function a little.\n    const time = Date.now().toString(36);\n    const count = counter().toString(36);\n\n    // The salt should be long enough to be globally unique across the full\n    // length of the hash. For simplicity, we use the same length as the\n    // intended id output.\n    const salt = createEntropy(length, random);\n    const hashInput = `${time + salt + count + fingerprint}`;\n\n    return `${firstLetter + hash(hashInput).substring(1, length)}`;\n  };\n};\n\nconst createId = init();\n\nconst isCuid = (id, { minLength = 2, maxLength = bigLength } = {}) => {\n  const length = id.length;\n  const regex = /^[0-9a-z]+$/;\n\n  try {\n    if (\n      typeof id === \"string\" &&\n      length >= minLength &&\n      length <= maxLength &&\n      regex.test(id)\n    )\n      return true;\n  } finally {\n  }\n\n  return false;\n};\n\nmodule.exports.getConstants = () => ({ defaultLength, bigLength });\nmodule.exports.init = init;\nmodule.exports.createId = createId;\nmodule.exports.bufToBigInt = bufToBigInt;\nmodule.exports.createCounter = createCounter;\nmodule.exports.createFingerprint = createFingerprint;\nmodule.exports.isCuid = isCuid;\n","const { createId, init, getConstants, isCuid } = require(\"./src/index\");\n\nmodule.exports.createId = createId;\nmodule.exports.init = init;\nmodule.exports.getConstants = getConstants;\nmodule.exports.isCuid = isCuid;\n","// src/graph/append.ts\nimport { asymmetric } from \"@localfirst/crypto\";\n\n// src/graph/hashLink.ts\nimport { hash } from \"@localfirst/crypto\";\n\n// src/constants.ts\nvar SIGNATURE = \"SIGNATURE\";\nvar ENCRYPTION = \"ENCRYPTION\";\nvar SYMMETRIC = \"SYMMETRIC\";\nvar LINK_HASH = \"LINK_HASH\";\nvar HashPurpose = {\n  SIGNATURE,\n  ENCRYPTION,\n  SYMMETRIC,\n  LINK_HASH\n};\nvar ROOT = \"ROOT\";\nvar MERGE = \"MERGE\";\nvar VALID = { isValid: true };\nvar EPHEMERAL_SCOPE = {\n  type: \"EPHEMERAL\",\n  name: \"EPHEMERAL\"\n};\n\n// src/graph/hashLink.ts\nvar { LINK_HASH: LINK_HASH2 } = HashPurpose;\nvar hashEncryptedLink = (body) => {\n  return hash(LINK_HASH2, body);\n};\n\n// src/graph/append.ts\nvar append = ({\n  graph,\n  action,\n  user,\n  context = {},\n  keys\n}) => {\n  const { publicKey: senderPublicKey, secretKey: senderSecretKey } = user.keys.encryption;\n  const { publicKey: recipientPublicKey } = keys.encryption;\n  const body = {\n    ...action,\n    ...context,\n    userId: user.userId,\n    timestamp: Date.now(),\n    prev: graph.head ?? []\n    // If there are no previous heads, this is the root node\n  };\n  const encryptedBody = asymmetric.encryptBytes({\n    secret: body,\n    recipientPublicKey,\n    senderSecretKey\n  });\n  const hash4 = hashEncryptedLink(encryptedBody);\n  const link = {\n    hash: hash4,\n    body\n  };\n  const encryptedLink = {\n    senderPublicKey,\n    recipientPublicKey,\n    encryptedBody\n  };\n  return {\n    // if the graph didn't already have a root, this is it\n    root: graph.root ?? hash4,\n    // we just added the new head, so we're guaranteed to only have one\n    head: [hash4],\n    // add the new encryptedLink\n    encryptedLinks: {\n      ...graph.encryptedLinks,\n      [hash4]: encryptedLink\n    },\n    // add the new unencrypted link\n    links: {\n      ...graph.links,\n      [hash4]: link\n    }\n  };\n};\n\n// src/graph/children.ts\nimport { memoize } from \"@localfirst/shared\";\n\n// src/graph/getLink.ts\nvar getLink = (graph, hash4) => graph.links[hash4];\n\n// src/graph/children.ts\nvar getChildrenHashes = (graph, hash4) => {\n  const childrenLookup = calculateChildren(graph);\n  return childrenLookup[hash4] || [];\n};\nvar getChildren = (graph, link) => {\n  return getChildrenHashes(graph, link.hash).map((hash4) => getLink(graph, hash4));\n};\nvar calculateChildren = memoize((graph) => {\n  const childrenLookup = {};\n  for (const link of Object.values(graph.links)) {\n    const parents = link.body.prev;\n    for (const parent of parents) {\n      const children = childrenLookup[parent] || [];\n      children.push(link.hash);\n      childrenLookup[parent] = children;\n    }\n  }\n  return childrenLookup;\n});\n\n// src/graph/concurrency.ts\nimport { memoize as memoize4 } from \"@localfirst/shared\";\n\n// src/graph/getHashes.ts\nvar getHashes = (graph) => Object.keys(graph.links);\n\n// src/graph/getPredecessors.ts\nimport { assert, memoize as memoize2 } from \"@localfirst/shared\";\nimport { uniq } from \"lodash-es\";\nvar memoizeResolver = (graph, hash4) => `${graph.head.join(\"\")}:${hash4}`;\nvar getPredecessors = (graph, link) => getPredecessorHashes(graph, link.hash).map((h) => graph.links[h]).filter((link2) => link2 !== void 0);\nvar getPredecessorHashes = memoize2((graph, hash4) => {\n  const link = getLink(graph, hash4);\n  assert(link);\n  const parents = link.body.prev;\n  const predecessors = parents.flatMap((parent) => getPredecessorHashes(graph, parent));\n  return uniq(parents.concat(predecessors));\n}, memoizeResolver);\n\n// src/graph/isPredecessor.ts\nvar isPredecessor = (graph, a, b) => {\n  return a !== void 0 && b !== void 0 && a.hash in graph.links && b.hash in graph.links && getPredecessorHashes(graph, b.hash).includes(a.hash);\n};\nvar isPredecessorHash = (graph, a, b) => getPredecessorHashes(graph, b).includes(a);\n\n// src/graph/getSuccessors.ts\nimport { memoize as memoize3 } from \"@localfirst/shared\";\nimport { uniq as uniq2 } from \"lodash-es\";\nvar memoizeResolver2 = (graph, hash4) => `${graph.head.join(\"\")}:${hash4}`;\nvar getSuccessorHashes = memoize3((graph, hash4) => {\n  const children = getChildrenHashes(graph, hash4);\n  const successors = children.flatMap((parent) => getSuccessorHashes(graph, parent));\n  return uniq2(children.concat(successors));\n}, memoizeResolver2);\nvar getSuccessors = (graph, link) => getSuccessorHashes(graph, link.hash).map((h) => graph.links[h]).filter((link2) => link2 !== void 0);\n\n// src/graph/isSuccessor.ts\nvar isSuccessor = (graph, a, b) => {\n  return a !== void 0 && b !== void 0 && a.hash in graph.links && b.hash in graph.links && getSuccessorHashes(graph, b.hash).includes(a.hash);\n};\nvar isSuccessorHash = (graph, a, b) => getSuccessorHashes(graph, b).includes(a);\n\n// src/graph/concurrency.ts\nvar getConcurrentLinks = (graph, link) => {\n  return getConcurrentHashes(graph, link.hash).map((hash4) => getLink(graph, hash4));\n};\nvar getConcurrentHashes = (graph, hash4) => {\n  const concurrencyLookup = calculateConcurrency(graph);\n  return concurrencyLookup[hash4];\n};\nvar calculateConcurrency = memoize4((graph) => {\n  const concurrencyLookup = {};\n  for (const _ in graph.links) {\n    const hash4 = _;\n    concurrencyLookup[hash4] = getHashes(graph).filter((b) => isConcurrent(graph, hash4, b)).sort();\n  }\n  return concurrencyLookup;\n});\nvar isConcurrent = (graph, a, b) => a !== b && // a link isn't concurrent with itself\n!isPredecessorHash(graph, a, b) && // a link isn't concurrent with any of its predecessors\n!isSuccessorHash(graph, a, b);\nvar getConcurrentBubbles = (graph) => {\n  const seen = {};\n  const getBubble = (a) => {\n    const bubble = [a];\n    for (const b of getConcurrentHashes(graph, a))\n      if (!seen[b]) {\n        seen[b] = true;\n        bubble.push(...getBubble(b));\n      }\n    return bubble;\n  };\n  const bubbles = [];\n  for (const _ in graph.links) {\n    const hash4 = _;\n    if (!seen[hash4]) {\n      seen[hash4] = true;\n      const bubble = getBubble(hash4);\n      if (bubble.length > 1) {\n        bubbles.push(bubble);\n      }\n    }\n  }\n  return bubbles;\n};\n\n// src/graph/createGraph.ts\nimport { createId } from \"@paralleldrive/cuid2\";\nvar EMPTY_GRAPH = {\n  root: void 0,\n  head: void 0,\n  encryptedLinks: {},\n  links: {}\n};\nvar createGraph = ({\n  user,\n  id = createId(),\n  name = id,\n  rootPayload = {},\n  context = {},\n  keys\n}) => {\n  const payload = {\n    name,\n    id,\n    ...rootPayload\n  };\n  const rootAction = {\n    type: ROOT,\n    prev: [],\n    payload\n  };\n  const graph = append({\n    graph: EMPTY_GRAPH,\n    action: rootAction,\n    user,\n    context,\n    keys\n  });\n  return graph;\n};\n\n// src/graph/decrypt.ts\nimport { asymmetric as asymmetric2 } from \"@localfirst/crypto\";\n\n// src/util/arrayToMap.ts\nvar arrayToMap = (keyAccessor) => {\n  return (result, current) => {\n    const key = typeof keyAccessor === \"function\" ? keyAccessor(current) : current[keyAccessor];\n    return {\n      ...result,\n      [key]: current\n    };\n  };\n};\n\n// src/keyset/types.ts\nvar KeyType = {\n  GRAPH: \"GRAPH\",\n  USER: \"USER\"\n};\nvar hasSecrets = (keys) => keys.encryption.hasOwnProperty(\"secretKey\") && keys.signature.hasOwnProperty(\"secretKey\") && \"secretKey\" in keys;\nvar isKeyset = (k) => k !== void 0 && //\n\"secretKey\" in k && \"encryption\" in k && \"signature\" in k;\nvar isKeyring = (k) => !Array.isArray(k) && !isKeyset(k);\n\n// src/keyset/createKeyring.ts\nvar createKeyring = (keys) => {\n  if (isKeyring(keys)) return keys;\n  if (isKeyset(keys)) keys = [keys];\n  return keys.reduce(\n    arrayToMap((k) => k.encryption.publicKey),\n    {}\n  );\n};\n\n// src/graph/decrypt.ts\nimport { assert as assert2 } from \"@localfirst/shared\";\nvar decryptLink = (encryptedLink, keys) => {\n  const { senderPublicKey, recipientPublicKey, encryptedBody } = encryptedLink;\n  const keyring = createKeyring(keys);\n  const keyset = keyring[recipientPublicKey];\n  assert2(keyset, `Can't decrypt link: don't have the correct keyset`);\n  const cipher = toUint8Array(encryptedBody);\n  const decryptedLinkBody = asymmetric2.decryptBytes({\n    cipher,\n    recipientSecretKey: keyset.encryption.secretKey,\n    senderPublicKey\n  });\n  return {\n    hash: hashEncryptedLink(encryptedBody),\n    body: decryptedLinkBody\n  };\n};\nvar decryptGraph = ({\n  encryptedGraph,\n  keys\n}) => {\n  const { encryptedLinks, root, childMap = {} } = encryptedGraph;\n  const links = encryptedGraph.links ?? {};\n  const decrypt = (hash4, prevLinks = {}) => {\n    const encryptedLink = encryptedLinks[hash4];\n    const decryptedLink = links[hash4] ?? // if it's already decrypted, don't bother decrypting it again\n    decryptLink(encryptedLink, keys);\n    let newLinks = {\n      [hash4]: decryptedLink\n    };\n    const children = childMap[hash4] ?? [];\n    for (const hash5 of children) {\n      newLinks = { ...newLinks, ...decrypt(hash5, newLinks) };\n    }\n    return { ...prevLinks, ...newLinks };\n  };\n  const decryptedLinks = decrypt(root);\n  return {\n    ...encryptedGraph,\n    links: decryptedLinks\n  };\n};\nvar toUint8Array = (buf) => {\n  return !isBuffer(buf) ? new Uint8Array(buf) : new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n};\nvar isBuffer = (buf) => \"buffer\" in buf && \"byteOffset\" in buf && \"byteLength\" in buf;\n\n// src/graph/getEncryptedLinks.ts\nvar getEncryptedLinks = (graph, hashes) => Object.fromEntries(hashes.map((hash4) => [hash4, getEncryptedLink(graph, hash4)]));\nvar getEncryptedLink = (graph, hash4) => graph.encryptedLinks[hash4];\n\n// src/graph/getHead.ts\nvar getHead = (graph) => graph.head.map((hash4) => getLink(graph, hash4));\n\n// src/graph/getParents.ts\nfunction getParents(graph, linkOrHash) {\n  if (typeof linkOrHash === \"string\") {\n    const hash4 = linkOrHash;\n    const link = getLink(graph, hash4);\n    return link.body.prev;\n  } else {\n    const link = linkOrHash;\n    return link.body.prev.map((hash4) => getLink(graph, hash4));\n  }\n}\n\n// src/graph/getParentMap.ts\nvar EMPTY = {};\nvar getParentMap = ({\n  graph,\n  depth,\n  start = graph.head,\n  end = [],\n  prev,\n  hashes\n}) => {\n  if (hashes) {\n    return hashes.reduce(\n      (result, hash4) => ({\n        ...result,\n        [hash4]: getParents(graph, hash4)\n      }),\n      EMPTY\n    );\n  }\n  if (prev)\n    start = getTails(prev);\n  if (depth === 0) return EMPTY;\n  return start.reduce((result, hash4) => {\n    const parents = getParents(graph, hash4);\n    const parentsToLookup = parents.filter((parent) => !(parent in result)).filter((parent) => !end.includes(parent));\n    const parentLinks = getParentMap({\n      graph,\n      depth: depth ? depth - 1 : void 0,\n      start: parentsToLookup,\n      end\n    });\n    return {\n      ...result,\n      [hash4]: parents,\n      ...parentLinks\n    };\n  }, EMPTY);\n};\nvar getTails = (linkMap) => {\n  const keys = Object.keys(linkMap);\n  const allParents = keys.flatMap((hash4) => linkMap[hash4]);\n  const tails = allParents.filter((hash4) => !(hash4 in linkMap));\n  return tails;\n};\nvar getChildMap = (graph) => {\n  const childMap = {};\n  for (const hash4 of getHashes(graph))\n    for (const parent of getParents(graph, hash4)) {\n      if (!childMap[parent]) childMap[parent] = [];\n      childMap[parent].push(hash4);\n    }\n  return childMap;\n};\nvar invertLinkMap = (linkMap) => {\n  const inverted = {};\n  const keys = Object.keys(linkMap);\n  for (const hash4 of keys) {\n    for (const parent of linkMap[hash4]) {\n      if (!inverted[parent]) inverted[parent] = [];\n      inverted[parent].push(hash4);\n    }\n  }\n  return inverted;\n};\n\n// src/graph/getRoot.ts\nvar getRoot = (graph) => graph.links[graph.root];\n\n// src/graph/topoSort.ts\nvar topoSort = (graph, options = {}) => {\n  const { comparator = byHash } = options;\n  let links = Object.values(graph.links);\n  const remainingParents = Object.fromEntries(\n    links.map((link) => [link.hash, link.body.prev.length])\n  );\n  const sorted = [];\n  const take = (link) => {\n    sorted.push(link);\n    links = links.filter((l) => l.hash !== link.hash);\n    const children = getChildrenHashes(graph, link.hash);\n    for (const child2 of children) remainingParents[child2]--;\n    if (children.length !== 1) return;\n    const childHash = children[0];\n    if (remainingParents[childHash] > 0) return;\n    const child = graph.links[childHash];\n    take(child);\n  };\n  while (links.length > 0) {\n    const queue = links.filter((link) => remainingParents[link.hash] === 0).sort(comparator);\n    const nextLink = queue.shift();\n    take(nextLink);\n  }\n  return sorted;\n};\nvar byHash = (a, b) => a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n\n// src/graph/getSequence.ts\nvar getSequence = (graph, resolver = baseResolver) => {\n  const { sort = byHash, filter = noFilter } = resolver(graph);\n  const sorted = topoSort(graph, { comparator: sort });\n  return sorted.map((link) => {\n    const isInvalid = link.isInvalid ?? !filter(link);\n    return { ...link, isInvalid };\n  });\n};\nvar baseResolver = (_) => ({});\nvar noFilter = (_) => true;\n\n// src/graph/headsAreEqual.ts\nvar headsAreEqual = (a, b) => {\n  if (a === void 0 || b === void 0) return false;\n  if (a.length !== b.length) return false;\n  a.sort();\n  b.sort();\n  return a.every((hash4, i) => hash4 === b[i]);\n};\n\n// src/graph/merge.ts\nimport { uniq as uniq3 } from \"lodash-es\";\nvar merge = (ours, theirs) => {\n  if (ours.root !== theirs.root) throw new Error(\"Cannot merge two graphs with different roots\");\n  const mergedLinks = {\n    ...theirs.links,\n    ...ours.links\n  };\n  const mergedEncryptedLinks = {\n    ...theirs.encryptedLinks,\n    ...ours.encryptedLinks\n  };\n  const mergedHeads = uniq3([...ours.head, ...theirs.head]);\n  const newHeads = mergedHeads.filter(isNotParentOfAnyOf(mergedLinks));\n  const mergedGraph = {\n    root: ours.root,\n    head: newHeads,\n    encryptedLinks: mergedEncryptedLinks,\n    links: mergedLinks\n  };\n  mergedGraph.head = mergedGraph.head.sort();\n  return mergedGraph;\n};\nvar isNotParentOfAnyOf = (links) => (h) => !Object.values(links).some(isParent(h));\nvar isParent = (h) => (l) => l.body.prev.includes(h);\n\n// src/graph/redactGraph.ts\nvar redactGraph = (graph) => {\n  const { head, root, encryptedLinks } = graph;\n  const childMap = getChildMap(graph);\n  return {\n    head,\n    root,\n    encryptedLinks,\n    childMap\n  };\n};\n\n// src/graph/serialize.ts\nimport { pack, unpack } from \"msgpackr\";\nvar serialize = (graph) => {\n  return pack(redactGraph(graph));\n};\nvar deserialize = (serialized, keys) => {\n  const graph = unpack(serialized);\n  return decryptGraph({ encryptedGraph: graph, keys });\n};\n\n// src/keyset/createKeyset.ts\nimport { hash as hash2, asymmetric as asymmetric3, signatures, stretch, randomKey } from \"@localfirst/crypto\";\nvar { SIGNATURE: SIGNATURE2, ENCRYPTION: ENCRYPTION2, SYMMETRIC: SYMMETRIC2 } = HashPurpose;\nvar createKeyset = (scope, seed = randomKey()) => {\n  const { type, name = type } = scope;\n  const stretchedSeed = stretch(`${name}:${type}:${seed}`);\n  return {\n    type,\n    name,\n    generation: 0,\n    signature: signatures.keyPair(hash2(SIGNATURE2, stretchedSeed).slice(0, 32)),\n    encryption: asymmetric3.keyPair(hash2(ENCRYPTION2, stretchedSeed).slice(0, 32)),\n    secretKey: hash2(SYMMETRIC2, stretchedSeed)\n  };\n};\n\n// src/keyset/getLatestGeneration.ts\nvar getLatestGeneration = (keyring) => {\n  let latest;\n  for (const publicKey in keyring) {\n    const keyset = keyring[publicKey];\n    if (latest === void 0 || keyset.generation > latest.generation) {\n      latest = keyset;\n    }\n  }\n  return latest;\n};\n\n// src/keyset/redactKeys.ts\nvar redactKeys = (keys) => hasSecrets(keys) ? {\n  type: keys.type,\n  name: keys.name,\n  generation: keys.generation,\n  encryption: keys.encryption.publicKey,\n  signature: keys.signature.publicKey\n} : keys;\n\n// src/store/Store.ts\nimport { EventEmitter } from \"@herbcaudill/eventemitter42\";\nimport { assert as assert3 } from \"@localfirst/shared\";\n\n// src/validator/types.ts\nvar ValidationError = class extends Error {\n  type;\n  details;\n  constructor(message, details) {\n    super();\n    this.message = message;\n    this.details = details;\n  }\n};\n\n// src/validator/validate.ts\nimport { memoize as memoize5 } from \"@localfirst/shared\";\n\n// src/validator/validators.ts\nvar validators = {\n  /** Does this link's hash check out? */\n  validateHash(link, graph) {\n    const { hash: hash4 } = link;\n    const { encryptedBody } = graph.encryptedLinks[hash4];\n    const computedHash = hashEncryptedLink(encryptedBody);\n    if (hash4 === computedHash) return VALID;\n    return fail(`The hash calculated for this link does not match.`, {\n      link,\n      hash: hash4,\n      expected: computedHash\n    });\n  },\n  /** Do the previous link(s) referenced by this link exist?  */\n  validatePrev(link, graph) {\n    for (const hash4 of link.body.prev)\n      if (!(hash4 in graph.links))\n        return fail(\n          `The link referenced by one of the hashes in the \\`prev\\` property does not exist.`\n        );\n    return VALID;\n  },\n  /** If this is a root link, it should not have any predecessors, and should be the graph's root */\n  validateRoot(link, graph) {\n    const hasNoPrevLink = link.body.prev.length === 0;\n    const hasRootType = \"type\" in link.body && link.body.type === ROOT;\n    const isTheGraphRoot = getRoot(graph) === link;\n    if (hasNoPrevLink === isTheGraphRoot && isTheGraphRoot === hasRootType) return VALID;\n    const message = hasRootType ? (\n      // ROOT\n      hasNoPrevLink ? `The ROOT link has to be the link referenced by the graph \\`root\\` property` : `The ROOT link cannot have any predecessors`\n    ) : (\n      // not ROOT\n      hasNoPrevLink ? `Non-ROOT links must have predecessors` : \"The link referenced by the graph `root` property must be a ROOT link\"\n    );\n    return fail(message, { link, graph });\n  },\n  /** Sanity check on timestamps: They can't be in the future, relative to the current time on this\n   * device. And they can't be earlier than any links they depend on. */\n  validateTimestamps(link, graph) {\n    const { timestamp } = link.body;\n    const now = Date.now();\n    if (timestamp > now) {\n      return fail(`The link's timestamp is in the future.`, { link, now });\n    }\n    for (const hash4 of link.body.prev) {\n      const prevLink = graph.links[hash4];\n      if (prevLink.body.timestamp > timestamp)\n        return fail(`This link's timestamp can't be earlier than a previous link.`, {\n          link,\n          prevLink\n        });\n    }\n    return VALID;\n  }\n};\nvar fail = (msg, args) => {\n  return {\n    isValid: false,\n    error: new ValidationError(msg, args)\n  };\n};\n\n// src/validator/validate.ts\nimport { hash as hash3 } from \"@localfirst/crypto\";\nvar _validate = (graph, customValidators = {}) => {\n  {\n    const rootHash = graph.root;\n    const rootLink = graph.encryptedLinks[rootHash];\n    const computedHash = hashEncryptedLink(rootLink.encryptedBody);\n    if (computedHash !== rootHash)\n      return fail(\"Root hash does not match the hash of the root link\", {\n        rootHash,\n        computedHash,\n        rootLink\n      });\n  }\n  for (const headHash of graph.head) {\n    const headLink = graph.encryptedLinks[headHash];\n    const computedHash = hashEncryptedLink(headLink.encryptedBody);\n    if (computedHash !== headHash)\n      return fail(\"Head hash does not match the hash of the head link\", {\n        headHash,\n        computedHash,\n        headLink\n      });\n  }\n  const encryptedLinkHashes = Object.keys(graph.encryptedLinks);\n  const linkHashes = Object.keys(graph.links);\n  if (encryptedLinkHashes.length !== linkHashes.length)\n    return fail(\"Number of encrypted links does not match number of links\", {\n      encryptedLinkHashes,\n      linkHashes\n    });\n  const composeValidators = (...validators2) => (currentLink) => {\n    const mergedValidators = merge2(validators2);\n    for (const key in mergedValidators) {\n      const validator = mergedValidators[key];\n      try {\n        const result = validator(currentLink, graph);\n        if (!result.isValid) return result;\n      } catch (error) {\n        const { message } = error;\n        return fail(message, error);\n      }\n    }\n    return VALID;\n  };\n  const compositeValidator = composeValidators(validators, customValidators);\n  for (const link of Object.values(graph.links)) {\n    const result = compositeValidator(link);\n    if (!result.isValid) return result;\n  }\n  return VALID;\n};\nvar validate = memoize5(_validate, (graph) => hash3(\"memoize\", graph));\nvar merge2 = (validatorSets) => validatorSets.reduce((result, vs) => Object.assign(result, vs), {});\n\n// src/store/makeMachine.ts\nvar makeMachine = ({\n  initialState,\n  reducer,\n  resolver,\n  validators: validators2\n}) => {\n  return (graph) => {\n    validate(graph, validators2);\n    const sequence = getSequence(graph, resolver);\n    return sequence.reduce(reducer, initialState);\n  };\n};\n\n// src/store/Store.ts\nvar Store = class extends EventEmitter {\n  user;\n  context;\n  initialState;\n  reducer;\n  resolver;\n  validators;\n  keyring;\n  graph;\n  state;\n  constructor({\n    user,\n    context = {},\n    graph,\n    rootPayload,\n    initialState = {},\n    reducer,\n    validators: validators2,\n    resolver = baseResolver,\n    keys\n  }) {\n    super();\n    if (graph === void 0) {\n      assert3(isKeyset(keys), \"If no graph is provided, only pass a single keyset, not a keyring.\");\n      this.graph = createGraph({ user, rootPayload, keys });\n    } else if (isGraph(graph)) {\n      this.graph = graph;\n    } else {\n      assert3(keys);\n      this.graph = deserialize(graph, keys);\n    }\n    this.context = context;\n    this.initialState = initialState;\n    this.reducer = reducer;\n    this.validators = validators2;\n    this.resolver = resolver;\n    this.user = user;\n    this.keyring = createKeyring(keys);\n    this.updateState();\n  }\n  /** Returns the store's most recent state. */\n  getState() {\n    return this.state;\n  }\n  /** Returns the current hash graph */\n  getGraph() {\n    return this.graph;\n  }\n  /**\n   * Returns the current hash graph in serialized form; this can be used to rehydrate this\n   * store from storage.\n   * */\n  save() {\n    return serialize(this.graph);\n  }\n  /**\n   * Dispatches an action to be added to the hash graph. This is the only way to trigger a\n   * state change.\n   *\n   * The `reducer` function provided when creating the store will be called with the current state\n   * and the given `action`. Its return value will be considered the **next** state of the tree,\n   * and any change listeners will be notified.\n   *\n   * @returns For convenience, the same action object that was dispatched.\n   */\n  dispatch(action, keys) {\n    const actionWithPayload = {\n      payload: void 0,\n      ...action\n    };\n    if (keys === void 0) {\n      const prevHash = this.graph.head.sort()[0];\n      const prevPublicKey = this.graph.encryptedLinks[prevHash].recipientPublicKey;\n      keys = this.keyring[prevPublicKey];\n    } else {\n      this.keyring[keys.encryption.publicKey] = keys;\n    }\n    this.graph = append({\n      graph: this.graph,\n      action: actionWithPayload,\n      user: this.user,\n      keys,\n      context: this.context\n    });\n    const [head] = getHead(this.graph);\n    this.state = this.reducer(this.state, head);\n    this.emit(\"updated\", { head: this.graph.head });\n    return action;\n  }\n  /**\n   * Merges another graph (e.g. from a peer) with ours.\n   * @param theirGraph\n   * @returns this `Store` instance\n   */\n  merge(theirGraph) {\n    this.graph = merge(this.graph, theirGraph);\n    this.updateState();\n  }\n  /**\n   * Validates the store's integrity, using the built-in validators (verify hashes, check\n   * timestamps, etc.) as well as any custom validators provided by the application.\n   */\n  validate() {\n    return validate(this.graph, this.validators);\n  }\n  // PRIVATE\n  updateState() {\n    const machine = makeMachine({\n      initialState: this.initialState,\n      reducer: this.reducer,\n      resolver: this.resolver,\n      validators: this.validators\n    });\n    this.state = machine(this.graph);\n    this.emit(\"updated\", { head: this.graph.head });\n  }\n};\nvar isGraph = (source) => source?.hasOwnProperty(\"root\");\n\n// src/store/createStore.ts\nvar createStore = (options) => {\n  return new Store(options);\n};\n\n// src/sync/generateMessage.ts\nvar generateMessage = (graph, prevState) => {\n  const message = {\n    root: graph.root,\n    head: graph.head\n  };\n  const { their, our, lastCommonHead } = prevState;\n  const state = { ...prevState };\n  const ourHead = graph.head;\n  const theirHead = their.head;\n  if (our.reportedError) {\n    message.error = our.reportedError;\n    delete our.reportedError;\n    return [state, message];\n  }\n  const syncedLastTime = headsAreEqual(ourHead, lastCommonHead);\n  if (syncedLastTime) {\n    return [state, void 0];\n  }\n  const syncedThisTime = headsAreEqual(ourHead, theirHead);\n  if (syncedThisTime) {\n    state.lastCommonHead = ourHead;\n    return [state, message];\n  }\n  const theirHashLookup = Object.fromEntries(\n    [\n      // we know that they have their heads, and any of their predecessors\n      ...theirHead,\n      ...theirHead.flatMap((h) => getPredecessorHashes(graph, h)),\n      // their previous heads, and any of their predecessors\n      ...lastCommonHead,\n      ...lastCommonHead.flatMap((h) => getPredecessorHashes(graph, h)),\n      // anything in their link map\n      ...Object.keys(their.parentMap),\n      // anything we've already sent\n      ...our.links\n    ].map((h) => [h, true])\n  );\n  let hashesWeThinkTheyNeed = [];\n  const weAreAhead = theirHead.length > 0 && // if we don't know their head, we can't assume we're ahead\n  theirHead.every((h) => h in graph.links);\n  if (weAreAhead) {\n    hashesWeThinkTheyNeed = getHashes(graph).filter((hash4) => !(hash4 in theirHashLookup));\n  } else {\n    if (their.parentMap) {\n      const linksWeHave = { ...graph.encryptedLinks, ...their.encryptedLinks };\n      message.need = Object.keys(theirHashLookup).filter((hash4) => !(hash4 in linksWeHave));\n      hashesWeThinkTheyNeed = getHashes(graph).filter((hash4) => !(hash4 in theirHashLookup));\n    }\n    if (!headsAreEqual(ourHead, our.parentMapAtHead)) {\n      message.parentMap = getParentMap({ graph, end: lastCommonHead });\n      state.our.parentMapAtHead = ourHead;\n    }\n  }\n  const hashesTheyAskedFor = their.need;\n  const hashesToSend = hashesTheyAskedFor.concat(hashesWeThinkTheyNeed);\n  if (hashesToSend.length > 0) {\n    message.links = getEncryptedLinks(graph, hashesToSend);\n    const additionalDependencies = getParentMap({ graph, hashes: hashesToSend });\n    message.parentMap = { ...message.parentMap, ...additionalDependencies };\n  }\n  state.our.links = our.links.concat(hashesToSend);\n  state.their.need = [];\n  return [state, message];\n};\n\n// src/sync/initSyncState.ts\nvar initSyncState = () => ({\n  their: {\n    head: [],\n    encryptedLinks: {},\n    need: [],\n    parentMap: {}\n  },\n  our: {\n    head: [],\n    links: []\n  },\n  lastCommonHead: [],\n  failedSyncCount: 0\n});\n\n// src/sync/receiveMessage.ts\nimport { assert as assert4 } from \"@localfirst/shared\";\nvar receiveMessage = (graph, prevState, message, keys, decrypt = decryptGraph) => {\n  const keyring = createKeyring(keys);\n  const their = message;\n  assert4(graph.root === their.root, `Can't sync graphs with different roots`);\n  const state = {\n    ...prevState,\n    their: {\n      head: their.head,\n      need: their.need ?? [],\n      encryptedLinks: { ...prevState.their.encryptedLinks, ...their.links },\n      parentMap: { ...prevState.their.parentMap, ...their.parentMap }\n    }\n  };\n  if (Object.keys(state.their.encryptedLinks).length > 0) {\n    const { head } = their;\n    const ourChildMap = getChildMap(graph);\n    const theirChildMap = invertLinkMap(state.their.parentMap);\n    const childMap = { ...ourChildMap, ...theirChildMap };\n    const encryptedLinks = {\n      ...graph.encryptedLinks,\n      ...state.their.encryptedLinks\n    };\n    const encryptedGraph = {\n      ...graph,\n      head,\n      encryptedLinks,\n      childMap\n    };\n    const theirGraph = decrypt({ encryptedGraph, keys: keyring });\n    const mergedGraph = merge(graph, theirGraph);\n    const validation = validate(mergedGraph);\n    if (validation.isValid) {\n      graph = mergedGraph;\n    } else {\n      state.failedSyncCount += 1;\n      state.our.reportedError = validation.error;\n    }\n    state.their.encryptedLinks = {};\n    state.their.parentMap = {};\n  }\n  return [graph, state];\n};\n\n// src/user/createUser.ts\nimport { randomKey as randomKey2 } from \"@localfirst/crypto\";\nimport { createId as createId2 } from \"@paralleldrive/cuid2\";\nvar createUser = (userName, userId = createId2(), seed = randomKey2()) => {\n  return {\n    userName,\n    userId,\n    keys: createKeyset({ type: KeyType.USER, name: userId }, seed)\n  };\n};\n\n// src/user/redact.ts\nvar redactUser = (user) => {\n  const { userId, userName } = user;\n  return {\n    userId,\n    userName,\n    keys: redactKeys(user.keys)\n  };\n};\nexport {\n  EMPTY,\n  EMPTY_GRAPH,\n  ENCRYPTION,\n  EPHEMERAL_SCOPE,\n  HashPurpose,\n  KeyType,\n  LINK_HASH,\n  MERGE,\n  ROOT,\n  SIGNATURE,\n  SYMMETRIC,\n  Store,\n  VALID,\n  ValidationError,\n  append,\n  baseResolver,\n  byHash,\n  calculateConcurrency,\n  createGraph,\n  createKeyring,\n  createKeyset,\n  createStore,\n  createUser,\n  decryptGraph,\n  decryptLink,\n  deserialize,\n  fail,\n  generateMessage,\n  getChildMap,\n  getChildren,\n  getChildrenHashes,\n  getConcurrentBubbles,\n  getConcurrentHashes,\n  getConcurrentLinks,\n  getEncryptedLink,\n  getEncryptedLinks,\n  getHashes,\n  getHead,\n  getLatestGeneration,\n  getLink,\n  getParentMap,\n  getParents,\n  getPredecessorHashes,\n  getPredecessors,\n  getRoot,\n  getSequence,\n  getSuccessorHashes,\n  getSuccessors,\n  getTails,\n  hasSecrets,\n  headsAreEqual,\n  initSyncState,\n  invertLinkMap,\n  isConcurrent,\n  isKeyring,\n  isKeyset,\n  isPredecessor,\n  isPredecessorHash,\n  isSuccessor,\n  isSuccessorHash,\n  makeMachine,\n  memoizeResolver,\n  merge,\n  noFilter,\n  receiveMessage,\n  redactGraph,\n  redactKeys,\n  redactUser,\n  serialize,\n  topoSort,\n  validate,\n  validators\n};\n//# sourceMappingURL=index.js.map","// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n}\nfunction getDevTools() {\n  const w = getGlobal();\n  if (w.__xstate__) {\n    return w.__xstate__;\n  }\n  return undefined;\n}\nfunction registerService(service) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n}\nconst devToolsAdapter = service => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n};\n\nexport { devToolsAdapter, getGlobal, registerService };\n","import { devToolsAdapter } from '../dev/dist/xstate-dev.esm.js';\n\nclass Mailbox {\n  constructor(_process) {\n    this._process = _process;\n    this._active = false;\n    this._current = null;\n    this._last = null;\n  }\n  start() {\n    this._active = true;\n    this.flush();\n  }\n  clear() {\n    // we can't set _current to null because we might be currently processing\n    // and enqueue following clear shouldnt start processing the enqueued item immediately\n    if (this._current) {\n      this._current.next = null;\n      this._last = this._current;\n    }\n  }\n  enqueue(event) {\n    const enqueued = {\n      value: event,\n      next: null\n    };\n    if (this._current) {\n      this._last.next = enqueued;\n      this._last = enqueued;\n      return;\n    }\n    this._current = enqueued;\n    this._last = enqueued;\n    if (this._active) {\n      this.flush();\n    }\n  }\n  flush() {\n    while (this._current) {\n      // atm the given _process is responsible for implementing proper try/catch handling\n      // we assume here that this won't throw in a way that can affect this mailbox\n      const consumed = this._current;\n      this._process(consumed.value);\n      this._current = consumed.next;\n    }\n    this._last = null;\n  }\n}\n\nconst STATE_DELIMITER = '.';\nconst TARGETLESS_KEY = '';\nconst NULL_EVENT = '';\nconst STATE_IDENTIFIER = '#';\nconst WILDCARD = '*';\nconst XSTATE_INIT = 'xstate.init';\nconst XSTATE_ERROR = 'xstate.error';\nconst XSTATE_STOP = 'xstate.stop';\n\n/**\n * Returns an event that represents an implicit event that is sent after the\n * specified `delay`.\n *\n * @param delayRef The delay in milliseconds\n * @param id The state node ID where this event is handled\n */\nfunction createAfterEvent(delayRef, id) {\n  return {\n    type: `xstate.after.${delayRef}.${id}`\n  };\n}\n\n/**\n * Returns an event that represents that a final state node has been reached in\n * the parent state node.\n *\n * @param id The final state node's parent state node `id`\n * @param output The data to pass into the event\n */\nfunction createDoneStateEvent(id, output) {\n  return {\n    type: `xstate.done.state.${id}`,\n    output\n  };\n}\n\n/**\n * Returns an event that represents that an invoked service has terminated.\n *\n * An invoked service is terminated when it has reached a top-level final state\n * node, but not when it is canceled.\n *\n * @param invokeId The invoked service ID\n * @param output The data to pass into the event\n */\nfunction createDoneActorEvent(invokeId, output) {\n  return {\n    type: `xstate.done.actor.${invokeId}`,\n    output,\n    actorId: invokeId\n  };\n}\nfunction createErrorActorEvent(id, error) {\n  return {\n    type: `xstate.error.actor.${id}`,\n    error,\n    actorId: id\n  };\n}\nfunction createInitEvent(input) {\n  return {\n    type: XSTATE_INIT,\n    input\n  };\n}\n\n/**\n * This function makes sure that unhandled errors are thrown in a separate\n * macrotask. It allows those errors to be detected by global error handlers and\n * reported to bug tracking services without interrupting our own stack of\n * execution.\n *\n * @param err Error to be thrown\n */\nfunction reportUnhandledError(err) {\n  setTimeout(() => {\n    throw err;\n  });\n}\n\nconst symbolObservable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n\nfunction matchesState(parentStateId, childStateId) {\n  const parentStateValue = toStateValue(parentStateId);\n  const childStateValue = toStateValue(childStateId);\n  if (typeof childStateValue === 'string') {\n    if (typeof parentStateValue === 'string') {\n      return childStateValue === parentStateValue;\n    }\n\n    // Parent more specific than child\n    return false;\n  }\n  if (typeof parentStateValue === 'string') {\n    return parentStateValue in childStateValue;\n  }\n  return Object.keys(parentStateValue).every(key => {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction toStatePath(stateId) {\n  if (isArray(stateId)) {\n    return stateId;\n  }\n  const result = [];\n  let segment = '';\n  for (let i = 0; i < stateId.length; i++) {\n    const char = stateId.charCodeAt(i);\n    switch (char) {\n      // \\\n      case 92:\n        // consume the next character\n        segment += stateId[i + 1];\n        // and skip over it\n        i++;\n        continue;\n      // .\n      case 46:\n        result.push(segment);\n        segment = '';\n        continue;\n    }\n    segment += stateId[i];\n  }\n  result.push(segment);\n  return result;\n}\nfunction toStateValue(stateValue) {\n  if (isMachineSnapshot(stateValue)) {\n    return stateValue.value;\n  }\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n  const statePath = toStatePath(stateValue);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n  const value = {};\n  let marker = value;\n  for (let i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      const previous = marker;\n      marker = {};\n      previous[statePath[i]] = marker;\n    }\n  }\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  const result = {};\n  const collectionKeys = Object.keys(collection);\n  for (let i = 0; i < collectionKeys.length; i++) {\n    const key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n  return result;\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  return toArrayStrict(value);\n}\nfunction resolveOutput(mapper, context, event, self) {\n  if (typeof mapper === 'function') {\n    return mapper({\n      context,\n      event,\n      self\n    });\n  }\n  return mapper;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isErrorActorEvent(event) {\n  return event.type.startsWith('xstate.error.actor');\n}\nfunction toTransitionConfigArray(configLike) {\n  return toArrayStrict(configLike).map(transitionLike => {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string') {\n      return {\n        target: transitionLike\n      };\n    }\n    return transitionLike;\n  });\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n  return toArray(target);\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  const isObserver = typeof nextHandler === 'object';\n  const self = isObserver ? nextHandler : undefined;\n  return {\n    next: (isObserver ? nextHandler.next : nextHandler)?.bind(self),\n    error: (isObserver ? nextHandler.error : errorHandler)?.bind(self),\n    complete: (isObserver ? nextHandler.complete : completionHandler)?.bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return `${index}.${stateNodeId}`;\n}\nfunction resolveReferencedActor(machine, src) {\n  const match = src.match(/^xstate\\.invoke\\.(\\d+)\\.(.*)/);\n  if (!match) {\n    return machine.implementations.actors[src];\n  }\n  const [, indexStr, nodeId] = match;\n  const node = machine.getStateNodeById(nodeId);\n  const invokeConfig = node.config.invoke;\n  return (Array.isArray(invokeConfig) ? invokeConfig[indexStr] : invokeConfig).src;\n}\nfunction getAllOwnEventDescriptors(snapshot) {\n  return [...new Set([...snapshot._nodes.flatMap(sn => sn.ownEvents)])];\n}\n\nfunction createScheduledEventId(actorRef, id) {\n  return `${actorRef.sessionId}.${id}`;\n}\nlet idCounter = 0;\nfunction createSystem(rootActor, options) {\n  const children = new Map();\n  const keyedActors = new Map();\n  const reverseKeyedActors = new WeakMap();\n  const inspectionObservers = new Set();\n  const timerMap = {};\n  const {\n    clock,\n    logger\n  } = options;\n  const scheduler = {\n    schedule: (source, target, event, delay, id = Math.random().toString(36).slice(2)) => {\n      const scheduledEvent = {\n        source,\n        target,\n        event,\n        delay,\n        id,\n        startedAt: Date.now()\n      };\n      const scheduledEventId = createScheduledEventId(source, id);\n      system._snapshot._scheduledEvents[scheduledEventId] = scheduledEvent;\n      const timeout = clock.setTimeout(() => {\n        delete timerMap[scheduledEventId];\n        delete system._snapshot._scheduledEvents[scheduledEventId];\n        system._relay(source, target, event);\n      }, delay);\n      timerMap[scheduledEventId] = timeout;\n    },\n    cancel: (source, id) => {\n      const scheduledEventId = createScheduledEventId(source, id);\n      const timeout = timerMap[scheduledEventId];\n      delete timerMap[scheduledEventId];\n      delete system._snapshot._scheduledEvents[scheduledEventId];\n      if (timeout !== undefined) {\n        clock.clearTimeout(timeout);\n      }\n    },\n    cancelAll: actorRef => {\n      for (const scheduledEventId in system._snapshot._scheduledEvents) {\n        const scheduledEvent = system._snapshot._scheduledEvents[scheduledEventId];\n        if (scheduledEvent.source === actorRef) {\n          scheduler.cancel(actorRef, scheduledEvent.id);\n        }\n      }\n    }\n  };\n  const sendInspectionEvent = event => {\n    if (!inspectionObservers.size) {\n      return;\n    }\n    const resolvedInspectionEvent = {\n      ...event,\n      rootId: rootActor.sessionId\n    };\n    inspectionObservers.forEach(observer => observer.next?.(resolvedInspectionEvent));\n  };\n  const system = {\n    _snapshot: {\n      _scheduledEvents: (options?.snapshot && options.snapshot.scheduler) ?? {}\n    },\n    _bookId: () => `x:${idCounter++}`,\n    _register: (sessionId, actorRef) => {\n      children.set(sessionId, actorRef);\n      return sessionId;\n    },\n    _unregister: actorRef => {\n      children.delete(actorRef.sessionId);\n      const systemId = reverseKeyedActors.get(actorRef);\n      if (systemId !== undefined) {\n        keyedActors.delete(systemId);\n        reverseKeyedActors.delete(actorRef);\n      }\n    },\n    get: systemId => {\n      return keyedActors.get(systemId);\n    },\n    _set: (systemId, actorRef) => {\n      const existing = keyedActors.get(systemId);\n      if (existing && existing !== actorRef) {\n        throw new Error(`Actor with system ID '${systemId}' already exists.`);\n      }\n      keyedActors.set(systemId, actorRef);\n      reverseKeyedActors.set(actorRef, systemId);\n    },\n    inspect: observerOrFn => {\n      const observer = toObserver(observerOrFn);\n      inspectionObservers.add(observer);\n      return {\n        unsubscribe() {\n          inspectionObservers.delete(observer);\n        }\n      };\n    },\n    _sendInspectionEvent: sendInspectionEvent,\n    _relay: (source, target, event) => {\n      system._sendInspectionEvent({\n        type: '@xstate.event',\n        sourceRef: source,\n        actorRef: target,\n        event\n      });\n      target._send(event);\n    },\n    scheduler,\n    getSnapshot: () => {\n      return {\n        _scheduledEvents: {\n          ...system._snapshot._scheduledEvents\n        }\n      };\n    },\n    start: () => {\n      const scheduledEvents = system._snapshot._scheduledEvents;\n      system._snapshot._scheduledEvents = {};\n      for (const scheduledId in scheduledEvents) {\n        const {\n          source,\n          target,\n          event,\n          delay,\n          id\n        } = scheduledEvents[scheduledId];\n        scheduler.schedule(source, target, event, delay, id);\n      }\n    },\n    _clock: clock,\n    _logger: logger\n  };\n  return system;\n}\n\nlet executingCustomAction = false;\nconst $$ACTOR_TYPE = 1;\n\n// those values are currently used by @xstate/react directly so it's important to keep the assigned values in sync\nlet ProcessingStatus = /*#__PURE__*/function (ProcessingStatus) {\n  ProcessingStatus[ProcessingStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  ProcessingStatus[ProcessingStatus[\"Running\"] = 1] = \"Running\";\n  ProcessingStatus[ProcessingStatus[\"Stopped\"] = 2] = \"Stopped\";\n  return ProcessingStatus;\n}({});\nconst defaultOptions = {\n  clock: {\n    setTimeout: (fn, ms) => {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout: id => {\n      return clearTimeout(id);\n    }\n  },\n  logger: console.log.bind(console),\n  devTools: false\n};\n\n/**\n * An Actor is a running process that can receive events, send events and change\n * its behavior based on the events it receives, which can cause effects outside\n * of the actor. When you run a state machine, it becomes an actor.\n */\nclass Actor {\n  /**\n   * Creates a new actor instance for the given logic with the provided options,\n   * if any.\n   *\n   * @param logic The logic to create an actor from\n   * @param options Actor options\n   */\n  constructor(logic, options) {\n    this.logic = logic;\n    /** The current internal state of the actor. */\n    this._snapshot = void 0;\n    /**\n     * The clock that is responsible for setting and clearing timeouts, such as\n     * delayed events and transitions.\n     */\n    this.clock = void 0;\n    this.options = void 0;\n    /** The unique identifier for this actor relative to its parent. */\n    this.id = void 0;\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.observers = new Set();\n    this.eventListeners = new Map();\n    this.logger = void 0;\n    /** @internal */\n    this._processingStatus = ProcessingStatus.NotStarted;\n    // Actor Ref\n    this._parent = void 0;\n    /** @internal */\n    this._syncSnapshot = void 0;\n    this.ref = void 0;\n    // TODO: add typings for system\n    this._actorScope = void 0;\n    this._systemId = void 0;\n    /** The globally unique process ID for this invocation. */\n    this.sessionId = void 0;\n    /** The system to which this actor belongs. */\n    this.system = void 0;\n    this._doneEvent = void 0;\n    this.src = void 0;\n    // array of functions to defer\n    this._deferred = [];\n    const resolvedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const {\n      clock,\n      logger,\n      parent,\n      syncSnapshot,\n      id,\n      systemId,\n      inspect\n    } = resolvedOptions;\n    this.system = parent ? parent.system : createSystem(this, {\n      clock,\n      logger\n    });\n    if (inspect && !parent) {\n      // Always inspect at the system-level\n      this.system.inspect(toObserver(inspect));\n    }\n    this.sessionId = this.system._bookId();\n    this.id = id ?? this.sessionId;\n    this.logger = options?.logger ?? this.system._logger;\n    this.clock = options?.clock ?? this.system._clock;\n    this._parent = parent;\n    this._syncSnapshot = syncSnapshot;\n    this.options = resolvedOptions;\n    this.src = resolvedOptions.src ?? logic;\n    this.ref = this;\n    this._actorScope = {\n      self: this,\n      id: this.id,\n      sessionId: this.sessionId,\n      logger: this.logger,\n      defer: fn => {\n        this._deferred.push(fn);\n      },\n      system: this.system,\n      stopChild: child => {\n        if (child._parent !== this) {\n          throw new Error(`Cannot stop child actor ${child.id} of ${this.id} because it is not a child`);\n        }\n        child._stop();\n      },\n      emit: emittedEvent => {\n        const listeners = this.eventListeners.get(emittedEvent.type);\n        const wildcardListener = this.eventListeners.get('*');\n        if (!listeners && !wildcardListener) {\n          return;\n        }\n        const allListeners = [...(listeners ? listeners.values() : []), ...(wildcardListener ? wildcardListener.values() : [])];\n        for (const handler of allListeners) {\n          handler(emittedEvent);\n        }\n      },\n      actionExecutor: action => {\n        const exec = () => {\n          this._actorScope.system._sendInspectionEvent({\n            type: '@xstate.action',\n            actorRef: this,\n            action: {\n              type: action.type,\n              params: action.params\n            }\n          });\n          if (!action.exec) {\n            return;\n          }\n          const saveExecutingCustomAction = executingCustomAction;\n          try {\n            executingCustomAction = true;\n            action.exec(action.info, action.params);\n          } finally {\n            executingCustomAction = saveExecutingCustomAction;\n          }\n        };\n        if (this._processingStatus === ProcessingStatus.Running) {\n          exec();\n        } else {\n          this._deferred.push(exec);\n        }\n      }\n    };\n\n    // Ensure that the send method is bound to this Actor instance\n    // if destructured\n    this.send = this.send.bind(this);\n    this.system._sendInspectionEvent({\n      type: '@xstate.actor',\n      actorRef: this\n    });\n    if (systemId) {\n      this._systemId = systemId;\n      this.system._set(systemId, this);\n    }\n    this._initState(options?.snapshot ?? options?.state);\n    if (systemId && this._snapshot.status !== 'active') {\n      this.system._unregister(this);\n    }\n  }\n  _initState(persistedState) {\n    try {\n      this._snapshot = persistedState ? this.logic.restoreSnapshot ? this.logic.restoreSnapshot(persistedState, this._actorScope) : persistedState : this.logic.getInitialSnapshot(this._actorScope, this.options?.input);\n    } catch (err) {\n      // if we get here then it means that we assign a value to this._snapshot that is not of the correct type\n      // we can't get the true `TSnapshot & { status: 'error'; }`, it's impossible\n      // so right now this is a lie of sorts\n      this._snapshot = {\n        status: 'error',\n        output: undefined,\n        error: err\n      };\n    }\n  }\n  update(snapshot, event) {\n    // Update state\n    this._snapshot = snapshot;\n\n    // Execute deferred effects\n    let deferredFn;\n    while (deferredFn = this._deferred.shift()) {\n      try {\n        deferredFn();\n      } catch (err) {\n        // this error can only be caught when executing *initial* actions\n        // it's the only time when we call actions provided by the user through those deferreds\n        // when the actor is already running we always execute them synchronously while transitioning\n        // no \"builtin deferred\" should actually throw an error since they are either safe\n        // or the control flow is passed through the mailbox and errors should be caught by the `_process` used by the mailbox\n        this._deferred.length = 0;\n        this._snapshot = {\n          ...snapshot,\n          status: 'error',\n          error: err\n        };\n      }\n    }\n    switch (this._snapshot.status) {\n      case 'active':\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        break;\n      case 'done':\n        // next observers are meant to be notified about done snapshots\n        // this can be seen as something that is different from how observable work\n        // but with observables `complete` callback is called without any arguments\n        // it's more ergonomic for XState to treat a done snapshot as a \"next\" value\n        // and the completion event as something that is separate,\n        // something that merely follows emitting that done snapshot\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        this._stopProcedure();\n        this._complete();\n        this._doneEvent = createDoneActorEvent(this.id, this._snapshot.output);\n        if (this._parent) {\n          this.system._relay(this, this._parent, this._doneEvent);\n        }\n        break;\n      case 'error':\n        this._error(this._snapshot.error);\n        break;\n    }\n    this.system._sendInspectionEvent({\n      type: '@xstate.snapshot',\n      actorRef: this,\n      event,\n      snapshot\n    });\n  }\n\n  /**\n   * Subscribe an observer to an actor’s snapshot values.\n   *\n   * @remarks\n   * The observer will receive the actor’s snapshot value when it is emitted.\n   * The observer can be:\n   *\n   * - A plain function that receives the latest snapshot, or\n   * - An observer object whose `.next(snapshot)` method receives the latest\n   *   snapshot\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as a plain function\n   * const subscription = actor.subscribe((snapshot) => {\n   *   console.log(snapshot);\n   * });\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as an object\n   * const subscription = actor.subscribe({\n   *   next(snapshot) {\n   *     console.log(snapshot);\n   *   },\n   *   error(err) {\n   *     // ...\n   *   },\n   *   complete() {\n   *     // ...\n   *   }\n   * });\n   * ```\n   *\n   * The return value of `actor.subscribe(observer)` is a subscription object\n   * that has an `.unsubscribe()` method. You can call\n   * `subscription.unsubscribe()` to unsubscribe the observer:\n   *\n   * @example\n   *\n   * ```ts\n   * const subscription = actor.subscribe((snapshot) => {\n   *   // ...\n   * });\n   *\n   * // Unsubscribe the observer\n   * subscription.unsubscribe();\n   * ```\n   *\n   * When the actor is stopped, all of its observers will automatically be\n   * unsubscribed.\n   *\n   * @param observer - Either a plain function that receives the latest\n   *   snapshot, or an observer object whose `.next(snapshot)` method receives\n   *   the latest snapshot\n   */\n\n  subscribe(nextListenerOrObserver, errorListener, completeListener) {\n    const observer = toObserver(nextListenerOrObserver, errorListener, completeListener);\n    if (this._processingStatus !== ProcessingStatus.Stopped) {\n      this.observers.add(observer);\n    } else {\n      switch (this._snapshot.status) {\n        case 'done':\n          try {\n            observer.complete?.();\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n          break;\n        case 'error':\n          {\n            const err = this._snapshot.error;\n            if (!observer.error) {\n              reportUnhandledError(err);\n            } else {\n              try {\n                observer.error(err);\n              } catch (err) {\n                reportUnhandledError(err);\n              }\n            }\n            break;\n          }\n      }\n    }\n    return {\n      unsubscribe: () => {\n        this.observers.delete(observer);\n      }\n    };\n  }\n  on(type, handler) {\n    let listeners = this.eventListeners.get(type);\n    if (!listeners) {\n      listeners = new Set();\n      this.eventListeners.set(type, listeners);\n    }\n    const wrappedHandler = handler.bind(undefined);\n    listeners.add(wrappedHandler);\n    return {\n      unsubscribe: () => {\n        listeners.delete(wrappedHandler);\n      }\n    };\n  }\n\n  /** Starts the Actor from the initial state */\n  start() {\n    if (this._processingStatus === ProcessingStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    if (this._syncSnapshot) {\n      this.subscribe({\n        next: snapshot => {\n          if (snapshot.status === 'active') {\n            this.system._relay(this, this._parent, {\n              type: `xstate.snapshot.${this.id}`,\n              snapshot\n            });\n          }\n        },\n        error: () => {}\n      });\n    }\n    this.system._register(this.sessionId, this);\n    if (this._systemId) {\n      this.system._set(this._systemId, this);\n    }\n    this._processingStatus = ProcessingStatus.Running;\n\n    // TODO: this isn't correct when rehydrating\n    const initEvent = createInitEvent(this.options.input);\n    this.system._sendInspectionEvent({\n      type: '@xstate.event',\n      sourceRef: this._parent,\n      actorRef: this,\n      event: initEvent\n    });\n    const status = this._snapshot.status;\n    switch (status) {\n      case 'done':\n        // a state machine can be \"done\" upon initialization (it could reach a final state using initial microsteps)\n        // we still need to complete observers, flush deferreds etc\n        this.update(this._snapshot, initEvent);\n        // TODO: rethink cleanup of observers, mailbox, etc\n        return this;\n      case 'error':\n        this._error(this._snapshot.error);\n        return this;\n    }\n    if (!this._parent) {\n      this.system.start();\n    }\n    if (this.logic.start) {\n      try {\n        this.logic.start(this._snapshot, this._actorScope);\n      } catch (err) {\n        this._snapshot = {\n          ...this._snapshot,\n          status: 'error',\n          error: err\n        };\n        this._error(err);\n        return this;\n      }\n    }\n\n    // TODO: this notifies all subscribers but usually this is redundant\n    // there is no real change happening here\n    // we need to rethink if this needs to be refactored\n    this.update(this._snapshot, initEvent);\n    if (this.options.devTools) {\n      this.attachDevTools();\n    }\n    this.mailbox.start();\n    return this;\n  }\n  _process(event) {\n    let nextState;\n    let caughtError;\n    try {\n      nextState = this.logic.transition(this._snapshot, event, this._actorScope);\n    } catch (err) {\n      // we wrap it in a box so we can rethrow it later even if falsy value gets caught here\n      caughtError = {\n        err\n      };\n    }\n    if (caughtError) {\n      const {\n        err\n      } = caughtError;\n      this._snapshot = {\n        ...this._snapshot,\n        status: 'error',\n        error: err\n      };\n      this._error(err);\n      return;\n    }\n    this.update(nextState, event);\n    if (event.type === XSTATE_STOP) {\n      this._stopProcedure();\n      this._complete();\n    }\n  }\n  _stop() {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return this;\n    }\n    this.mailbox.clear();\n    if (this._processingStatus === ProcessingStatus.NotStarted) {\n      this._processingStatus = ProcessingStatus.Stopped;\n      return this;\n    }\n    this.mailbox.enqueue({\n      type: XSTATE_STOP\n    });\n    return this;\n  }\n\n  /** Stops the Actor and unsubscribe all listeners. */\n  stop() {\n    if (this._parent) {\n      throw new Error('A non-root actor cannot be stopped directly.');\n    }\n    return this._stop();\n  }\n  _complete() {\n    for (const observer of this.observers) {\n      try {\n        observer.complete?.();\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    this.observers.clear();\n  }\n  _reportError(err) {\n    if (!this.observers.size) {\n      if (!this._parent) {\n        reportUnhandledError(err);\n      }\n      return;\n    }\n    let reportError = false;\n    for (const observer of this.observers) {\n      const errorListener = observer.error;\n      reportError ||= !errorListener;\n      try {\n        errorListener?.(err);\n      } catch (err2) {\n        reportUnhandledError(err2);\n      }\n    }\n    this.observers.clear();\n    if (reportError) {\n      reportUnhandledError(err);\n    }\n  }\n  _error(err) {\n    this._stopProcedure();\n    this._reportError(err);\n    if (this._parent) {\n      this.system._relay(this, this._parent, createErrorActorEvent(this.id, err));\n    }\n  }\n  // TODO: atm children don't belong entirely to the actor so\n  // in a way - it's not even super aware of them\n  // so we can't stop them from here but we really should!\n  // right now, they are being stopped within the machine's transition\n  // but that could throw and leave us with \"orphaned\" active actors\n  _stopProcedure() {\n    if (this._processingStatus !== ProcessingStatus.Running) {\n      // Actor already stopped; do nothing\n      return this;\n    }\n\n    // Cancel all delayed events\n    this.system.scheduler.cancelAll(this);\n\n    // TODO: mailbox.reset\n    this.mailbox.clear();\n    // TODO: after `stop` we must prepare ourselves for receiving events again\n    // events sent *after* stop signal must be queued\n    // it seems like this should be the common behavior for all of our consumers\n    // so perhaps this should be unified somehow for all of them\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this._processingStatus = ProcessingStatus.Stopped;\n    this.system._unregister(this);\n    return this;\n  }\n\n  /** @internal */\n  _send(event) {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    this.mailbox.enqueue(event);\n  }\n\n  /**\n   * Sends an event to the running Actor to trigger a transition.\n   *\n   * @param event The event to send\n   */\n  send(event) {\n    this.system._relay(undefined, this, event);\n  }\n  attachDevTools() {\n    const {\n      devTools\n    } = this.options;\n    if (devTools) {\n      const resolvedDevToolsAdapter = typeof devTools === 'function' ? devTools : devToolsAdapter;\n      resolvedDevToolsAdapter(this);\n    }\n  }\n  toJSON() {\n    return {\n      xstate$$type: $$ACTOR_TYPE,\n      id: this.id\n    };\n  }\n\n  /**\n   * Obtain the internal state of the actor, which can be persisted.\n   *\n   * @remarks\n   * The internal state can be persisted from any actor, not only machines.\n   *\n   * Note that the persisted state is not the same as the snapshot from\n   * {@link Actor.getSnapshot}. Persisted state represents the internal state of\n   * the actor, while snapshots represent the actor's last emitted value.\n   *\n   * Can be restored with {@link ActorOptions.state}\n   * @see https://stately.ai/docs/persistence\n   */\n\n  getPersistedSnapshot(options) {\n    return this.logic.getPersistedSnapshot(this._snapshot, options);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n\n  /**\n   * Read an actor’s snapshot synchronously.\n   *\n   * @remarks\n   * The snapshot represent an actor's last emitted value.\n   *\n   * When an actor receives an event, its internal state may change. An actor\n   * may emit a snapshot when a state transition occurs.\n   *\n   * Note that some actors, such as callback actors generated with\n   * `fromCallback`, will not emit snapshots.\n   * @see {@link Actor.subscribe} to subscribe to an actor’s snapshot values.\n   * @see {@link Actor.getPersistedSnapshot} to persist the internal state of an actor (which is more than just a snapshot).\n   */\n  getSnapshot() {\n    return this._snapshot;\n  }\n}\n/**\n * Creates a new actor instance for the given actor logic with the provided\n * options, if any.\n *\n * @remarks\n * When you create an actor from actor logic via `createActor(logic)`, you\n * implicitly create an actor system where the created actor is the root actor.\n * Any actors spawned from this root actor and its descendants are part of that\n * actor system.\n * @example\n *\n * ```ts\n * import { createActor } from 'xstate';\n * import { someActorLogic } from './someActorLogic.ts';\n *\n * // Creating the actor, which implicitly creates an actor system with itself as the root actor\n * const actor = createActor(someActorLogic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n *\n * // Actors must be started by calling `actor.start()`, which will also start the actor system.\n * actor.start();\n *\n * // Actors can receive events\n * actor.send({ type: 'someEvent' });\n *\n * // You can stop root actors by calling `actor.stop()`, which will also stop the actor system and all actors in that system.\n * actor.stop();\n * ```\n *\n * @param logic - The actor logic to create an actor from. For a state machine\n *   actor logic creator, see {@link createMachine}. Other actor logic creators\n *   include {@link fromCallback}, {@link fromEventObservable},\n *   {@link fromObservable}, {@link fromPromise}, and {@link fromTransition}.\n * @param options - Actor options\n */\nfunction createActor(logic, ...[options]) {\n  return new Actor(logic, options);\n}\n\n/**\n * Creates a new Interpreter instance for the given machine with the provided\n * options, if any.\n *\n * @deprecated Use `createActor` instead\n * @alias\n */\nconst interpret = createActor;\n\n/**\n * @deprecated Use `Actor` instead.\n * @alias\n */\n\nfunction resolveCancel(_, snapshot, actionArgs, actionParams, {\n  sendId\n}) {\n  const resolvedSendId = typeof sendId === 'function' ? sendId(actionArgs, actionParams) : sendId;\n  return [snapshot, {\n    sendId: resolvedSendId\n  }, undefined];\n}\nfunction executeCancel(actorScope, params) {\n  actorScope.defer(() => {\n    actorScope.system.scheduler.cancel(actorScope.self, params.sendId);\n  });\n}\n/**\n * Cancels a delayed `sendTo(...)` action that is waiting to be executed. The\n * canceled `sendTo(...)` action will not send its event or execute, unless the\n * `delay` has already elapsed before `cancel(...)` is called.\n *\n * @example\n *\n * ```ts\n * import { createMachine, sendTo, cancel } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     sendEvent: {\n *       actions: sendTo(\n *         'some-actor',\n *         { type: 'someEvent' },\n *         {\n *           id: 'some-id',\n *           delay: 1000\n *         }\n *       )\n *     },\n *     cancelEvent: {\n *       actions: cancel('some-id')\n *     }\n *   }\n * });\n * ```\n *\n * @param sendId The `id` of the `sendTo(...)` action to cancel.\n */\nfunction cancel(sendId) {\n  function cancel(_args, _params) {\n  }\n  cancel.type = 'xstate.cancel';\n  cancel.sendId = sendId;\n  cancel.resolve = resolveCancel;\n  cancel.execute = executeCancel;\n  return cancel;\n}\n\nfunction resolveSpawn(actorScope, snapshot, actionArgs, _actionParams, {\n  id,\n  systemId,\n  src,\n  input,\n  syncSnapshot\n}) {\n  const logic = typeof src === 'string' ? resolveReferencedActor(snapshot.machine, src) : src;\n  const resolvedId = typeof id === 'function' ? id(actionArgs) : id;\n  let actorRef;\n  let resolvedInput = undefined;\n  if (logic) {\n    resolvedInput = typeof input === 'function' ? input({\n      context: snapshot.context,\n      event: actionArgs.event,\n      self: actorScope.self\n    }) : input;\n    actorRef = createActor(logic, {\n      id: resolvedId,\n      src,\n      parent: actorScope.self,\n      syncSnapshot,\n      systemId,\n      input: resolvedInput\n    });\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children: {\n      ...snapshot.children,\n      [resolvedId]: actorRef\n    }\n  }), {\n    id,\n    systemId,\n    actorRef,\n    src,\n    input: resolvedInput\n  }, undefined];\n}\nfunction executeSpawn(actorScope, {\n  actorRef\n}) {\n  if (!actorRef) {\n    return;\n  }\n  actorScope.defer(() => {\n    if (actorRef._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    actorRef.start();\n  });\n}\nfunction spawnChild(...[src, {\n  id,\n  systemId,\n  input,\n  syncSnapshot = false\n} = {}]) {\n  function spawnChild(_args, _params) {\n  }\n  spawnChild.type = 'xstate.spawnChild';\n  spawnChild.id = id;\n  spawnChild.systemId = systemId;\n  spawnChild.src = src;\n  spawnChild.input = input;\n  spawnChild.syncSnapshot = syncSnapshot;\n  spawnChild.resolve = resolveSpawn;\n  spawnChild.execute = executeSpawn;\n  return spawnChild;\n}\n\nfunction resolveStop(_, snapshot, args, actionParams, {\n  actorRef\n}) {\n  const actorRefOrString = typeof actorRef === 'function' ? actorRef(args, actionParams) : actorRef;\n  const resolvedActorRef = typeof actorRefOrString === 'string' ? snapshot.children[actorRefOrString] : actorRefOrString;\n  let children = snapshot.children;\n  if (resolvedActorRef) {\n    children = {\n      ...children\n    };\n    delete children[resolvedActorRef.id];\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children\n  }), resolvedActorRef, undefined];\n}\nfunction executeStop(actorScope, actorRef) {\n  if (!actorRef) {\n    return;\n  }\n\n  // we need to eagerly unregister it here so a new actor with the same systemId can be registered immediately\n  // since we defer actual stopping of the actor but we don't defer actor creations (and we can't do that)\n  // this could throw on `systemId` collision, for example, when dealing with reentering transitions\n  actorScope.system._unregister(actorRef);\n\n  // this allows us to prevent an actor from being started if it gets stopped within the same macrostep\n  // this can happen, for example, when the invoking state is being exited immediately by an always transition\n  if (actorRef._processingStatus !== ProcessingStatus.Running) {\n    actorScope.stopChild(actorRef);\n    return;\n  }\n  // stopping a child enqueues a stop event in the child actor's mailbox\n  // we need for all of the already enqueued events to be processed before we stop the child\n  // the parent itself might want to send some events to a child (for example from exit actions on the invoking state)\n  // and we don't want to ignore those events\n  actorScope.defer(() => {\n    actorScope.stopChild(actorRef);\n  });\n}\n/**\n * Stops a child actor.\n *\n * @param actorRef The actor to stop.\n */\nfunction stopChild(actorRef) {\n  function stop(_args, _params) {\n  }\n  stop.type = 'xstate.stopChild';\n  stop.actorRef = actorRef;\n  stop.resolve = resolveStop;\n  stop.execute = executeStop;\n  return stop;\n}\n\n/**\n * Stops a child actor.\n *\n * @deprecated Use `stopChild(...)` instead\n * @alias\n */\nconst stop = stopChild;\n\nfunction checkStateIn(snapshot, _, {\n  stateValue\n}) {\n  if (typeof stateValue === 'string' && isStateId(stateValue)) {\n    const target = snapshot.machine.getStateNodeById(stateValue);\n    return snapshot._nodes.some(sn => sn === target);\n  }\n  return snapshot.matches(stateValue);\n}\nfunction stateIn(stateValue) {\n  function stateIn() {\n    return false;\n  }\n  stateIn.check = checkStateIn;\n  stateIn.stateValue = stateValue;\n  return stateIn;\n}\nfunction checkNot(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return !evaluateGuard(guards[0], context, event, snapshot);\n}\n\n/**\n * Higher-order guard that evaluates to `true` if the `guard` passed to it\n * evaluates to `false`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, not } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => false\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: not('someNamedGuard'),\n *       actions: () => {\n *         // will be executed if guard in `not(...)`\n *         // evaluates to `false`\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard\n */\nfunction not(guard) {\n  function not(_args, _params) {\n    return false;\n  }\n  not.check = checkNot;\n  not.guards = [guard];\n  return not;\n}\nfunction checkAnd(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.every(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if all `guards` passed to it\n * evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, and } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: and([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if all guards in `and(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction and(guards) {\n  function and(_args, _params) {\n    return false;\n  }\n  and.check = checkAnd;\n  and.guards = guards;\n  return and;\n}\nfunction checkOr(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.some(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if any of the `guards` passed to\n * it evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, or } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: or([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if any of the guards in `or(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction or(guards) {\n  function or(_args, _params) {\n    return false;\n  }\n  or.check = checkOr;\n  or.guards = guards;\n  return or;\n}\n\n// TODO: throw on cycles (depth check should be enough)\nfunction evaluateGuard(guard, context, event, snapshot) {\n  const {\n    machine\n  } = snapshot;\n  const isInline = typeof guard === 'function';\n  const resolved = isInline ? guard : machine.implementations.guards[typeof guard === 'string' ? guard : guard.type];\n  if (!isInline && !resolved) {\n    throw new Error(`Guard '${typeof guard === 'string' ? guard : guard.type}' is not implemented.'.`);\n  }\n  if (typeof resolved !== 'function') {\n    return evaluateGuard(resolved, context, event, snapshot);\n  }\n  const guardArgs = {\n    context,\n    event\n  };\n  const guardParams = isInline || typeof guard === 'string' ? undefined : 'params' in guard ? typeof guard.params === 'function' ? guard.params({\n    context,\n    event\n  }) : guard.params : undefined;\n  if (!('check' in resolved)) {\n    // the existing type of `.guards` assumes non-nullable `TExpressionGuard`\n    // inline guards expect `TExpressionGuard` to be set to `undefined`\n    // it's fine to cast this here, our logic makes sure that we call those 2 \"variants\" correctly\n    return resolved(guardArgs, guardParams);\n  }\n  const builtinGuard = resolved;\n  return builtinGuard.check(snapshot, guardArgs, resolved // this holds all params\n  );\n}\n\nconst isAtomicStateNode = stateNode => stateNode.type === 'atomic' || stateNode.type === 'final';\nfunction getChildren(stateNode) {\n  return Object.values(stateNode.states).filter(sn => sn.type !== 'history');\n}\nfunction getProperAncestors(stateNode, toStateNode) {\n  const ancestors = [];\n  if (toStateNode === stateNode) {\n    return ancestors;\n  }\n\n  // add all ancestors\n  let m = stateNode.parent;\n  while (m && m !== toStateNode) {\n    ancestors.push(m);\n    m = m.parent;\n  }\n  return ancestors;\n}\nfunction getAllStateNodes(stateNodes) {\n  const nodeSet = new Set(stateNodes);\n  const adjList = getAdjList(nodeSet);\n\n  // add descendants\n  for (const s of nodeSet) {\n    // if previously active, add existing child nodes\n    if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n      getInitialStateNodesWithTheirAncestors(s).forEach(sn => nodeSet.add(sn));\n    } else {\n      if (s.type === 'parallel') {\n        for (const child of getChildren(s)) {\n          if (child.type === 'history') {\n            continue;\n          }\n          if (!nodeSet.has(child)) {\n            const initialStates = getInitialStateNodesWithTheirAncestors(child);\n            for (const initialStateNode of initialStates) {\n              nodeSet.add(initialStateNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // add all ancestors\n  for (const s of nodeSet) {\n    let m = s.parent;\n    while (m) {\n      nodeSet.add(m);\n      m = m.parent;\n    }\n  }\n  return nodeSet;\n}\nfunction getValueFromAdj(baseNode, adjList) {\n  const childStateNodes = adjList.get(baseNode);\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n  if (baseNode.type === 'compound') {\n    const childStateNode = childStateNodes[0];\n    if (childStateNode) {\n      if (isAtomicStateNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n  const stateValue = {};\n  for (const childStateNode of childStateNodes) {\n    stateValue[childStateNode.key] = getValueFromAdj(childStateNode, adjList);\n  }\n  return stateValue;\n}\nfunction getAdjList(stateNodes) {\n  const adjList = new Map();\n  for (const s of stateNodes) {\n    if (!adjList.has(s)) {\n      adjList.set(s, []);\n    }\n    if (s.parent) {\n      if (!adjList.has(s.parent)) {\n        adjList.set(s.parent, []);\n      }\n      adjList.get(s.parent).push(s);\n    }\n  }\n  return adjList;\n}\nfunction getStateValue(rootNode, stateNodes) {\n  const config = getAllStateNodes(stateNodes);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction isInFinalState(stateNodeSet, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(s => s.type === 'final' && stateNodeSet.has(s));\n  }\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(sn => isInFinalState(stateNodeSet, sn));\n  }\n  return stateNode.type === 'final';\n}\nconst isStateId = str => str[0] === STATE_IDENTIFIER;\nfunction getCandidates(stateNode, receivedEventType) {\n  const candidates = stateNode.transitions.get(receivedEventType) || [...stateNode.transitions.keys()].filter(eventDescriptor => {\n    // check if transition is a wildcard transition,\n    // which matches any non-transient events\n    if (eventDescriptor === WILDCARD) {\n      return true;\n    }\n    if (!eventDescriptor.endsWith('.*')) {\n      return false;\n    }\n    const partialEventTokens = eventDescriptor.split('.');\n    const eventTokens = receivedEventType.split('.');\n    for (let tokenIndex = 0; tokenIndex < partialEventTokens.length; tokenIndex++) {\n      const partialEventToken = partialEventTokens[tokenIndex];\n      const eventToken = eventTokens[tokenIndex];\n      if (partialEventToken === '*') {\n        const isLastToken = tokenIndex === partialEventTokens.length - 1;\n        return isLastToken;\n      }\n      if (partialEventToken !== eventToken) {\n        return false;\n      }\n    }\n    return true;\n  }).sort((a, b) => b.length - a.length).flatMap(key => stateNode.transitions.get(key));\n  return candidates;\n}\n\n/** All delayed transitions from the config. */\nfunction getDelayedTransitions(stateNode) {\n  const afterConfig = stateNode.config.after;\n  if (!afterConfig) {\n    return [];\n  }\n  const mutateEntryExit = delay => {\n    const afterEvent = createAfterEvent(delay, stateNode.id);\n    const eventType = afterEvent.type;\n    stateNode.entry.push(raise(afterEvent, {\n      id: eventType,\n      delay\n    }));\n    stateNode.exit.push(cancel(eventType));\n    return eventType;\n  };\n  const delayedTransitions = Object.keys(afterConfig).flatMap(delay => {\n    const configTransition = afterConfig[delay];\n    const resolvedTransition = typeof configTransition === 'string' ? {\n      target: configTransition\n    } : configTransition;\n    const resolvedDelay = Number.isNaN(+delay) ? delay : +delay;\n    const eventType = mutateEntryExit(resolvedDelay);\n    return toArray(resolvedTransition).map(transition => ({\n      ...transition,\n      event: eventType,\n      delay: resolvedDelay\n    }));\n  });\n  return delayedTransitions.map(delayedTransition => {\n    const {\n      delay\n    } = delayedTransition;\n    return {\n      ...formatTransition(stateNode, delayedTransition.event, delayedTransition),\n      delay\n    };\n  });\n}\nfunction formatTransition(stateNode, descriptor, transitionConfig) {\n  const normalizedTarget = normalizeTarget(transitionConfig.target);\n  const reenter = transitionConfig.reenter ?? false;\n  const target = resolveTarget(stateNode, normalizedTarget);\n  const transition = {\n    ...transitionConfig,\n    actions: toArray(transitionConfig.actions),\n    guard: transitionConfig.guard,\n    target,\n    source: stateNode,\n    reenter,\n    eventType: descriptor,\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: target ? target.map(t => `#${t.id}`) : undefined\n    })\n  };\n  return transition;\n}\nfunction formatTransitions(stateNode) {\n  const transitions = new Map();\n  if (stateNode.config.on) {\n    for (const descriptor of Object.keys(stateNode.config.on)) {\n      if (descriptor === NULL_EVENT) {\n        throw new Error('Null events (\"\") cannot be specified as a transition key. Use `always: { ... }` instead.');\n      }\n      const transitionsConfig = stateNode.config.on[descriptor];\n      transitions.set(descriptor, toTransitionConfigArray(transitionsConfig).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  if (stateNode.config.onDone) {\n    const descriptor = `xstate.done.state.${stateNode.id}`;\n    transitions.set(descriptor, toTransitionConfigArray(stateNode.config.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n  }\n  for (const invokeDef of stateNode.invoke) {\n    if (invokeDef.onDone) {\n      const descriptor = `xstate.done.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onError) {\n      const descriptor = `xstate.error.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onError).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onSnapshot) {\n      const descriptor = `xstate.snapshot.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onSnapshot).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  for (const delayedTransition of stateNode.after) {\n    let existing = transitions.get(delayedTransition.eventType);\n    if (!existing) {\n      existing = [];\n      transitions.set(delayedTransition.eventType, existing);\n    }\n    existing.push(delayedTransition);\n  }\n  return transitions;\n}\nfunction formatInitialTransition(stateNode, _target) {\n  const resolvedTarget = typeof _target === 'string' ? stateNode.states[_target] : _target ? stateNode.states[_target.target] : undefined;\n  if (!resolvedTarget && _target) {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-base-to-string\n    `Initial state node \"${_target}\" not found on parent state node #${stateNode.id}`);\n  }\n  const transition = {\n    source: stateNode,\n    actions: !_target || typeof _target === 'string' ? [] : toArray(_target.actions),\n    eventType: null,\n    reenter: false,\n    target: resolvedTarget ? [resolvedTarget] : [],\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: resolvedTarget ? [`#${resolvedTarget.id}`] : []\n    })\n  };\n  return transition;\n}\nfunction resolveTarget(stateNode, targets) {\n  if (targets === undefined) {\n    // an undefined target signals that the state node should not transition from that state when receiving that event\n    return undefined;\n  }\n  return targets.map(target => {\n    if (typeof target !== 'string') {\n      return target;\n    }\n    if (isStateId(target)) {\n      return stateNode.machine.getStateNodeById(target);\n    }\n    const isInternalTarget = target[0] === STATE_DELIMITER;\n    // If internal target is defined on machine,\n    // do not include machine key on target\n    if (isInternalTarget && !stateNode.parent) {\n      return getStateNodeByPath(stateNode, target.slice(1));\n    }\n    const resolvedTarget = isInternalTarget ? stateNode.key + target : target;\n    if (stateNode.parent) {\n      try {\n        const targetStateNode = getStateNodeByPath(stateNode.parent, resolvedTarget);\n        return targetStateNode;\n      } catch (err) {\n        throw new Error(`Invalid transition definition for state node '${stateNode.id}':\\n${err.message}`);\n      }\n    } else {\n      throw new Error(`Invalid target: \"${target}\" is not a valid target from the root node. Did you mean \".${target}\"?`);\n    }\n  });\n}\nfunction resolveHistoryDefaultTransition(stateNode) {\n  const normalizedTarget = normalizeTarget(stateNode.config.target);\n  if (!normalizedTarget) {\n    return stateNode.parent.initial;\n  }\n  return {\n    target: normalizedTarget.map(t => typeof t === 'string' ? getStateNodeByPath(stateNode.parent, t) : t)\n  };\n}\nfunction isHistoryNode(stateNode) {\n  return stateNode.type === 'history';\n}\nfunction getInitialStateNodesWithTheirAncestors(stateNode) {\n  const states = getInitialStateNodes(stateNode);\n  for (const initialState of states) {\n    for (const ancestor of getProperAncestors(initialState, stateNode)) {\n      states.add(ancestor);\n    }\n  }\n  return states;\n}\nfunction getInitialStateNodes(stateNode) {\n  const set = new Set();\n  function iter(descStateNode) {\n    if (set.has(descStateNode)) {\n      return;\n    }\n    set.add(descStateNode);\n    if (descStateNode.type === 'compound') {\n      iter(descStateNode.initial.target[0]);\n    } else if (descStateNode.type === 'parallel') {\n      for (const child of getChildren(descStateNode)) {\n        iter(child);\n      }\n    }\n  }\n  iter(stateNode);\n  return set;\n}\n/** Returns the child state node from its relative `stateKey`, or throws. */\nfunction getStateNode(stateNode, stateKey) {\n  if (isStateId(stateKey)) {\n    return stateNode.machine.getStateNodeById(stateKey);\n  }\n  if (!stateNode.states) {\n    throw new Error(`Unable to retrieve child state '${stateKey}' from '${stateNode.id}'; no child states exist.`);\n  }\n  const result = stateNode.states[stateKey];\n  if (!result) {\n    throw new Error(`Child state '${stateKey}' does not exist on '${stateNode.id}'`);\n  }\n  return result;\n}\n\n/**\n * Returns the relative state node from the given `statePath`, or throws.\n *\n * @param statePath The string or string array relative path to the state node.\n */\nfunction getStateNodeByPath(stateNode, statePath) {\n  if (typeof statePath === 'string' && isStateId(statePath)) {\n    try {\n      return stateNode.machine.getStateNodeById(statePath);\n    } catch {\n      // try individual paths\n      // throw e;\n    }\n  }\n  const arrayStatePath = toStatePath(statePath).slice();\n  let currentStateNode = stateNode;\n  while (arrayStatePath.length) {\n    const key = arrayStatePath.shift();\n    if (!key.length) {\n      break;\n    }\n    currentStateNode = getStateNode(currentStateNode, key);\n  }\n  return currentStateNode;\n}\n\n/**\n * Returns the state nodes represented by the current state value.\n *\n * @param stateValue The state value or State instance\n */\nfunction getStateNodes(stateNode, stateValue) {\n  if (typeof stateValue === 'string') {\n    const childStateNode = stateNode.states[stateValue];\n    if (!childStateNode) {\n      throw new Error(`State '${stateValue}' does not exist on '${stateNode.id}'`);\n    }\n    return [stateNode, childStateNode];\n  }\n  const childStateKeys = Object.keys(stateValue);\n  const childStateNodes = childStateKeys.map(subStateKey => getStateNode(stateNode, subStateKey)).filter(Boolean);\n  return [stateNode.machine.root, stateNode].concat(childStateNodes, childStateKeys.reduce((allSubStateNodes, subStateKey) => {\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    if (!subStateNode) {\n      return allSubStateNodes;\n    }\n    const subStateNodes = getStateNodes(subStateNode, stateValue[subStateKey]);\n    return allSubStateNodes.concat(subStateNodes);\n  }, []));\n}\nfunction transitionAtomicNode(stateNode, stateValue, snapshot, event) {\n  const childStateNode = getStateNode(stateNode, stateValue);\n  const next = childStateNode.next(snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionCompoundNode(stateNode, stateValue, snapshot, event) {\n  const subStateKeys = Object.keys(stateValue);\n  const childStateNode = getStateNode(stateNode, subStateKeys[0]);\n  const next = transitionNode(childStateNode, stateValue[subStateKeys[0]], snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionParallelNode(stateNode, stateValue, snapshot, event) {\n  const allInnerTransitions = [];\n  for (const subStateKey of Object.keys(stateValue)) {\n    const subStateValue = stateValue[subStateKey];\n    if (!subStateValue) {\n      continue;\n    }\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    const innerTransitions = transitionNode(subStateNode, subStateValue, snapshot, event);\n    if (innerTransitions) {\n      allInnerTransitions.push(...innerTransitions);\n    }\n  }\n  if (!allInnerTransitions.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return allInnerTransitions;\n}\nfunction transitionNode(stateNode, stateValue, snapshot, event) {\n  // leaf node\n  if (typeof stateValue === 'string') {\n    return transitionAtomicNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // compound node\n  if (Object.keys(stateValue).length === 1) {\n    return transitionCompoundNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // parallel node\n  return transitionParallelNode(stateNode, stateValue, snapshot, event);\n}\nfunction getHistoryNodes(stateNode) {\n  return Object.keys(stateNode.states).map(key => stateNode.states[key]).filter(sn => sn.type === 'history');\n}\nfunction isDescendant(childStateNode, parentStateNode) {\n  let marker = childStateNode;\n  while (marker.parent && marker.parent !== parentStateNode) {\n    marker = marker.parent;\n  }\n  return marker.parent === parentStateNode;\n}\nfunction hasIntersection(s1, s2) {\n  const set1 = new Set(s1);\n  const set2 = new Set(s2);\n  for (const item of set1) {\n    if (set2.has(item)) {\n      return true;\n    }\n  }\n  for (const item of set2) {\n    if (set1.has(item)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction removeConflictingTransitions(enabledTransitions, stateNodeSet, historyValue) {\n  const filteredTransitions = new Set();\n  for (const t1 of enabledTransitions) {\n    let t1Preempted = false;\n    const transitionsToRemove = new Set();\n    for (const t2 of filteredTransitions) {\n      if (hasIntersection(computeExitSet([t1], stateNodeSet, historyValue), computeExitSet([t2], stateNodeSet, historyValue))) {\n        if (isDescendant(t1.source, t2.source)) {\n          transitionsToRemove.add(t2);\n        } else {\n          t1Preempted = true;\n          break;\n        }\n      }\n    }\n    if (!t1Preempted) {\n      for (const t3 of transitionsToRemove) {\n        filteredTransitions.delete(t3);\n      }\n      filteredTransitions.add(t1);\n    }\n  }\n  return Array.from(filteredTransitions);\n}\nfunction findLeastCommonAncestor(stateNodes) {\n  const [head, ...tail] = stateNodes;\n  for (const ancestor of getProperAncestors(head, undefined)) {\n    if (tail.every(sn => isDescendant(sn, ancestor))) {\n      return ancestor;\n    }\n  }\n}\nfunction getEffectiveTargetStates(transition, historyValue) {\n  if (!transition.target) {\n    return [];\n  }\n  const targets = new Set();\n  for (const targetNode of transition.target) {\n    if (isHistoryNode(targetNode)) {\n      if (historyValue[targetNode.id]) {\n        for (const node of historyValue[targetNode.id]) {\n          targets.add(node);\n        }\n      } else {\n        for (const node of getEffectiveTargetStates(resolveHistoryDefaultTransition(targetNode), historyValue)) {\n          targets.add(node);\n        }\n      }\n    } else {\n      targets.add(targetNode);\n    }\n  }\n  return [...targets];\n}\nfunction getTransitionDomain(transition, historyValue) {\n  const targetStates = getEffectiveTargetStates(transition, historyValue);\n  if (!targetStates) {\n    return;\n  }\n  if (!transition.reenter && targetStates.every(target => target === transition.source || isDescendant(target, transition.source))) {\n    return transition.source;\n  }\n  const lca = findLeastCommonAncestor(targetStates.concat(transition.source));\n  if (lca) {\n    return lca;\n  }\n\n  // at this point we know that it's a root transition since LCA couldn't be found\n  if (transition.reenter) {\n    return;\n  }\n  return transition.source.machine.root;\n}\nfunction computeExitSet(transitions, stateNodeSet, historyValue) {\n  const statesToExit = new Set();\n  for (const t of transitions) {\n    if (t.target?.length) {\n      const domain = getTransitionDomain(t, historyValue);\n      if (t.reenter && t.source === domain) {\n        statesToExit.add(domain);\n      }\n      for (const stateNode of stateNodeSet) {\n        if (isDescendant(stateNode, domain)) {\n          statesToExit.add(stateNode);\n        }\n      }\n    }\n  }\n  return [...statesToExit];\n}\nfunction areStateNodeCollectionsEqual(prevStateNodes, nextStateNodeSet) {\n  if (prevStateNodes.length !== nextStateNodeSet.size) {\n    return false;\n  }\n  for (const node of prevStateNodes) {\n    if (!nextStateNodeSet.has(node)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** https://www.w3.org/TR/scxml/#microstepProcedure */\nfunction microstep(transitions, currentSnapshot, actorScope, event, isInitial, internalQueue) {\n  if (!transitions.length) {\n    return currentSnapshot;\n  }\n  const mutStateNodeSet = new Set(currentSnapshot._nodes);\n  let historyValue = currentSnapshot.historyValue;\n  const filteredTransitions = removeConflictingTransitions(transitions, mutStateNodeSet, historyValue);\n  let nextState = currentSnapshot;\n\n  // Exit states\n  if (!isInitial) {\n    [nextState, historyValue] = exitStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, historyValue, internalQueue, actorScope.actionExecutor);\n  }\n\n  // Execute transition content\n  nextState = resolveActionsAndContext(nextState, event, actorScope, filteredTransitions.flatMap(t => t.actions), internalQueue, undefined);\n\n  // Enter states\n  nextState = enterStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial);\n  const nextStateNodes = [...mutStateNodeSet];\n  if (nextState.status === 'done') {\n    nextState = resolveActionsAndContext(nextState, event, actorScope, nextStateNodes.sort((a, b) => b.order - a.order).flatMap(state => state.exit), internalQueue, undefined);\n  }\n\n  // eslint-disable-next-line no-useless-catch\n  try {\n    if (historyValue === currentSnapshot.historyValue && areStateNodeCollectionsEqual(currentSnapshot._nodes, mutStateNodeSet)) {\n      return nextState;\n    }\n    return cloneMachineSnapshot(nextState, {\n      _nodes: nextStateNodes,\n      historyValue\n    });\n  } catch (e) {\n    // TODO: Refactor this once proper error handling is implemented.\n    // See https://github.com/statelyai/rfcs/pull/4\n    throw e;\n  }\n}\nfunction getMachineOutput(snapshot, event, actorScope, rootNode, rootCompletionNode) {\n  if (rootNode.output === undefined) {\n    return;\n  }\n  const doneStateEvent = createDoneStateEvent(rootCompletionNode.id, rootCompletionNode.output !== undefined && rootCompletionNode.parent ? resolveOutput(rootCompletionNode.output, snapshot.context, event, actorScope.self) : undefined);\n  return resolveOutput(rootNode.output, snapshot.context, doneStateEvent, actorScope.self);\n}\nfunction enterStates(currentSnapshot, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial) {\n  let nextSnapshot = currentSnapshot;\n  const statesToEnter = new Set();\n  // those are states that were directly targeted or indirectly targeted by the explicit target\n  // in other words, those are states for which initial actions should be executed\n  // when we target `#deep_child` initial actions of its ancestors shouldn't be executed\n  const statesForDefaultEntry = new Set();\n  computeEntrySet(filteredTransitions, historyValue, statesForDefaultEntry, statesToEnter);\n\n  // In the initial state, the root state node is \"entered\".\n  if (isInitial) {\n    statesForDefaultEntry.add(currentSnapshot.machine.root);\n  }\n  const completedNodes = new Set();\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    mutStateNodeSet.add(stateNodeToEnter);\n    const actions = [];\n\n    // Add entry actions\n    actions.push(...stateNodeToEnter.entry);\n    for (const invokeDef of stateNodeToEnter.invoke) {\n      actions.push(spawnChild(invokeDef.src, {\n        ...invokeDef,\n        syncSnapshot: !!invokeDef.onSnapshot\n      }));\n    }\n    if (statesForDefaultEntry.has(stateNodeToEnter)) {\n      const initialActions = stateNodeToEnter.initial.actions;\n      actions.push(...initialActions);\n    }\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, actions, internalQueue, stateNodeToEnter.invoke.map(invokeDef => invokeDef.id));\n    if (stateNodeToEnter.type === 'final') {\n      const parent = stateNodeToEnter.parent;\n      let ancestorMarker = parent?.type === 'parallel' ? parent : parent?.parent;\n      let rootCompletionNode = ancestorMarker || stateNodeToEnter;\n      if (parent?.type === 'compound') {\n        internalQueue.push(createDoneStateEvent(parent.id, stateNodeToEnter.output !== undefined ? resolveOutput(stateNodeToEnter.output, nextSnapshot.context, event, actorScope.self) : undefined));\n      }\n      while (ancestorMarker?.type === 'parallel' && !completedNodes.has(ancestorMarker) && isInFinalState(mutStateNodeSet, ancestorMarker)) {\n        completedNodes.add(ancestorMarker);\n        internalQueue.push(createDoneStateEvent(ancestorMarker.id));\n        rootCompletionNode = ancestorMarker;\n        ancestorMarker = ancestorMarker.parent;\n      }\n      if (ancestorMarker) {\n        continue;\n      }\n      nextSnapshot = cloneMachineSnapshot(nextSnapshot, {\n        status: 'done',\n        output: getMachineOutput(nextSnapshot, event, actorScope, nextSnapshot.machine.root, rootCompletionNode)\n      });\n    }\n  }\n  return nextSnapshot;\n}\nfunction computeEntrySet(transitions, historyValue, statesForDefaultEntry, statesToEnter) {\n  for (const t of transitions) {\n    const domain = getTransitionDomain(t, historyValue);\n    for (const s of t.target || []) {\n      if (!isHistoryNode(s) && (\n      // if the target is different than the source then it will *definitely* be entered\n      t.source !== s ||\n      // we know that the domain can't lie within the source\n      // if it's different than the source then it's outside of it and it means that the target has to be entered as well\n      t.source !== domain ||\n      // reentering transitions always enter the target, even if it's the source itself\n      t.reenter)) {\n        statesToEnter.add(s);\n        statesForDefaultEntry.add(s);\n      }\n      addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n    }\n    const targetStates = getEffectiveTargetStates(t, historyValue);\n    for (const s of targetStates) {\n      const ancestors = getProperAncestors(s, domain);\n      if (domain?.type === 'parallel') {\n        ancestors.push(domain);\n      }\n      addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, !t.source.parent && t.reenter ? undefined : domain);\n    }\n  }\n}\nfunction addDescendantStatesToEnter(stateNode, historyValue, statesForDefaultEntry, statesToEnter) {\n  if (isHistoryNode(stateNode)) {\n    if (historyValue[stateNode.id]) {\n      const historyStateNodes = historyValue[stateNode.id];\n      for (const s of historyStateNodes) {\n        statesToEnter.add(s);\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyStateNodes) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    } else {\n      const historyDefaultTransition = resolveHistoryDefaultTransition(stateNode);\n      for (const s of historyDefaultTransition.target) {\n        statesToEnter.add(s);\n        if (historyDefaultTransition === stateNode.parent?.initial) {\n          statesForDefaultEntry.add(stateNode.parent);\n        }\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyDefaultTransition.target) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    }\n  } else {\n    if (stateNode.type === 'compound') {\n      const [initialState] = stateNode.initial.target;\n      if (!isHistoryNode(initialState)) {\n        statesToEnter.add(initialState);\n        statesForDefaultEntry.add(initialState);\n      }\n      addDescendantStatesToEnter(initialState, historyValue, statesForDefaultEntry, statesToEnter);\n      addProperAncestorStatesToEnter(initialState, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n    } else {\n      if (stateNode.type === 'parallel') {\n        for (const child of getChildren(stateNode).filter(sn => !isHistoryNode(sn))) {\n          if (![...statesToEnter].some(s => isDescendant(s, child))) {\n            if (!isHistoryNode(child)) {\n              statesToEnter.add(child);\n              statesForDefaultEntry.add(child);\n            }\n            addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n          }\n        }\n      }\n    }\n  }\n}\nfunction addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, reentrancyDomain) {\n  for (const anc of ancestors) {\n    if (!reentrancyDomain || isDescendant(anc, reentrancyDomain)) {\n      statesToEnter.add(anc);\n    }\n    if (anc.type === 'parallel') {\n      for (const child of getChildren(anc).filter(sn => !isHistoryNode(sn))) {\n        if (![...statesToEnter].some(s => isDescendant(s, child))) {\n          statesToEnter.add(child);\n          addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n        }\n      }\n    }\n  }\n}\nfunction addProperAncestorStatesToEnter(stateNode, toStateNode, statesToEnter, historyValue, statesForDefaultEntry) {\n  addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, getProperAncestors(stateNode, toStateNode));\n}\nfunction exitStates(currentSnapshot, event, actorScope, transitions, mutStateNodeSet, historyValue, internalQueue, _actionExecutor) {\n  let nextSnapshot = currentSnapshot;\n  const statesToExit = computeExitSet(transitions, mutStateNodeSet, historyValue);\n  statesToExit.sort((a, b) => b.order - a.order);\n  let changedHistory;\n\n  // From SCXML algorithm: https://www.w3.org/TR/scxml/#exitStates\n  for (const exitStateNode of statesToExit) {\n    for (const historyNode of getHistoryNodes(exitStateNode)) {\n      let predicate;\n      if (historyNode.history === 'deep') {\n        predicate = sn => isAtomicStateNode(sn) && isDescendant(sn, exitStateNode);\n      } else {\n        predicate = sn => {\n          return sn.parent === exitStateNode;\n        };\n      }\n      changedHistory ??= {\n        ...historyValue\n      };\n      changedHistory[historyNode.id] = Array.from(mutStateNodeSet).filter(predicate);\n    }\n  }\n  for (const s of statesToExit) {\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, [...s.exit, ...s.invoke.map(def => stopChild(def.id))], internalQueue, undefined);\n    mutStateNodeSet.delete(s);\n  }\n  return [nextSnapshot, changedHistory || historyValue];\n}\nfunction getAction(machine, actionType) {\n  return machine.implementations.actions[actionType];\n}\nfunction resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, extra, retries) {\n  const {\n    machine\n  } = currentSnapshot;\n  let intermediateSnapshot = currentSnapshot;\n  for (const action of actions) {\n    const isInline = typeof action === 'function';\n    const resolvedAction = isInline ? action :\n    // the existing type of `.actions` assumes non-nullable `TExpressionAction`\n    // it's fine to cast this here to get a common type and lack of errors in the rest of the code\n    // our logic below makes sure that we call those 2 \"variants\" correctly\n\n    getAction(machine, typeof action === 'string' ? action : action.type);\n    const actionArgs = {\n      context: intermediateSnapshot.context,\n      event,\n      self: actorScope.self,\n      system: actorScope.system\n    };\n    const actionParams = isInline || typeof action === 'string' ? undefined : 'params' in action ? typeof action.params === 'function' ? action.params({\n      context: intermediateSnapshot.context,\n      event\n    }) : action.params : undefined;\n    if (!resolvedAction || !('resolve' in resolvedAction)) {\n      actorScope.actionExecutor({\n        type: typeof action === 'string' ? action : typeof action === 'object' ? action.type : action.name || '(anonymous)',\n        info: actionArgs,\n        params: actionParams,\n        exec: resolvedAction\n      });\n      continue;\n    }\n    const builtinAction = resolvedAction;\n    const [nextState, params, actions] = builtinAction.resolve(actorScope, intermediateSnapshot, actionArgs, actionParams, resolvedAction,\n    // this holds all params\n    extra);\n    intermediateSnapshot = nextState;\n    if ('retryResolve' in builtinAction) {\n      retries?.push([builtinAction, params]);\n    }\n    if ('execute' in builtinAction) {\n      actorScope.actionExecutor({\n        type: builtinAction.type,\n        info: actionArgs,\n        params,\n        exec: builtinAction.execute.bind(null, actorScope, params)\n      });\n    }\n    if (actions) {\n      intermediateSnapshot = resolveAndExecuteActionsWithContext(intermediateSnapshot, event, actorScope, actions, extra, retries);\n    }\n  }\n  return intermediateSnapshot;\n}\nfunction resolveActionsAndContext(currentSnapshot, event, actorScope, actions, internalQueue, deferredActorIds) {\n  const retries = deferredActorIds ? [] : undefined;\n  const nextState = resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, {\n    internalQueue,\n    deferredActorIds\n  }, retries);\n  retries?.forEach(([builtinAction, params]) => {\n    builtinAction.retryResolve(actorScope, nextState, params);\n  });\n  return nextState;\n}\nfunction macrostep(snapshot, event, actorScope, internalQueue) {\n  let nextSnapshot = snapshot;\n  const microstates = [];\n  function addMicrostate(microstate, event, transitions) {\n    actorScope.system._sendInspectionEvent({\n      type: '@xstate.microstep',\n      actorRef: actorScope.self,\n      event,\n      snapshot: microstate,\n      _transitions: transitions\n    });\n    microstates.push(microstate);\n  }\n\n  // Handle stop event\n  if (event.type === XSTATE_STOP) {\n    nextSnapshot = cloneMachineSnapshot(stopChildren(nextSnapshot, event, actorScope), {\n      status: 'stopped'\n    });\n    addMicrostate(nextSnapshot, event, []);\n    return {\n      snapshot: nextSnapshot,\n      microstates\n    };\n  }\n  let nextEvent = event;\n\n  // Assume the state is at rest (no raised events)\n  // Determine the next state based on the next microstep\n  if (nextEvent.type !== XSTATE_INIT) {\n    const currentEvent = nextEvent;\n    const isErr = isErrorActorEvent(currentEvent);\n    const transitions = selectTransitions(currentEvent, nextSnapshot);\n    if (isErr && !transitions.length) {\n      // TODO: we should likely only allow transitions selected by very explicit descriptors\n      // `*` shouldn't be matched, likely `xstate.error.*` shouldnt be either\n      // similarly `xstate.error.actor.*` and `xstate.error.actor.todo.*` have to be considered too\n      nextSnapshot = cloneMachineSnapshot(snapshot, {\n        status: 'error',\n        error: currentEvent.error\n      });\n      addMicrostate(nextSnapshot, currentEvent, []);\n      return {\n        snapshot: nextSnapshot,\n        microstates\n      };\n    }\n    nextSnapshot = microstep(transitions, snapshot, actorScope, nextEvent, false,\n    // isInitial\n    internalQueue);\n    addMicrostate(nextSnapshot, currentEvent, transitions);\n  }\n  let shouldSelectEventlessTransitions = true;\n  while (nextSnapshot.status === 'active') {\n    let enabledTransitions = shouldSelectEventlessTransitions ? selectEventlessTransitions(nextSnapshot, nextEvent) : [];\n\n    // eventless transitions should always be selected after selecting *regular* transitions\n    // by assigning `undefined` to `previousState` we ensure that `shouldSelectEventlessTransitions` gets always computed to true in such a case\n    const previousState = enabledTransitions.length ? nextSnapshot : undefined;\n    if (!enabledTransitions.length) {\n      if (!internalQueue.length) {\n        break;\n      }\n      nextEvent = internalQueue.shift();\n      enabledTransitions = selectTransitions(nextEvent, nextSnapshot);\n    }\n    nextSnapshot = microstep(enabledTransitions, nextSnapshot, actorScope, nextEvent, false, internalQueue);\n    shouldSelectEventlessTransitions = nextSnapshot !== previousState;\n    addMicrostate(nextSnapshot, nextEvent, enabledTransitions);\n  }\n  if (nextSnapshot.status !== 'active') {\n    stopChildren(nextSnapshot, nextEvent, actorScope);\n  }\n  return {\n    snapshot: nextSnapshot,\n    microstates\n  };\n}\nfunction stopChildren(nextState, event, actorScope) {\n  return resolveActionsAndContext(nextState, event, actorScope, Object.values(nextState.children).map(child => stopChild(child)), [], undefined);\n}\nfunction selectTransitions(event, nextState) {\n  return nextState.machine.getTransitionData(nextState, event);\n}\nfunction selectEventlessTransitions(nextState, event) {\n  const enabledTransitionSet = new Set();\n  const atomicStates = nextState._nodes.filter(isAtomicStateNode);\n  for (const stateNode of atomicStates) {\n    loop: for (const s of [stateNode].concat(getProperAncestors(stateNode, undefined))) {\n      if (!s.always) {\n        continue;\n      }\n      for (const transition of s.always) {\n        if (transition.guard === undefined || evaluateGuard(transition.guard, nextState.context, event, nextState)) {\n          enabledTransitionSet.add(transition);\n          break loop;\n        }\n      }\n    }\n  }\n  return removeConflictingTransitions(Array.from(enabledTransitionSet), new Set(nextState._nodes), nextState.historyValue);\n}\n\n/**\n * Resolves a partial state value with its full representation in the state\n * node's machine.\n *\n * @param stateValue The partial state value to resolve.\n */\nfunction resolveStateValue(rootNode, stateValue) {\n  const allStateNodes = getAllStateNodes(getStateNodes(rootNode, stateValue));\n  return getStateValue(rootNode, [...allStateNodes]);\n}\n\nfunction isMachineSnapshot(value) {\n  return !!value && typeof value === 'object' && 'machine' in value && 'value' in value;\n}\nconst machineSnapshotMatches = function matches(testValue) {\n  return matchesState(testValue, this.value);\n};\nconst machineSnapshotHasTag = function hasTag(tag) {\n  return this.tags.has(tag);\n};\nconst machineSnapshotCan = function can(event) {\n  const transitionData = this.machine.getTransitionData(this, event);\n  return !!transitionData?.length &&\n  // Check that at least one transition is not forbidden\n  transitionData.some(t => t.target !== undefined || t.actions.length);\n};\nconst machineSnapshotToJSON = function toJSON() {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    getMeta,\n    toJSON,\n    can,\n    hasTag,\n    matches,\n    ...jsonValues\n  } = this;\n  return {\n    ...jsonValues,\n    tags: Array.from(tags)\n  };\n};\nconst machineSnapshotGetMeta = function getMeta() {\n  return this._nodes.reduce((acc, stateNode) => {\n    if (stateNode.meta !== undefined) {\n      acc[stateNode.id] = stateNode.meta;\n    }\n    return acc;\n  }, {});\n};\nfunction createMachineSnapshot(config, machine) {\n  return {\n    status: config.status,\n    output: config.output,\n    error: config.error,\n    machine,\n    context: config.context,\n    _nodes: config._nodes,\n    value: getStateValue(machine.root, config._nodes),\n    tags: new Set(config._nodes.flatMap(sn => sn.tags)),\n    children: config.children,\n    historyValue: config.historyValue || {},\n    matches: machineSnapshotMatches,\n    hasTag: machineSnapshotHasTag,\n    can: machineSnapshotCan,\n    getMeta: machineSnapshotGetMeta,\n    toJSON: machineSnapshotToJSON\n  };\n}\nfunction cloneMachineSnapshot(snapshot, config = {}) {\n  return createMachineSnapshot({\n    ...snapshot,\n    ...config\n  }, snapshot.machine);\n}\nfunction getPersistedSnapshot(snapshot, options) {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    children,\n    context,\n    can,\n    hasTag,\n    matches,\n    getMeta,\n    toJSON,\n    ...jsonValues\n  } = snapshot;\n  const childrenJson = {};\n  for (const id in children) {\n    const child = children[id];\n    childrenJson[id] = {\n      snapshot: child.getPersistedSnapshot(options),\n      src: child.src,\n      systemId: child._systemId,\n      syncSnapshot: child._syncSnapshot\n    };\n  }\n  const persisted = {\n    ...jsonValues,\n    context: persistContext(context),\n    children: childrenJson\n  };\n  return persisted;\n}\nfunction persistContext(contextPart) {\n  let copy;\n  for (const key in contextPart) {\n    const value = contextPart[key];\n    if (value && typeof value === 'object') {\n      if ('sessionId' in value && 'send' in value && 'ref' in value) {\n        copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n          ...contextPart\n        };\n        copy[key] = {\n          xstate$$type: $$ACTOR_TYPE,\n          id: value.id\n        };\n      } else {\n        const result = persistContext(value);\n        if (result !== value) {\n          copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n            ...contextPart\n          };\n          copy[key] = result;\n        }\n      }\n    }\n  }\n  return copy ?? contextPart;\n}\n\nfunction resolveRaise(_, snapshot, args, actionParams, {\n  event: eventOrExpr,\n  id,\n  delay\n}, {\n  internalQueue\n}) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Only event objects may be used with raise; use raise({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  if (typeof resolvedDelay !== 'number') {\n    internalQueue.push(resolvedEvent);\n  }\n  return [snapshot, {\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }, undefined];\n}\nfunction executeRaise(actorScope, params) {\n  const {\n    event,\n    delay,\n    id\n  } = params;\n  if (typeof delay === 'number') {\n    actorScope.defer(() => {\n      const self = actorScope.self;\n      actorScope.system.scheduler.schedule(self, self, event, delay, id);\n    });\n    return;\n  }\n}\n/**\n * Raises an event. This places the event in the internal event queue, so that\n * the event is immediately consumed by the machine in the current step.\n *\n * @param eventType The event to raise.\n */\nfunction raise(eventOrExpr, options) {\n  function raise(_args, _params) {\n  }\n  raise.type = 'xstate.raise';\n  raise.event = eventOrExpr;\n  raise.id = options?.id;\n  raise.delay = options?.delay;\n  raise.resolve = resolveRaise;\n  raise.execute = executeRaise;\n  return raise;\n}\n\nexport { $$ACTOR_TYPE as $, createActor as A, Actor as B, interpret as C, and as D, not as E, or as F, stateIn as G, isMachineSnapshot as H, getAllOwnEventDescriptors as I, matchesState as J, pathToStateValue as K, toObserver as L, cancel as M, NULL_EVENT as N, raise as O, spawnChild as P, stop as Q, stopChild as R, STATE_DELIMITER as S, ProcessingStatus as T, cloneMachineSnapshot as U, XSTATE_ERROR as V, createErrorActorEvent as W, XSTATE_STOP as X, toTransitionConfigArray as a, formatTransition as b, createInvokeId as c, formatInitialTransition as d, evaluateGuard as e, formatTransitions as f, getDelayedTransitions as g, getCandidates as h, getAllStateNodes as i, getStateNodes as j, createMachineSnapshot as k, isInFinalState as l, mapValues as m, macrostep as n, transitionNode as o, resolveActionsAndContext as p, createInitEvent as q, resolveStateValue as r, microstep as s, toArray as t, getInitialStateNodes as u, toStatePath as v, isStateId as w, getStateNodeByPath as x, getPersistedSnapshot as y, resolveReferencedActor as z };\n","import { T as ProcessingStatus, z as resolveReferencedActor, A as createActor, U as cloneMachineSnapshot, V as XSTATE_ERROR, W as createErrorActorEvent, e as evaluateGuard, M as cancel, O as raise, P as spawnChild, R as stopChild } from './raise-c17ec2bc.esm.js';\n\nfunction createSpawner(actorScope, {\n  machine,\n  context\n}, event, spawnedChildren) {\n  const spawn = (src, options) => {\n    if (typeof src === 'string') {\n      const logic = resolveReferencedActor(machine, src);\n      if (!logic) {\n        throw new Error(`Actor logic '${src}' not implemented in machine '${machine.id}'`);\n      }\n      const actorRef = createActor(logic, {\n        id: options?.id,\n        parent: actorScope.self,\n        syncSnapshot: options?.syncSnapshot,\n        input: typeof options?.input === 'function' ? options.input({\n          context,\n          event,\n          self: actorScope.self\n        }) : options?.input,\n        src,\n        systemId: options?.systemId\n      });\n      spawnedChildren[actorRef.id] = actorRef;\n      return actorRef;\n    } else {\n      const actorRef = createActor(src, {\n        id: options?.id,\n        parent: actorScope.self,\n        syncSnapshot: options?.syncSnapshot,\n        input: options?.input,\n        src,\n        systemId: options?.systemId\n      });\n      return actorRef;\n    }\n  };\n  return (src, options) => {\n    const actorRef = spawn(src, options); // TODO: fix types\n    spawnedChildren[actorRef.id] = actorRef;\n    actorScope.defer(() => {\n      if (actorRef._processingStatus === ProcessingStatus.Stopped) {\n        return;\n      }\n      actorRef.start();\n    });\n    return actorRef;\n  };\n}\n\nfunction resolveAssign(actorScope, snapshot, actionArgs, actionParams, {\n  assignment\n}) {\n  if (!snapshot.context) {\n    throw new Error('Cannot assign to undefined `context`. Ensure that `context` is defined in the machine config.');\n  }\n  const spawnedChildren = {};\n  const assignArgs = {\n    context: snapshot.context,\n    event: actionArgs.event,\n    spawn: createSpawner(actorScope, snapshot, actionArgs.event, spawnedChildren),\n    self: actorScope.self,\n    system: actorScope.system\n  };\n  let partialUpdate = {};\n  if (typeof assignment === 'function') {\n    partialUpdate = assignment(assignArgs, actionParams);\n  } else {\n    for (const key of Object.keys(assignment)) {\n      const propAssignment = assignment[key];\n      partialUpdate[key] = typeof propAssignment === 'function' ? propAssignment(assignArgs, actionParams) : propAssignment;\n    }\n  }\n  const updatedContext = Object.assign({}, snapshot.context, partialUpdate);\n  return [cloneMachineSnapshot(snapshot, {\n    context: updatedContext,\n    children: Object.keys(spawnedChildren).length ? {\n      ...snapshot.children,\n      ...spawnedChildren\n    } : snapshot.children\n  }), undefined, undefined];\n}\n/**\n * Updates the current context of the machine.\n *\n * @example\n *\n * ```ts\n * import { createMachine, assign } from 'xstate';\n *\n * const countMachine = createMachine({\n *   context: {\n *     count: 0,\n *     message: ''\n *   },\n *   on: {\n *     inc: {\n *       actions: assign({\n *         count: ({ context }) => context.count + 1\n *       })\n *     },\n *     updateMessage: {\n *       actions: assign(({ context, event }) => {\n *         return {\n *           message: event.message.trim()\n *         };\n *       })\n *     }\n *   }\n * });\n * ```\n *\n * @param assignment An object that represents the partial context to update, or\n *   a function that returns an object that represents the partial context to\n *   update.\n */\nfunction assign(assignment) {\n  function assign(_args, _params) {\n  }\n  assign.type = 'xstate.assign';\n  assign.assignment = assignment;\n  assign.resolve = resolveAssign;\n  return assign;\n}\n\nfunction resolveEmit(_, snapshot, args, actionParams, {\n  event: eventOrExpr\n}) {\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  return [snapshot, {\n    event: resolvedEvent\n  }, undefined];\n}\nfunction executeEmit(actorScope, {\n  event\n}) {\n  actorScope.defer(() => actorScope.emit(event));\n}\n/**\n * Emits an event to event handlers registered on the actor via `actor.on(event,\n * handler)`.\n *\n * @example\n *\n * ```ts\n * import { emit } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     something: {\n *       actions: emit({\n *         type: 'emitted',\n *         some: 'data'\n *       })\n *     }\n *   }\n *   // ...\n * });\n *\n * const actor = createActor(machine).start();\n *\n * actor.on('emitted', (event) => {\n *   console.log(event);\n * });\n *\n * actor.send({ type: 'something' });\n * // logs:\n * // {\n * //   type: 'emitted',\n * //   some: 'data'\n * // }\n * ```\n */\nfunction emit(/** The event to emit, or an expression that returns an event to emit. */\neventOrExpr) {\n  function emit(_args, _params) {\n  }\n  emit.type = 'xstate.emit';\n  emit.event = eventOrExpr;\n  emit.resolve = resolveEmit;\n  emit.execute = executeEmit;\n  return emit;\n}\n\n/**\n * @remarks\n * `T | unknown` reduces to `unknown` and that can be problematic when it comes\n * to contextual typing. It especially is a problem when the union has a\n * function member, like here:\n *\n * ```ts\n * declare function test(\n *   cbOrVal: ((arg: number) => unknown) | unknown\n * ): void;\n * test((arg) => {}); // oops, implicit any\n * ```\n *\n * This type can be used to avoid this problem. This union represents the same\n * value space as `unknown`.\n */\n\n// https://github.com/microsoft/TypeScript/issues/23182#issuecomment-379091887\n\n// @TODO: Replace with native `NoInfer` when TS issue gets fixed:\n// https://github.com/microsoft/TypeScript/pull/57673\n\n/** @deprecated Use the built-in `NoInfer` type instead */\n\n/** The full definition of an event, with a string `type`. */\n\n/**\n * The string or object representing the state value relative to the parent\n * state node.\n *\n * @remarks\n * - For a child atomic state node, this is a string, e.g., `\"pending\"`.\n * - For complex state nodes, this is an object, e.g., `{ success:\n *   \"someChildState\" }`.\n */\n\n/** @deprecated Use `AnyMachineSnapshot` instead */\n\n// TODO: possibly refactor this somehow, use even a simpler type, and maybe even make `machine.options` private or something\n/** @ignore */\n\nlet SpecialTargets = /*#__PURE__*/function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n  return SpecialTargets;\n}({});\n\n/** @deprecated Use `AnyActor` instead. */\n\n// Based on RxJS types\n\n// TODO: in v6, this should only accept AnyActorLogic, like ActorRefFromLogic\n\n/** @deprecated Use `Actor<T>` instead. */\n\n/**\n * Represents logic which can be used by an actor.\n *\n * @template TSnapshot - The type of the snapshot.\n * @template TEvent - The type of the event object.\n * @template TInput - The type of the input.\n * @template TSystem - The type of the actor system.\n */\n\n/** @deprecated */\n\n// TODO: cover all that can be actually returned\n\nfunction resolveSendTo(actorScope, snapshot, args, actionParams, {\n  to,\n  event: eventOrExpr,\n  id,\n  delay\n}, extra) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Only event objects may be used with sendTo; use sendTo({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  const resolvedTarget = typeof to === 'function' ? to(args, actionParams) : to;\n  let targetActorRef;\n  if (typeof resolvedTarget === 'string') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (resolvedTarget === SpecialTargets.Parent) {\n      targetActorRef = actorScope.self._parent;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    else if (resolvedTarget === SpecialTargets.Internal) {\n      targetActorRef = actorScope.self;\n    } else if (resolvedTarget.startsWith('#_')) {\n      // SCXML compatibility: https://www.w3.org/TR/scxml/#SCXMLEventProcessor\n      // #_invokeid. If the target is the special term '#_invokeid', where invokeid is the invokeid of an SCXML session that the sending session has created by <invoke>, the Processor must add the event to the external queue of that session.\n      targetActorRef = snapshot.children[resolvedTarget.slice(2)];\n    } else {\n      targetActorRef = extra.deferredActorIds?.includes(resolvedTarget) ? resolvedTarget : snapshot.children[resolvedTarget];\n    }\n    if (!targetActorRef) {\n      throw new Error(`Unable to send event to actor '${resolvedTarget}' from machine '${snapshot.machine.id}'.`);\n    }\n  } else {\n    targetActorRef = resolvedTarget || actorScope.self;\n  }\n  return [snapshot, {\n    to: targetActorRef,\n    targetId: typeof resolvedTarget === 'string' ? resolvedTarget : undefined,\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }, undefined];\n}\nfunction retryResolveSendTo(_, snapshot, params) {\n  if (typeof params.to === 'string') {\n    params.to = snapshot.children[params.to];\n  }\n}\nfunction executeSendTo(actorScope, params) {\n  // this forms an outgoing events queue\n  // thanks to that the recipient actors are able to read the *updated* snapshot value of the sender\n  actorScope.defer(() => {\n    const {\n      to,\n      event,\n      delay,\n      id\n    } = params;\n    if (typeof delay === 'number') {\n      actorScope.system.scheduler.schedule(actorScope.self, to, event, delay, id);\n      return;\n    }\n    actorScope.system._relay(actorScope.self,\n    // at this point, in a deferred task, it should already be mutated by retryResolveSendTo\n    // if it initially started as a string\n    to, event.type === XSTATE_ERROR ? createErrorActorEvent(actorScope.self.id, event.data) : event);\n  });\n}\n/**\n * Sends an event to an actor.\n *\n * @param actor The `ActorRef` to send the event to.\n * @param event The event to send, or an expression that evaluates to the event\n *   to send\n * @param options Send action options\n *\n *   - `id` - The unique send event identifier (used with `cancel()`).\n *   - `delay` - The number of milliseconds to delay the sending of the event.\n */\nfunction sendTo(to, eventOrExpr, options) {\n  function sendTo(_args, _params) {\n  }\n  sendTo.type = 'xstate.sendTo';\n  sendTo.to = to;\n  sendTo.event = eventOrExpr;\n  sendTo.id = options?.id;\n  sendTo.delay = options?.delay;\n  sendTo.resolve = resolveSendTo;\n  sendTo.retryResolve = retryResolveSendTo;\n  sendTo.execute = executeSendTo;\n  return sendTo;\n}\n\n/**\n * Sends an event to this machine's parent.\n *\n * @param event The event to send to the parent machine.\n * @param options Options to pass into the send event.\n */\nfunction sendParent(event, options) {\n  return sendTo(SpecialTargets.Parent, event, options);\n}\n/**\n * Forwards (sends) an event to the `target` actor.\n *\n * @param target The target actor to forward the event to.\n * @param options Options to pass into the send action creator.\n */\nfunction forwardTo(target, options) {\n  return sendTo(target, ({\n    event\n  }) => event, options);\n}\n\nfunction resolveEnqueueActions(actorScope, snapshot, args, actionParams, {\n  collect\n}) {\n  const actions = [];\n  const enqueue = function enqueue(action) {\n    actions.push(action);\n  };\n  enqueue.assign = (...args) => {\n    actions.push(assign(...args));\n  };\n  enqueue.cancel = (...args) => {\n    actions.push(cancel(...args));\n  };\n  enqueue.raise = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay`\n    actions.push(raise(...args));\n  };\n  enqueue.sendTo = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay\n    actions.push(sendTo(...args));\n  };\n  enqueue.sendParent = (...args) => {\n    actions.push(sendParent(...args));\n  };\n  enqueue.spawnChild = (...args) => {\n    actions.push(spawnChild(...args));\n  };\n  enqueue.stopChild = (...args) => {\n    actions.push(stopChild(...args));\n  };\n  enqueue.emit = (...args) => {\n    actions.push(emit(...args));\n  };\n  collect({\n    context: args.context,\n    event: args.event,\n    enqueue,\n    check: guard => evaluateGuard(guard, snapshot.context, args.event, snapshot),\n    self: actorScope.self,\n    system: actorScope.system\n  }, actionParams);\n  return [snapshot, undefined, actions];\n}\n/**\n * Creates an action object that will execute actions that are queued by the\n * `enqueue(action)` function.\n *\n * @example\n *\n * ```ts\n * import { createMachine, enqueueActions } from 'xstate';\n *\n * const machine = createMachine({\n *   entry: enqueueActions(({ enqueue, check }) => {\n *     enqueue.assign({ count: 0 });\n *\n *     if (check('someGuard')) {\n *       enqueue.assign({ count: 1 });\n *     }\n *\n *     enqueue('someAction');\n *   })\n * });\n * ```\n */\nfunction enqueueActions(collect) {\n  function enqueueActions(_args, _params) {\n  }\n  enqueueActions.type = 'xstate.enqueueActions';\n  enqueueActions.collect = collect;\n  enqueueActions.resolve = resolveEnqueueActions;\n  return enqueueActions;\n}\n\nfunction resolveLog(_, snapshot, actionArgs, actionParams, {\n  value,\n  label\n}) {\n  return [snapshot, {\n    value: typeof value === 'function' ? value(actionArgs, actionParams) : value,\n    label\n  }, undefined];\n}\nfunction executeLog({\n  logger\n}, {\n  value,\n  label\n}) {\n  if (label) {\n    logger(label, value);\n  } else {\n    logger(value);\n  }\n}\n/**\n * @param expr The expression function to evaluate which will be logged. Takes\n *   in 2 arguments:\n *\n *   - `ctx` - the current state context\n *   - `event` - the event that caused this action to be executed.\n *\n * @param label The label to give to the logged expression.\n */\nfunction log(value = ({\n  context,\n  event\n}) => ({\n  context,\n  event\n}), label) {\n  function log(_args, _params) {\n  }\n  log.type = 'xstate.log';\n  log.value = value;\n  log.label = label;\n  log.resolve = resolveLog;\n  log.execute = executeLog;\n  return log;\n}\n\nexport { SpecialTargets as S, assign as a, enqueueActions as b, sendTo as c, emit as e, forwardTo as f, log as l, sendParent as s };\n","export { createEmptyActor, fromCallback, fromEventObservable, fromObservable, fromPromise, fromTransition } from '../actors/dist/xstate-actors.esm.js';\nimport { t as toArray, S as STATE_DELIMITER, m as mapValues, f as formatTransitions, a as toTransitionConfigArray, b as formatTransition, N as NULL_EVENT, e as evaluateGuard, c as createInvokeId, g as getDelayedTransitions, d as formatInitialTransition, h as getCandidates, r as resolveStateValue, i as getAllStateNodes, j as getStateNodes, k as createMachineSnapshot, l as isInFinalState, n as macrostep, o as transitionNode, p as resolveActionsAndContext, q as createInitEvent, s as microstep, u as getInitialStateNodes, v as toStatePath, w as isStateId, x as getStateNodeByPath, y as getPersistedSnapshot, z as resolveReferencedActor, A as createActor, $ as $$ACTOR_TYPE } from './raise-c17ec2bc.esm.js';\nexport { B as Actor, I as __unsafe_getAllOwnEventDescriptors, D as and, M as cancel, A as createActor, j as getStateNodes, C as interpret, H as isMachineSnapshot, J as matchesState, E as not, F as or, K as pathToStateValue, O as raise, P as spawnChild, G as stateIn, Q as stop, R as stopChild, L as toObserver } from './raise-c17ec2bc.esm.js';\nimport { a as assign } from './log-3d9d72a9.esm.js';\nexport { S as SpecialTargets, a as assign, e as emit, b as enqueueActions, f as forwardTo, l as log, s as sendParent, c as sendTo } from './log-3d9d72a9.esm.js';\nimport '../dev/dist/xstate-dev.esm.js';\n\n/**\n * Asserts that the given event object is of the specified type or types. Throws\n * an error if the event object is not of the specified types.\n *\n * @example\n *\n * ```ts\n * // ...\n * entry: ({ event }) => {\n *   assertEvent(event, 'doNothing');\n *   // event is { type: 'doNothing' }\n * },\n * // ...\n * exit: ({ event }) => {\n *   assertEvent(event, 'greet');\n *   // event is { type: 'greet'; message: string }\n *\n *   assertEvent(event, ['greet', 'notify']);\n *   // event is { type: 'greet'; message: string }\n *   // or { type: 'notify'; message: string; level: 'info' | 'error' }\n * },\n * ```\n */\nfunction assertEvent(event, type) {\n  const types = toArray(type);\n  if (!types.includes(event.type)) {\n    const typesText = types.length === 1 ? `type \"${types[0]}\"` : `one of types \"${types.join('\", \"')}\"`;\n    throw new Error(`Expected event ${JSON.stringify(event)} to have ${typesText}`);\n  }\n}\n\nconst cache = new WeakMap();\nfunction memo(object, key, fn) {\n  let memoizedData = cache.get(object);\n  if (!memoizedData) {\n    memoizedData = {\n      [key]: fn()\n    };\n    cache.set(object, memoizedData);\n  } else if (!(key in memoizedData)) {\n    memoizedData[key] = fn();\n  }\n  return memoizedData[key];\n}\n\nconst EMPTY_OBJECT = {};\nconst toSerializableAction = action => {\n  if (typeof action === 'string') {\n    return {\n      type: action\n    };\n  }\n  if (typeof action === 'function') {\n    if ('resolve' in action) {\n      return {\n        type: action.type\n      };\n    }\n    return {\n      type: action.name\n    };\n  }\n  return action;\n};\nclass StateNode {\n  constructor(/** The raw config used to create the machine. */\n  config, options) {\n    this.config = config;\n    /**\n     * The relative key of the state node, which represents its location in the\n     * overall state value.\n     */\n    this.key = void 0;\n    /** The unique ID of the state node. */\n    this.id = void 0;\n    /**\n     * The type of this state node:\n     *\n     * - `'atomic'` - no child state nodes\n     * - `'compound'` - nested child state nodes (XOR)\n     * - `'parallel'` - orthogonal nested child state nodes (AND)\n     * - `'history'` - history state node\n     * - `'final'` - final state node\n     */\n    this.type = void 0;\n    /** The string path from the root machine node to this node. */\n    this.path = void 0;\n    /** The child state nodes. */\n    this.states = void 0;\n    /**\n     * The type of history on this state node. Can be:\n     *\n     * - `'shallow'` - recalls only top-level historical state value\n     * - `'deep'` - recalls historical state value at all levels\n     */\n    this.history = void 0;\n    /** The action(s) to be executed upon entering the state node. */\n    this.entry = void 0;\n    /** The action(s) to be executed upon exiting the state node. */\n    this.exit = void 0;\n    /** The parent state node. */\n    this.parent = void 0;\n    /** The root machine node. */\n    this.machine = void 0;\n    /**\n     * The meta data associated with this state node, which will be returned in\n     * State instances.\n     */\n    this.meta = void 0;\n    /**\n     * The output data sent with the \"xstate.done.state._id_\" event if this is a\n     * final state node.\n     */\n    this.output = void 0;\n    /**\n     * The order this state node appears. Corresponds to the implicit document\n     * order.\n     */\n    this.order = -1;\n    this.description = void 0;\n    this.tags = [];\n    this.transitions = void 0;\n    this.always = void 0;\n    this.parent = options._parent;\n    this.key = options._key;\n    this.machine = options._machine;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.id = this.config.id || [this.machine.id, ...this.path].join(STATE_DELIMITER);\n    this.type = this.config.type || (this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.description = this.config.description;\n    this.order = this.machine.idMap.size;\n    this.machine.idMap.set(this.id, this);\n    this.states = this.config.states ? mapValues(this.config.states, (stateConfig, key) => {\n      const stateNode = new StateNode(stateConfig, {\n        _parent: this,\n        _key: key,\n        _machine: this.machine\n      });\n      return stateNode;\n    }) : EMPTY_OBJECT;\n    if (this.type === 'compound' && !this.config.initial) {\n      throw new Error(`No initial state specified for compound state node \"#${this.id}\". Try adding { initial: \"${Object.keys(this.states)[0]}\" } to the state config.`);\n    }\n\n    // History config\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this.entry = toArray(this.config.entry).slice();\n    this.exit = toArray(this.config.exit).slice();\n    this.meta = this.config.meta;\n    this.output = this.type === 'final' || !this.parent ? this.config.output : undefined;\n    this.tags = toArray(config.tags).slice();\n  }\n\n  /** @internal */\n  _initialize() {\n    this.transitions = formatTransitions(this);\n    if (this.config.always) {\n      this.always = toTransitionConfigArray(this.config.always).map(t => formatTransition(this, NULL_EVENT, t));\n    }\n    Object.keys(this.states).forEach(key => {\n      this.states[key]._initialize();\n    });\n  }\n\n  /** The well-structured state node definition. */\n  get definition() {\n    return {\n      id: this.id,\n      key: this.key,\n      version: this.machine.version,\n      type: this.type,\n      initial: this.initial ? {\n        target: this.initial.target,\n        source: this,\n        actions: this.initial.actions.map(toSerializableAction),\n        eventType: null,\n        reenter: false,\n        toJSON: () => ({\n          target: this.initial.target.map(t => `#${t.id}`),\n          source: `#${this.id}`,\n          actions: this.initial.actions.map(toSerializableAction),\n          eventType: null\n        })\n      } : undefined,\n      history: this.history,\n      states: mapValues(this.states, state => {\n        return state.definition;\n      }),\n      on: this.on,\n      transitions: [...this.transitions.values()].flat().map(t => ({\n        ...t,\n        actions: t.actions.map(toSerializableAction)\n      })),\n      entry: this.entry.map(toSerializableAction),\n      exit: this.exit.map(toSerializableAction),\n      meta: this.meta,\n      order: this.order || -1,\n      output: this.output,\n      invoke: this.invoke,\n      description: this.description,\n      tags: this.tags\n    };\n  }\n\n  /** @internal */\n  toJSON() {\n    return this.definition;\n  }\n\n  /** The logic invoked as actors by this state node. */\n  get invoke() {\n    return memo(this, 'invoke', () => toArray(this.config.invoke).map((invokeConfig, i) => {\n      const {\n        src,\n        systemId\n      } = invokeConfig;\n      const resolvedId = invokeConfig.id ?? createInvokeId(this.id, i);\n      const sourceName = typeof src === 'string' ? src : `xstate.invoke.${createInvokeId(this.id, i)}`;\n      return {\n        ...invokeConfig,\n        src: sourceName,\n        id: resolvedId,\n        systemId: systemId,\n        toJSON() {\n          const {\n            onDone,\n            onError,\n            ...invokeDefValues\n          } = invokeConfig;\n          return {\n            ...invokeDefValues,\n            type: 'xstate.invoke',\n            src: sourceName,\n            id: resolvedId\n          };\n        }\n      };\n    }));\n  }\n\n  /** The mapping of events to transitions. */\n  get on() {\n    return memo(this, 'on', () => {\n      const transitions = this.transitions;\n      return [...transitions].flatMap(([descriptor, t]) => t.map(t => [descriptor, t])).reduce((map, [descriptor, transition]) => {\n        map[descriptor] = map[descriptor] || [];\n        map[descriptor].push(transition);\n        return map;\n      }, {});\n    });\n  }\n  get after() {\n    return memo(this, 'delayedTransitions', () => getDelayedTransitions(this));\n  }\n  get initial() {\n    return memo(this, 'initial', () => formatInitialTransition(this, this.config.initial));\n  }\n\n  /** @internal */\n  next(snapshot, event) {\n    const eventType = event.type;\n    const actions = [];\n    let selectedTransition;\n    const candidates = memo(this, `candidates-${eventType}`, () => getCandidates(this, eventType));\n    for (const candidate of candidates) {\n      const {\n        guard\n      } = candidate;\n      const resolvedContext = snapshot.context;\n      let guardPassed = false;\n      try {\n        guardPassed = !guard || evaluateGuard(guard, resolvedContext, event, snapshot);\n      } catch (err) {\n        const guardType = typeof guard === 'string' ? guard : typeof guard === 'object' ? guard.type : undefined;\n        throw new Error(`Unable to evaluate guard ${guardType ? `'${guardType}' ` : ''}in transition for event '${eventType}' in state node '${this.id}':\\n${err.message}`);\n      }\n      if (guardPassed) {\n        actions.push(...candidate.actions);\n        selectedTransition = candidate;\n        break;\n      }\n    }\n    return selectedTransition ? [selectedTransition] : undefined;\n  }\n\n  /** All the event types accepted by this state node and its descendants. */\n  get events() {\n    return memo(this, 'events', () => {\n      const {\n        states\n      } = this;\n      const events = new Set(this.ownEvents);\n      if (states) {\n        for (const stateId of Object.keys(states)) {\n          const state = states[stateId];\n          if (state.states) {\n            for (const event of state.events) {\n              events.add(`${event}`);\n            }\n          }\n        }\n      }\n      return Array.from(events);\n    });\n  }\n\n  /**\n   * All the events that have transitions directly from this state node.\n   *\n   * Excludes any inert events.\n   */\n  get ownEvents() {\n    const events = new Set([...this.transitions.keys()].filter(descriptor => {\n      return this.transitions.get(descriptor).some(transition => !(!transition.target && !transition.actions.length && !transition.reenter));\n    }));\n    return Array.from(events);\n  }\n}\n\nconst STATE_IDENTIFIER = '#';\nclass StateMachine {\n  constructor(/** The raw config used to create the machine. */\n  config, implementations) {\n    this.config = config;\n    /** The machine's own version. */\n    this.version = void 0;\n    this.schemas = void 0;\n    this.implementations = void 0;\n    /** @internal */\n    this.__xstatenode = true;\n    /** @internal */\n    this.idMap = new Map();\n    this.root = void 0;\n    this.id = void 0;\n    this.states = void 0;\n    this.events = void 0;\n    this.id = config.id || '(machine)';\n    this.implementations = {\n      actors: implementations?.actors ?? {},\n      actions: implementations?.actions ?? {},\n      delays: implementations?.delays ?? {},\n      guards: implementations?.guards ?? {}\n    };\n    this.version = this.config.version;\n    this.schemas = this.config.schemas;\n    this.transition = this.transition.bind(this);\n    this.getInitialSnapshot = this.getInitialSnapshot.bind(this);\n    this.getPersistedSnapshot = this.getPersistedSnapshot.bind(this);\n    this.restoreSnapshot = this.restoreSnapshot.bind(this);\n    this.start = this.start.bind(this);\n    this.root = new StateNode(config, {\n      _key: this.id,\n      _machine: this\n    });\n    this.root._initialize();\n    this.states = this.root.states; // TODO: remove!\n    this.events = this.root.events;\n  }\n\n  /**\n   * Clones this state machine with the provided implementations and merges the\n   * `context` (if provided).\n   *\n   * @param implementations Options (`actions`, `guards`, `actors`, `delays`,\n   *   `context`) to recursively merge with the existing options.\n   * @returns A new `StateMachine` instance with the provided implementations.\n   */\n  provide(implementations) {\n    const {\n      actions,\n      guards,\n      actors,\n      delays\n    } = this.implementations;\n    return new StateMachine(this.config, {\n      actions: {\n        ...actions,\n        ...implementations.actions\n      },\n      guards: {\n        ...guards,\n        ...implementations.guards\n      },\n      actors: {\n        ...actors,\n        ...implementations.actors\n      },\n      delays: {\n        ...delays,\n        ...implementations.delays\n      }\n    });\n  }\n  resolveState(config) {\n    const resolvedStateValue = resolveStateValue(this.root, config.value);\n    const nodeSet = getAllStateNodes(getStateNodes(this.root, resolvedStateValue));\n    return createMachineSnapshot({\n      _nodes: [...nodeSet],\n      context: config.context || {},\n      children: {},\n      status: isInFinalState(nodeSet, this.root) ? 'done' : config.status || 'active',\n      output: config.output,\n      error: config.error,\n      historyValue: config.historyValue\n    }, this);\n  }\n\n  /**\n   * Determines the next snapshot given the current `snapshot` and received\n   * `event`. Calculates a full macrostep from all microsteps.\n   *\n   * @param snapshot The current snapshot\n   * @param event The received event\n   */\n  transition(snapshot, event, actorScope) {\n    return macrostep(snapshot, event, actorScope, []).snapshot;\n  }\n\n  /**\n   * Determines the next state given the current `state` and `event`. Calculates\n   * a microstep.\n   *\n   * @param state The current state\n   * @param event The received event\n   */\n  microstep(snapshot, event, actorScope) {\n    return macrostep(snapshot, event, actorScope, []).microstates;\n  }\n  getTransitionData(snapshot, event) {\n    return transitionNode(this.root, snapshot.value, snapshot, event) || [];\n  }\n\n  /**\n   * The initial state _before_ evaluating any microsteps. This \"pre-initial\"\n   * state is provided to initial actions executed in the initial state.\n   */\n  getPreInitialState(actorScope, initEvent, internalQueue) {\n    const {\n      context\n    } = this.config;\n    const preInitial = createMachineSnapshot({\n      context: typeof context !== 'function' && context ? context : {},\n      _nodes: [this.root],\n      children: {},\n      status: 'active'\n    }, this);\n    if (typeof context === 'function') {\n      const assignment = ({\n        spawn,\n        event,\n        self\n      }) => context({\n        spawn,\n        input: event.input,\n        self\n      });\n      return resolveActionsAndContext(preInitial, initEvent, actorScope, [assign(assignment)], internalQueue, undefined);\n    }\n    return preInitial;\n  }\n\n  /**\n   * Returns the initial `State` instance, with reference to `self` as an\n   * `ActorRef`.\n   */\n  getInitialSnapshot(actorScope, input) {\n    const initEvent = createInitEvent(input); // TODO: fix;\n    const internalQueue = [];\n    const preInitialState = this.getPreInitialState(actorScope, initEvent, internalQueue);\n    const nextState = microstep([{\n      target: [...getInitialStateNodes(this.root)],\n      source: this.root,\n      reenter: true,\n      actions: [],\n      eventType: null,\n      toJSON: null // TODO: fix\n    }], preInitialState, actorScope, initEvent, true, internalQueue);\n    const {\n      snapshot: macroState\n    } = macrostep(nextState, initEvent, actorScope, internalQueue);\n    return macroState;\n  }\n  start(snapshot) {\n    Object.values(snapshot.children).forEach(child => {\n      if (child.getSnapshot().status === 'active') {\n        child.start();\n      }\n    });\n  }\n  getStateNodeById(stateId) {\n    const fullPath = toStatePath(stateId);\n    const relativePath = fullPath.slice(1);\n    const resolvedStateId = isStateId(fullPath[0]) ? fullPath[0].slice(STATE_IDENTIFIER.length) : fullPath[0];\n    const stateNode = this.idMap.get(resolvedStateId);\n    if (!stateNode) {\n      throw new Error(`Child state node '#${resolvedStateId}' does not exist on machine '${this.id}'`);\n    }\n    return getStateNodeByPath(stateNode, relativePath);\n  }\n  get definition() {\n    return this.root.definition;\n  }\n  toJSON() {\n    return this.definition;\n  }\n  getPersistedSnapshot(snapshot, options) {\n    return getPersistedSnapshot(snapshot, options);\n  }\n  restoreSnapshot(snapshot, _actorScope) {\n    const children = {};\n    const snapshotChildren = snapshot.children;\n    Object.keys(snapshotChildren).forEach(actorId => {\n      const actorData = snapshotChildren[actorId];\n      const childState = actorData.snapshot;\n      const src = actorData.src;\n      const logic = typeof src === 'string' ? resolveReferencedActor(this, src) : src;\n      if (!logic) {\n        return;\n      }\n      const actorRef = createActor(logic, {\n        id: actorId,\n        parent: _actorScope.self,\n        syncSnapshot: actorData.syncSnapshot,\n        snapshot: childState,\n        src,\n        systemId: actorData.systemId\n      });\n      children[actorId] = actorRef;\n    });\n    const restoredSnapshot = createMachineSnapshot({\n      ...snapshot,\n      children,\n      _nodes: Array.from(getAllStateNodes(getStateNodes(this.root, snapshot.value)))\n    }, this);\n    const seen = new Set();\n    function reviveContext(contextPart, children) {\n      if (seen.has(contextPart)) {\n        return;\n      }\n      seen.add(contextPart);\n      for (const key in contextPart) {\n        const value = contextPart[key];\n        if (value && typeof value === 'object') {\n          if ('xstate$$type' in value && value.xstate$$type === $$ACTOR_TYPE) {\n            contextPart[key] = children[value.id];\n            continue;\n          }\n          reviveContext(value, children);\n        }\n      }\n    }\n    reviveContext(restoredSnapshot.context, children);\n    return restoredSnapshot;\n  }\n}\n\n/**\n * Creates a state machine (statechart) with the given configuration.\n *\n * The state machine represents the pure logic of a state machine actor.\n *\n * @example\n *\n * ```ts\n * import { createMachine } from 'xstate';\n *\n * const lightMachine = createMachine({\n *   id: 'light',\n *   initial: 'green',\n *   states: {\n *     green: {\n *       on: {\n *         TIMER: { target: 'yellow' }\n *       }\n *     },\n *     yellow: {\n *       on: {\n *         TIMER: { target: 'red' }\n *       }\n *     },\n *     red: {\n *       on: {\n *         TIMER: { target: 'green' }\n *       }\n *     }\n *   }\n * });\n *\n * const lightActor = createActor(lightMachine);\n * lightActor.start();\n *\n * lightActor.send({ type: 'TIMER' });\n * ```\n *\n * @param config The state machine configuration.\n * @param options DEPRECATED: use `setup({ ... })` or `machine.provide({ ... })`\n *   to provide machine implementations instead.\n */\nfunction createMachine(config, implementations) {\n  return new StateMachine(config, implementations);\n}\n\n/** @internal */\nfunction createInertActorScope(actorLogic) {\n  const self = createActor(actorLogic);\n  const inertActorScope = {\n    self,\n    defer: () => {},\n    id: '',\n    logger: () => {},\n    sessionId: '',\n    stopChild: () => {},\n    system: self.system,\n    emit: () => {},\n    actionExecutor: () => {}\n  };\n  return inertActorScope;\n}\n\n/** @deprecated Use `initialTransition(…)` instead. */\nfunction getInitialSnapshot(actorLogic, ...[input]) {\n  const actorScope = createInertActorScope(actorLogic);\n  return actorLogic.getInitialSnapshot(actorScope, input);\n}\n\n/**\n * Determines the next snapshot for the given `actorLogic` based on the given\n * `snapshot` and `event`.\n *\n * If the `snapshot` is `undefined`, the initial snapshot of the `actorLogic` is\n * used.\n *\n * @deprecated Use `transition(…)` instead.\n * @example\n *\n * ```ts\n * import { getNextSnapshot } from 'xstate';\n * import { trafficLightMachine } from './trafficLightMachine.ts';\n *\n * const nextSnapshot = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   undefined, // snapshot (or initial state if undefined)\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot.value);\n * // => 'yellow'\n *\n * const nextSnapshot2 = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   nextSnapshot, // snapshot\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot2.value);\n * // =>'red'\n * ```\n */\nfunction getNextSnapshot(actorLogic, snapshot, event) {\n  const inertActorScope = createInertActorScope(actorLogic);\n  inertActorScope.self._snapshot = snapshot;\n  return actorLogic.transition(snapshot, event, inertActorScope);\n}\n\n// at the moment we allow extra actors - ones that are not specified by `children`\n// this could be reconsidered in the future\n\nfunction setup({\n  schemas,\n  actors,\n  actions,\n  guards,\n  delays\n}) {\n  return {\n    createMachine: config => createMachine({\n      ...config,\n      schemas\n    }, {\n      actors,\n      actions,\n      guards,\n      delays\n    })\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nclass SimulatedClock {\n  constructor() {\n    this.timeouts = new Map();\n    this._now = 0;\n    this._id = 0;\n    this._flushing = false;\n    this._flushingInvalidated = false;\n  }\n  now() {\n    return this._now;\n  }\n  getId() {\n    return this._id++;\n  }\n  setTimeout(fn, timeout) {\n    this._flushingInvalidated = this._flushing;\n    const id = this.getId();\n    this.timeouts.set(id, {\n      start: this.now(),\n      timeout,\n      fn\n    });\n    return id;\n  }\n  clearTimeout(id) {\n    this._flushingInvalidated = this._flushing;\n    this.timeouts.delete(id);\n  }\n  set(time) {\n    if (this._now > time) {\n      throw new Error('Unable to travel back in time');\n    }\n    this._now = time;\n    this.flushTimeouts();\n  }\n  flushTimeouts() {\n    if (this._flushing) {\n      this._flushingInvalidated = true;\n      return;\n    }\n    this._flushing = true;\n    const sorted = [...this.timeouts].sort(([_idA, timeoutA], [_idB, timeoutB]) => {\n      const endA = timeoutA.start + timeoutA.timeout;\n      const endB = timeoutB.start + timeoutB.timeout;\n      return endB > endA ? -1 : 1;\n    });\n    for (const [id, timeout] of sorted) {\n      if (this._flushingInvalidated) {\n        this._flushingInvalidated = false;\n        this._flushing = false;\n        this.flushTimeouts();\n        return;\n      }\n      if (this.now() - timeout.start >= timeout.timeout) {\n        this.timeouts.delete(id);\n        timeout.fn.call(null);\n      }\n    }\n    this._flushing = false;\n  }\n  increment(ms) {\n    this._now += ms;\n    this.flushTimeouts();\n  }\n}\n\n/**\n * Returns a promise that resolves to the `output` of the actor when it is done.\n *\n * @example\n *\n * ```ts\n * const machine = createMachine({\n *   // ...\n *   output: {\n *     count: 42\n *   }\n * });\n *\n * const actor = createActor(machine);\n *\n * actor.start();\n *\n * const output = await toPromise(actor);\n *\n * console.log(output);\n * // logs { count: 42 }\n * ```\n */\nfunction toPromise(actor) {\n  return new Promise((resolve, reject) => {\n    actor.subscribe({\n      complete: () => {\n        resolve(actor.getSnapshot().output);\n      },\n      error: reject\n    });\n  });\n}\n\n/**\n * Given actor `logic`, a `snapshot`, and an `event`, returns a tuple of the\n * `nextSnapshot` and `actions` to execute.\n *\n * This is a pure function that does not execute `actions`.\n */\nfunction transition(logic, snapshot, event) {\n  const executableActions = [];\n  const actorScope = createInertActorScope(logic);\n  actorScope.actionExecutor = action => {\n    executableActions.push(action);\n  };\n  const nextSnapshot = logic.transition(snapshot, event, actorScope);\n  return [nextSnapshot, executableActions];\n}\n\n/**\n * Given actor `logic` and optional `input`, returns a tuple of the\n * `nextSnapshot` and `actions` to execute from the initial transition (no\n * previous state).\n *\n * This is a pure function that does not execute `actions`.\n */\nfunction initialTransition(logic, ...[input]) {\n  const executableActions = [];\n  const actorScope = createInertActorScope(logic);\n  actorScope.actionExecutor = action => {\n    executableActions.push(action);\n  };\n  const nextSnapshot = logic.getInitialSnapshot(actorScope, input);\n  return [nextSnapshot, executableActions];\n}\n\nconst defaultWaitForOptions = {\n  timeout: Infinity // much more than 10 seconds\n};\n\n/**\n * Subscribes to an actor ref and waits for its emitted value to satisfy a\n * predicate, and then resolves with that value. Will throw if the desired state\n * is not reached after an optional timeout. (defaults to Infinity).\n *\n * @example\n *\n * ```js\n * const state = await waitFor(someService, (state) => {\n *   return state.hasTag('loaded');\n * });\n *\n * state.hasTag('loaded'); // true\n * ```\n *\n * @param actorRef The actor ref to subscribe to\n * @param predicate Determines if a value matches the condition to wait for\n * @param options\n * @returns A promise that eventually resolves to the emitted value that matches\n *   the condition\n */\nfunction waitFor(actorRef, predicate, options) {\n  const resolvedOptions = {\n    ...defaultWaitForOptions,\n    ...options\n  };\n  return new Promise((res, rej) => {\n    const {\n      signal\n    } = resolvedOptions;\n    if (signal?.aborted) {\n      // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n      rej(signal.reason);\n      return;\n    }\n    let done = false;\n    const handle = resolvedOptions.timeout === Infinity ? undefined : setTimeout(() => {\n      dispose();\n      rej(new Error(`Timeout of ${resolvedOptions.timeout} ms exceeded`));\n    }, resolvedOptions.timeout);\n    const dispose = () => {\n      clearTimeout(handle);\n      done = true;\n      sub?.unsubscribe();\n      if (abortListener) {\n        signal.removeEventListener('abort', abortListener);\n      }\n    };\n    function checkEmitted(emitted) {\n      if (predicate(emitted)) {\n        dispose();\n        res(emitted);\n      }\n    }\n\n    /**\n     * If the `signal` option is provided, this will be the listener for its\n     * `abort` event\n     */\n    let abortListener;\n    // eslint-disable-next-line prefer-const\n    let sub; // avoid TDZ when disposing synchronously\n\n    // See if the current snapshot already matches the predicate\n    checkEmitted(actorRef.getSnapshot());\n    if (done) {\n      return;\n    }\n\n    // only define the `abortListener` if the `signal` option is provided\n    if (signal) {\n      abortListener = () => {\n        dispose();\n        // XState does not \"own\" the signal, so we should reject with its reason (if any)\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        rej(signal.reason);\n      };\n      signal.addEventListener('abort', abortListener);\n    }\n    sub = actorRef.subscribe({\n      next: checkEmitted,\n      error: err => {\n        dispose();\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        rej(err);\n      },\n      complete: () => {\n        dispose();\n        rej(new Error(`Actor terminated without satisfying predicate`));\n      }\n    });\n    if (done) {\n      sub.unsubscribe();\n    }\n  });\n}\n\nexport { SimulatedClock, StateMachine, StateNode, assertEvent, createMachine, getInitialSnapshot, getNextSnapshot, initialTransition, setup, toPromise, transition, waitFor };\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/connection/index.ts\nvar connection_exports = {};\n__export(connection_exports, {\n  Connection: () => Connection,\n  DEVICE_REMOVED: () => DEVICE_REMOVED,\n  DEVICE_UNKNOWN: () => DEVICE_UNKNOWN,\n  ENCRYPTION_FAILURE: () => ENCRYPTION_FAILURE,\n  IDENTITY_PROOF_INVALID: () => IDENTITY_PROOF_INVALID,\n  INVITATION_PROOF_INVALID: () => INVITATION_PROOF_INVALID,\n  JOINED_WRONG_TEAM: () => JOINED_WRONG_TEAM,\n  MEMBER_REMOVED: () => MEMBER_REMOVED,\n  NEITHER_IS_MEMBER: () => NEITHER_IS_MEMBER,\n  SERVER_REMOVED: () => SERVER_REMOVED,\n  TIMEOUT: () => TIMEOUT,\n  UNHANDLED: () => UNHANDLED,\n  connectionErrors: () => connectionErrors,\n  createErrorMessage: () => createErrorMessage,\n  isInviteeClaim: () => isInviteeClaim,\n  isInviteeContext: () => isInviteeContext,\n  isInviteeDeviceClaim: () => isInviteeDeviceClaim,\n  isInviteeDeviceContext: () => isInviteeDeviceContext,\n  isInviteeMemberClaim: () => isInviteeMemberClaim,\n  isInviteeMemberContext: () => isInviteeMemberContext,\n  isMemberClaim: () => isMemberClaim,\n  isMemberContext: () => isMemberContext,\n  isServerContext: () => isServerContext\n});\n\n// src/connection/Connection.ts\nimport { EventEmitter as EventEmitter3 } from \"@herbcaudill/eventemitter42\";\nimport {\n  generateMessage,\n  headsAreEqual,\n  initSyncState,\n  receiveMessage,\n  redactKeys as redactKeys4\n} from \"@localfirst/crdx\";\nimport { asymmetric as asymmetric3, base58 as base582, randomKeyBytes, symmetric as symmetric2 } from \"@localfirst/crypto\";\nimport { assert as assert8, debug as debug4 } from \"@localfirst/shared\";\n\n// src/connection/deriveSharedKey.ts\nimport { hash, hashBytes, base58 } from \"@localfirst/crypto\";\n\n// src/util/actionFingerprint.ts\nvar actionFingerprint = (link) => {\n  const fingerprintPayload = (action) => {\n    switch (action.type) {\n      case \"ADD_MEMBER\": {\n        return action.payload.member.userId;\n      }\n      case \"REMOVE_MEMBER\": {\n        return action.payload.userId;\n      }\n      case \"ADD_ROLE\": {\n        return action.payload.roleName;\n      }\n      case \"ADD_MEMBER_ROLE\":\n      case \"REMOVE_MEMBER_ROLE\": {\n        return `${action.payload.roleName}:${action.payload.userId}`;\n      }\n      case \"ADD_DEVICE\": {\n        return action.payload.device.deviceId;\n      }\n      case \"REMOVE_DEVICE\": {\n        return action.payload.deviceId;\n      }\n      case \"INVITE_MEMBER\":\n      case \"INVITE_DEVICE\": {\n        return action.payload.invitation.id;\n      }\n      case \"REVOKE_INVITATION\": {\n        return action.payload.id;\n      }\n      case \"ADMIT_MEMBER\":\n      case \"ADMIT_DEVICE\": {\n        return action.payload.id;\n      }\n      case \"CHANGE_MEMBER_KEYS\": {\n        return JSON.stringify(action.payload.keys);\n      }\n      default: {\n        return JSON.stringify(action.payload);\n      }\n    }\n  };\n  if (link.body.type === \"ROOT\") {\n    return \"ROOT\";\n  }\n  return `${link.body.type}:${fingerprintPayload(link.body)}`;\n};\n\n// src/util/arraysAreEqual.ts\nvar arraysAreEqual = (a, b) => {\n  if (!a || !b) return false;\n  const normalize2 = (array) => array.sort().join(\",\");\n  return normalize2(a) === normalize2(b);\n};\n\n// src/util/graphSummary.ts\nimport { getSequence } from \"@localfirst/crdx\";\n\n// src/team/membershipResolver.ts\nimport { getConcurrentBubbles } from \"@localfirst/crdx\";\n\n// src/team/isAdminOnlyAction.ts\nvar isAdminOnlyAction = (action) => {\n  const nonAdminActions = [\n    \"INVITE_DEVICE\",\n    \"ADD_DEVICE\",\n    \"REMOVE_DEVICE\",\n    \"CHANGE_MEMBER_KEYS\",\n    \"CHANGE_SERVER_KEYS\",\n    \"ADMIT_MEMBER\",\n    \"ADMIT_DEVICE\"\n  ];\n  return !nonAdminActions.includes(action.type);\n};\n\n// src/role/index.ts\nvar role_exports = {};\n__export(role_exports, {\n  ADMIN: () => ADMIN\n});\n\n// src/role/constants.ts\nvar ADMIN = \"admin\";\n\n// src/team/bySeniority.ts\nimport { isPredecessor } from \"@localfirst/crdx\";\nimport { assert } from \"@localfirst/shared\";\nvar bySeniority = (chain) => (a, b) => {\n  if (isFounder(chain, a)) return -1;\n  if (isFounder(chain, b)) return 1;\n  const linkThatAddedMember = (userId) => {\n    const addedMember = (link) => link.body.type === \"ADD_MEMBER\" && link.body.payload.member.userId === userId;\n    const result = Object.values(chain.links).find(addedMember);\n    assert(result, `Could not find link that added member ${userId}`);\n    return result;\n  };\n  const [addedA, addedB] = [a, b].map(linkThatAddedMember);\n  return isPredecessor(chain, addedA, addedB) ? -1 : 1;\n};\nvar isFounder = (chain, userId) => {\n  const rootLink = chain.links[chain.root];\n  return rootLink.body.userId === userId;\n};\n\n// src/team/membershipResolver.ts\nvar membershipResolver = (graph) => {\n  const bubbles = getConcurrentBubbles(graph).map((hashes) => hashes.map((hash3) => graph.links[hash3]));\n  const invalidLinks = [];\n  for (let bubble of bubbles) {\n    for (const ruleName in membershipRules) {\n      const rule = membershipRules[ruleName];\n      const invalidLinksByThisRule = rule(bubble, graph);\n      const alsoInvalid = invalidLinksByThisRule.flatMap((link) => findDependentLinks(bubble, link));\n      invalidLinks.push(...invalidLinksByThisRule, ...alsoInvalid);\n      bubble = bubble.filter(linkNotIn(invalidLinks));\n    }\n  }\n  return {\n    filter: linkNotIn(invalidLinks)\n  };\n};\nvar findDependentLinks = (bubble, invalidLink) => {\n  const dependentLinks = [];\n  switch (invalidLink.body.type) {\n    case \"INVITE_MEMBER\":\n    case \"INVITE_DEVICE\": {\n      const { invitation } = invalidLink.body.payload;\n      dependentLinks.push(...bubble.filter(usesInvitation(invitation)));\n      break;\n    }\n    case \"ADMIT_MEMBER\": {\n      const userId = invalidLink.body.payload.memberKeys.name;\n      dependentLinks.push(...bubble.filter(authorIs(userId)));\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  const alsoInvalid = dependentLinks.flatMap((l) => findDependentLinks(bubble, l));\n  return dependentLinks.concat(alsoInvalid);\n};\nvar membershipRules = {\n  // RULE: mutual and circular removals are resolved by seniority\n  resolveMutualRemovals(links, chain) {\n    const removed = getRemovedAndDemotedMembers(links);\n    const removers = getRemovalsAndDemotions(links).map(getAuthor);\n    const isCircularRemoval = removed.length > 0 && arraysAreEqual(removed, removers);\n    if (!isCircularRemoval) {\n      return [];\n    }\n    return links.filter(authorIs(leastSenior(chain, removers)));\n  },\n  // RULE: If A is removing C, B can't overcome this by concurrently removing C then adding C back\n  cantAddBackRemovedMember(links) {\n    const removedMembers = getRemovedAndDemotedMembers(links);\n    return getAdditions(links).filter((link) => removedMembers.includes(addedUserId(link)));\n  },\n  // RULE: If B is removed, anything they do concurrently is omitted\n  cantDoAnythingWhenRemoved(links) {\n    const removedMembers = getRemovedMembers(links);\n    return links.filter(authorIn(removedMembers));\n  },\n  // RULE: If B is demoted, any admin-only actions they do concurrently are omitted\n  cantDoAdminActionsWhenDemoted(links) {\n    const demotedMembers = getDemotedMembers(links);\n    const authorDemoted = authorIn(demotedMembers);\n    const isAdminOnly = (link) => isAdminOnlyAction(link.body);\n    return links.filter((link) => authorDemoted(link) && isAdminOnly(link));\n  }\n};\nvar leastSenior = (chain, userNames) => userNames.sort(bySeniority(chain)).pop();\nvar isAddAction = (link) => [\"ADD_MEMBER\", \"ADD_MEMBER_ROLE\", \"ADMIT_MEMBER\"].includes(link.body.type);\nvar isRemovalAction = (link) => link.body.type === \"REMOVE_MEMBER\";\nvar getAdditions = (links) => links.filter(isAddAction);\nvar getRemovals = (links) => links.filter(isRemovalAction);\nvar isDemotionAction = (link) => link.body.type === \"REMOVE_MEMBER_ROLE\" && link.body.payload.roleName === ADMIN;\nvar getDemotions = (links) => links.filter(isDemotionAction);\nvar getRemovalsAndDemotions = (links) => getRemovals(links).concat(getDemotions(links));\nvar getRemovedAndDemotedMembers = (links) => getRemovalsAndDemotions(links).map(getTarget);\nvar getRemovedMembers = (links) => getRemovals(links).map(getTarget);\nvar getDemotedMembers = (links) => getDemotions(links).map(getTarget);\nvar getTarget = (link) => link.body.payload.userId;\nvar getAuthor = (link) => link.body.userId;\nvar authorIs = (author) => (link) => getAuthor(link) === author;\nvar authorIn = (excludeList) => (link) => excludeList.includes(getAuthor(link));\nvar addedUserId = (link) => {\n  switch (link.body.type) {\n    case \"ADD_MEMBER\": {\n      const addAction = link.body;\n      return addAction.payload.member.userId;\n    }\n    case \"ADD_MEMBER_ROLE\": {\n      const addAction = link.body;\n      return addAction.payload.userId;\n    }\n    case \"ADMIT_MEMBER\": {\n      const addAction = link.body;\n      return addAction.payload.memberKeys.name;\n    }\n  }\n};\nvar linkNotIn = (excludeList) => (link) => !excludeList.includes(link);\nvar usesInvitation = (invitation) => (l) => (l.body.type === \"ADMIT_MEMBER\" || l.body.type === \"ADMIT_DEVICE\") && l.body.payload.id === invitation.id;\n\n// src/util/graphSummary.ts\nvar graphSummary = (graph) => {\n  const links = getSequence(graph, membershipResolver).filter((l) => !l.isInvalid).map((l) => actionFingerprint(l)).join(\",\");\n  return links;\n};\n\n// src/util/clone.ts\nimport { clone } from \"lodash-es\";\n\n// src/util/constants.ts\nvar SIGNATURE = \"SIGNATURE\";\nvar ENCRYPTION = \"ENCRYPTION\";\nvar SYMMETRIC = \"SYMMETRIC\";\nvar LINK_HASH = \"LINK_HASH\";\nvar LINK_TO_PREVIOUS = \"LINK_TO_PREVIOUS\";\nvar INVITATION = \"INVITATION\";\nvar DEVICE_ID = \"DEVICE_ID\";\nvar SHARED_KEY = \"SHARED_KEY\";\nvar HashPurpose = {\n  SIGNATURE,\n  ENCRYPTION,\n  SYMMETRIC,\n  LINK_HASH,\n  LINK_TO_PREVIOUS,\n  INVITATION,\n  DEVICE_ID,\n  SHARED_KEY\n};\nvar VALID = { isValid: true };\n\n// src/util/composeTransforms.ts\nvar composeTransforms = (transforms) => (state) => transforms.reduce((state2, transform) => transform(state2), state);\n\n// src/util/getScope.ts\nvar getScope = (x) => ({\n  type: x.type,\n  name: x.name\n});\n\n// src/util/lockboxSummary.ts\nvar lockboxSummary = (l) => `${l.recipient.name}(${trunc(l.recipient.publicKey)}):${l.contents.name}#${l.contents.generation}`;\nvar trunc = (s) => s.slice(0, 5);\n\n// src/util/scopesMatch.ts\nimport { assert as assert2 } from \"@localfirst/shared\";\nvar scopesMatch = (a, b) => {\n  return a.type === b.type && a.name === b.name;\n};\nvar assertScopesMatch = (a, b) => {\n  assert2(\n    scopesMatch(a, b),\n    `The scope of the new keys must match those of the old lockbox. \n     New scope: ${JSON.stringify(getScope(a))} \n     Old scope: ${JSON.stringify(getScope(b))}`\n  );\n};\n\n// src/util/types.ts\nvar KeyType = {\n  GRAPH: \"GRAPH\",\n  TEAM: \"TEAM\",\n  ROLE: \"ROLE\",\n  USER: \"USER\",\n  DEVICE: \"DEVICE\",\n  SERVER: \"SERVER\",\n  EPHEMERAL: \"EPHEMERAL\"\n};\nvar ValidationError = class extends Error {\n  constructor(message, details) {\n    super();\n    this.message = message;\n    this.details = details;\n  }\n  name;\n  details;\n};\n\n// src/connection/deriveSharedKey.ts\nvar deriveSharedKey = (a, b) => {\n  const aBytes = typeof a === \"string\" ? base58.decode(a) : a;\n  const bBytes = typeof b === \"string\" ? base58.decode(b) : b;\n  const concatenatedSeeds = [aBytes, bBytes].sort(byteArraySortComparator).reduce((result, seed) => new Uint8Array([...result, ...seed]), new Uint8Array());\n  const hashFn = typeof a === \"string\" ? hash : hashBytes;\n  return hashFn(HashPurpose.SHARED_KEY, concatenatedSeeds);\n};\nvar byteArraySortComparator = (a, b) => {\n  const aString = a.toString();\n  const bString = b.toString();\n  if (aString < bString) return -1;\n  if (aString > bString) return 1;\n  return 0;\n};\n\n// src/connection/errors.ts\nvar DEVICE_REMOVED = \"DEVICE_REMOVED\";\nvar DEVICE_UNKNOWN = \"DEVICE_UNKNOWN\";\nvar ENCRYPTION_FAILURE = \"ENCRYPTION_FAILURE\";\nvar IDENTITY_PROOF_INVALID = \"IDENTITY_PROOF_INVALID\";\nvar INVITATION_PROOF_INVALID = \"INVITATION_PROOF_INVALID\";\nvar JOINED_WRONG_TEAM = \"JOINED_WRONG_TEAM\";\nvar MEMBER_REMOVED = \"MEMBER_REMOVED\";\nvar NEITHER_IS_MEMBER = \"NEITHER_IS_MEMBER\";\nvar SERVER_REMOVED = \"SERVER_REMOVED\";\nvar TIMEOUT = \"TIMEOUT\";\nvar UNHANDLED = \"UNHANDLED\";\nvar connectionErrors = {\n  [DEVICE_REMOVED]: {\n    localMessage: \"The peer's device was removed from this team\",\n    remoteMessage: \"Your device was removed from this team\"\n  },\n  [DEVICE_UNKNOWN]: {\n    localMessage: \"The peer's device isn't listed on this team\",\n    remoteMessage: \"Your device isn't listed on this team\"\n  },\n  [ENCRYPTION_FAILURE]: {\n    localMessage: \"Unable to establish a secure connection\"\n  },\n  [IDENTITY_PROOF_INVALID]: {\n    localMessage: \"The peer's proof of identity is not valid\",\n    remoteMessage: \"Your proof of identity isn't valid\"\n  },\n  [INVITATION_PROOF_INVALID]: {\n    localMessage: \"The peer's invitation wasn't accepted\",\n    remoteMessage: \"Your invitation wasn't accepted\"\n  },\n  [JOINED_WRONG_TEAM]: {\n    localMessage: \"This isn't the team you were invited to\",\n    remoteMessage: \"This isn't the team the peer was invited to\"\n  },\n  [MEMBER_REMOVED]: {\n    localMessage: \"The peer was removed from this team\",\n    remoteMessage: \"You were removed from this team\"\n  },\n  [NEITHER_IS_MEMBER]: {\n    localMessage: \"The peer is also holding an invitation and cannot admit you to the team\"\n  },\n  [SERVER_REMOVED]: {\n    localMessage: \"The server was removed from this team\",\n    remoteMessage: \"You (a server) were removed from this team\"\n  },\n  [TIMEOUT]: {\n    localMessage: \"We didn't hear back from the peer; giving up\",\n    remoteMessage: \"The peer didn't hear back from you, so they gave up\"\n  },\n  [UNHANDLED]: {\n    localMessage: \"An unhandled error occurred\"\n  }\n};\nvar createErrorMessage = (type, destination = \"LOCAL\") => {\n  const { localMessage, remoteMessage = localMessage } = connectionErrors[type];\n  const message = destination === \"LOCAL\" ? localMessage : remoteMessage;\n  const messageType = destination === \"LOCAL\" ? \"LOCAL_ERROR\" : \"ERROR\";\n  return { type: messageType, payload: { type, message } };\n};\n\n// src/connection/getDeviceUserFromGraph.ts\nimport { getLatestGeneration } from \"@localfirst/crdx\";\nimport { assert as assert6 } from \"@localfirst/shared\";\n\n// src/invitation/generateProof.ts\nimport { memoize as memoize2 } from \"@localfirst/shared\";\nimport { signatures } from \"@localfirst/crypto\";\n\n// src/invitation/deriveId.ts\nimport { hash as hash2, stretch } from \"@localfirst/crypto\";\nfunction deriveId(seed) {\n  const stretchedKey = stretch(seed);\n  return hash2(HashPurpose.INVITATION, stretchedKey).slice(0, 15);\n}\n\n// src/invitation/generateStarterKeys.ts\nimport { createKeyset, EPHEMERAL_SCOPE } from \"@localfirst/crdx\";\n\n// src/invitation/normalize.ts\nvar normalize = (secretKey) => secretKey.replaceAll(/[^a-z\\d]/gi, \"\");\n\n// src/invitation/generateStarterKeys.ts\nimport { memoize } from \"@localfirst/shared\";\nvar generateStarterKeys = memoize((seed) => {\n  seed = normalize(seed);\n  return createKeyset(EPHEMERAL_SCOPE, seed);\n});\n\n// src/invitation/generateProof.ts\nvar generateProof = memoize2((seed) => {\n  seed = normalize(seed);\n  const id = deriveId(seed);\n  const ephemeralKeys = generateStarterKeys(seed);\n  const payload = { id };\n  const signature = signatures.sign(payload, ephemeralKeys.signature.secretKey);\n  return { id, signature };\n});\n\n// src/team/serialize.ts\nimport {\n  decryptGraph,\n  getChildMap\n} from \"@localfirst/crdx\";\nimport { pack, unpack } from \"msgpackr\";\nvar serializeTeamGraph = (graph) => {\n  const childMap = getChildMap(graph);\n  const { encryptedLinks, head, root } = graph;\n  const encryptedGraph = { encryptedLinks, childMap, head, root };\n  const serialized = pack(encryptedGraph);\n  return toUint8Array(serialized);\n};\nvar deserializeTeamGraph = (serialized, keys2) => {\n  const encryptedGraph = unpack(serialized);\n  return decryptGraph({ encryptedGraph, keys: keys2 });\n};\nvar maybeDeserialize = (source, teamKeyring2) => isGraph(source) ? source : deserializeTeamGraph(source, teamKeyring2);\nvar isGraph = (source) => source?.hasOwnProperty(\"root\");\nvar toUint8Array = (buf) => new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n\n// src/team/teamMachine.ts\nimport { makeMachine } from \"@localfirst/crdx\";\n\n// src/team/constants.ts\nvar ALL = \"ALL\";\nvar initialState = {\n  head: [],\n  teamName: \"\",\n  members: [],\n  servers: [],\n  roles: [],\n  lockboxes: [],\n  invitations: {},\n  messages: [],\n  removedMembers: [],\n  removedDevices: [],\n  removedServers: [],\n  pendingKeyRotations: []\n};\nvar TEAM_SCOPE = { type: KeyType.TEAM, name: KeyType.TEAM };\nvar ADMIN_SCOPE = { type: KeyType.ROLE, name: ADMIN };\nvar EPHEMERAL_SCOPE2 = {\n  type: KeyType.EPHEMERAL,\n  name: KeyType.EPHEMERAL\n};\n\n// src/team/reducer.ts\nimport { ROOT as ROOT2 } from \"@localfirst/crdx\";\n\n// src/team/invalidLinkReducer.ts\nvar invalidLinkReducer = (state, link) => {\n  switch (link.body.type) {\n    case \"ADMIT_MEMBER\": {\n      const keys2 = link.body.payload.memberKeys;\n      const userId = keys2.name;\n      const member2 = {\n        userName: \"\",\n        // not needed here\n        userId,\n        keys: keys2,\n        roles: []\n      };\n      const removedMembers = [...state.removedMembers, member2];\n      const pendingKeyRotations = [...state.pendingKeyRotations];\n      if (!pendingKeyRotations.includes(userId)) {\n        pendingKeyRotations.push(userId);\n      }\n      return {\n        ...state,\n        // Note that we don't need to alter the list of members, because this member is never added\n        removedMembers,\n        pendingKeyRotations\n      };\n    }\n    default: {\n      break;\n    }\n  }\n  return state;\n};\n\n// src/team/setHead.ts\nvar setHead = (link) => (state) => ({ ...state, head: [link.hash] });\n\n// src/team/transforms/addDevice.ts\nvar addDevice = (device2) => (state) => {\n  const { userId } = device2;\n  return {\n    ...state,\n    // Add device to the member's list of devices\n    members: state.members.map((member2) => {\n      if (member2.userId === userId) {\n        const { devices = [] } = member2;\n        if (devices.find((d) => d.deviceId === device2.deviceId)) {\n          return member2;\n        } else\n          return {\n            ...member2,\n            devices: [...devices, device2]\n          };\n      }\n      return member2;\n    }),\n    // Remove device ID from list of removed devices (e.g. if it was removed at one point and is being re-added)\n    removedDevices: state.removedDevices.filter((d) => d.keys.name === device2.deviceId)\n  };\n};\n\n// src/team/transforms/addMember.ts\nvar addMember = (newMember) => (state) => ({\n  ...state,\n  // Add member to the team's list of members\n  members: [\n    ...state.members,\n    {\n      ...newMember,\n      roles: []\n    }\n  ],\n  // Remove member's name from list of removed members (e.g. if member was removed and is now being re-added)\n  removedMembers: state.removedMembers.filter((m) => m.userId === newMember.userId)\n});\n\n// src/team/transforms/addMemberRoles.ts\nvar addMemberRoles = (userId, roles = []) => roles.map((roleName) => (state) => ({\n  ...state,\n  members: state.members.map((member2) => ({\n    ...member2,\n    roles: member2.userId !== userId || member2.roles.includes(roleName) ? member2.roles : [...member2.roles, roleName]\n  }))\n}));\n\n// src/team/transforms/addMessage.ts\nvar addMessage = (message) => (state) => ({\n  ...state,\n  messages: [...state.messages, message]\n});\n\n// src/team/transforms/addRole.ts\nvar addRole = (newRole) => (state) => ({\n  ...state,\n  roles: [...state.roles, newRole]\n});\n\n// src/util/unique.ts\nimport { uniqBy } from \"lodash-es\";\nvar unique = uniqBy;\n\n// src/team/transforms/addServer.ts\nvar addServer = (newServer) => (state) => {\n  const newState = {\n    ...state,\n    // Add server to the team's list of servers\n    servers: unique([...state.servers, newServer]),\n    // Remove server's url from list of removed servers (e.g. if server was removed and is now being re-added)\n    removedServers: state.removedServers.filter((m) => m.host !== newServer.host)\n  };\n  return newState;\n};\n\n// src/team/transforms/changeMemberKeys.ts\nvar changeMemberKeys = (keys2) => (state) => ({\n  ...state,\n  members: state.members.map(\n    (member2) => member2.userId === keys2.name ? {\n      ...member2,\n      keys: keys2\n      // 🡐 replace keys with new ones\n    } : member2\n  )\n});\n\n// src/team/transforms/changeServerKeys.ts\nvar changeServerKeys = (keys2) => (state) => ({\n  ...state,\n  servers: state.servers.map(\n    (server2) => server2.host === keys2.name ? {\n      ...server2,\n      keys: keys2\n      // 🡐 replace keys with new ones\n    } : server2\n  )\n});\n\n// src/team/transforms/collectLockboxes.ts\nvar collectLockboxes = (newLockboxes) => (state) => {\n  const { lockboxes } = state;\n  return newLockboxes ? { ...state, lockboxes: lockboxes.concat(newLockboxes) } : state;\n};\n\n// src/team/transforms/postInvitation.ts\nvar postInvitation = (invitation) => (state) => {\n  const invitationState = {\n    ...invitation,\n    uses: 0,\n    revoked: false\n  };\n  return {\n    ...state,\n    invitations: {\n      ...state.invitations,\n      [invitation.id]: invitationState\n    }\n  };\n};\n\n// src/team/selectors/device.ts\nimport { assert as assert3 } from \"@localfirst/shared\";\n\n// src/team/selectors/server.ts\nvar server = (state, host, options = { includeRemoved: false }) => {\n  const serversToSearch = [\n    ...state.servers,\n    ...options.includeRemoved ? state.removedServers : []\n  ];\n  const server2 = serversToSearch.find((s) => s.host === host);\n  if (server2 === void 0) {\n    throw new Error(`A server with host '${host}' was not found`);\n  }\n  return server2;\n};\n\n// src/team/selectors/hasServer.ts\nvar hasServer = (state, host) => state.servers.find((s) => s.host === host) !== void 0;\n\n// src/server/castServer.ts\nvar toMember = (server2) => ({\n  userId: server2.host,\n  userName: server2.host,\n  keys: server2.keys,\n  roles: []\n});\nvar toUser = (server2) => ({\n  userId: server2.host,\n  userName: server2.host,\n  keys: server2.keys\n});\nvar toDevice = (server2) => ({\n  userId: server2.host,\n  deviceName: server2.host,\n  deviceId: server2.host,\n  keys: server2.keys\n});\nvar castServer = { toMember, toUser, toDevice };\n\n// src/team/selectors/device.ts\nvar hasDevice = (state, deviceId, options = { includeRemoved: false }) => {\n  return getDevice(state, deviceId, options) !== void 0;\n};\nvar device = (state, deviceId, options = { includeRemoved: false }) => {\n  const device2 = getDevice(state, deviceId, options);\n  assert3(device2, `Device ${deviceId} not found`);\n  return device2;\n};\nvar getDevice = (state, deviceId, options = { includeRemoved: false }) => {\n  if (hasServer(state, deviceId)) {\n    return castServer.toDevice(server(state, deviceId));\n  }\n  const members = state.members.concat(options.includeRemoved ? state.removedMembers : []);\n  const allDevices = members.flatMap((m) => m.devices ?? []);\n  return allDevices.find((d) => d.deviceId === deviceId) ?? (options.includeRemoved ? state.removedDevices.find((d) => d.deviceId === deviceId) : void 0);\n};\n\n// src/team/selectors/deviceWasRemoved.ts\nvar deviceWasRemoved = (state, deviceId) => {\n  if (!hasDevice(state, deviceId, { includeRemoved: true })) return false;\n  return state.removedDevices.some((d) => d.keys.name === deviceId);\n};\n\n// src/team/selectors/hasMember.ts\nvar hasMember = (state, userId) => state.members.find((m) => m.userId === userId) !== void 0;\n\n// src/team/selectors/hasRole.ts\nvar hasRole = (state, roleName) => state.roles.find((r) => r.roleName === roleName) !== void 0;\n\n// src/team/selectors/invitation.ts\nimport { assert as assert4 } from \"@localfirst/shared\";\nfunction hasInvitation(state, id) {\n  return id in state.invitations;\n}\nfunction getInvitation(state, id) {\n  assert4(hasInvitation(state, id), `No invitation with id '${id}' found.`);\n  const invitation = state.invitations[id];\n  return invitation;\n}\n\n// src/lockbox/create.ts\nimport { EPHEMERAL_SCOPE as EPHEMERAL_SCOPE3, redactKeys } from \"@localfirst/crdx\";\nimport { asymmetric } from \"@localfirst/crypto\";\n\n// src/lockbox/types.ts\nvar isKeyManifest = (keys2) => keys2.hasOwnProperty(\"publicKey\");\n\n// src/lockbox/create.ts\nvar create = (contents, recipientKeys) => {\n  const redactedRecipientKeys = isKeyManifest(recipientKeys) ? recipientKeys : redactKeys(recipientKeys);\n  const redactedContents = redactKeys(contents);\n  const encryptionKeys = asymmetric.keyPair();\n  const recipientPublicKey = isKeyManifest(redactedRecipientKeys) ? redactedRecipientKeys.publicKey : redactedRecipientKeys.encryption;\n  const encryptedPayload = asymmetric.encryptBytes({\n    secret: contents,\n    recipientPublicKey,\n    senderSecretKey: encryptionKeys.secretKey\n  });\n  const lockbox = {\n    encryptionKey: {\n      ...EPHEMERAL_SCOPE3,\n      publicKey: encryptionKeys.publicKey\n    },\n    recipient: {\n      ...redactedRecipientKeys,\n      publicKey: recipientPublicKey\n    },\n    contents: {\n      ...redactedContents,\n      publicKey: contents.encryption.publicKey\n    },\n    encryptedPayload\n  };\n  return lockbox;\n};\n\n// src/lockbox/open.ts\nimport { memoize as memoize3 } from \"@localfirst/shared\";\nimport { asymmetric as asymmetric2 } from \"@localfirst/crypto\";\nvar open = memoize3(\n  (lockbox, decryptionKeys) => {\n    const { encryptionKey, encryptedPayload } = lockbox;\n    const decrypted = asymmetric2.decryptBytes({\n      cipher: encryptedPayload,\n      senderPublicKey: encryptionKey.publicKey,\n      recipientSecretKey: decryptionKeys.encryption.secretKey\n    });\n    const keys2 = decrypted;\n    return keys2;\n  }\n);\n\n// src/lockbox/rotate.ts\nvar rotate = ({\n  oldLockbox,\n  newContents,\n  updatedRecipientKeys\n}) => {\n  assertScopesMatch(newContents, oldLockbox.contents);\n  if (updatedRecipientKeys) {\n    assertScopesMatch(oldLockbox.recipient, updatedRecipientKeys);\n  }\n  newContents.generation = oldLockbox.contents.generation + 1;\n  const recipientManifest = updatedRecipientKeys ?? oldLockbox.recipient;\n  return create(newContents, recipientManifest);\n};\n\n// src/team/selectors/visibleKeys.ts\nvar visibleKeys = (state, keyset) => {\n  const { lockboxes } = state;\n  const { publicKey } = keyset.encryption;\n  const lockboxesICanOpen = lockboxes.filter(({ recipient }) => recipient.publicKey === publicKey);\n  const keysets = lockboxesICanOpen.map((lockbox) => open(lockbox, keyset));\n  const keys2 = keysets.flatMap((keyset2) => visibleKeys(state, keyset2));\n  return [...keysets, ...keys2];\n};\n\n// src/team/selectors/keyMap.ts\nvar keyMap = (state, deviceKeys) => {\n  const allVisibleKeys = visibleKeys(state, deviceKeys);\n  return allVisibleKeys.reduce(organizeKeysIntoMap, {});\n};\nvar organizeKeysIntoMap = (result, keys2) => {\n  const { type, name, generation } = keys2;\n  const keysetsForScope = result[type] ?? {};\n  const keysetHistory = keysetsForScope[name] ?? [];\n  keysetHistory[generation] = keys2;\n  return {\n    ...result,\n    [type]: {\n      ...keysetsForScope,\n      [name]: keysetHistory\n    }\n  };\n};\n\n// src/team/selectors/keyring.ts\nimport { createKeyring } from \"@localfirst/crdx\";\nvar keyring = (state, scope, keys2) => {\n  const foo = keyMap(state, keys2);\n  const allKeys = foo[scope.type]?.[scope.name];\n  return createKeyring(allKeys);\n};\n\n// src/team/selectors/keys.ts\nimport { assert as assert5 } from \"@localfirst/shared\";\nvar keys = (state, deviceKeys, scope) => {\n  const { type, name } = scope;\n  const keysFromLockboxes = keyMap(state, deviceKeys);\n  const keys2 = keysFromLockboxes[type] ? keysFromLockboxes[type][name] : void 0;\n  assert5(\n    keys2,\n    `Couldn't find keys: ${JSON.stringify(scope)}\n     Device: ${deviceKeys.name}\n     Available lockboxes: \n- ${state.lockboxes.map(lockboxSummary).join(\"\\n- \")} \n     Keymap: ${JSON.stringify(keysFromLockboxes, null, 2)}`\n  );\n  const generation = \"generation\" in scope && scope.generation !== void 0 ? (\n    // Return specific generation if requested\n    scope.generation\n  ) : (\n    // Use latest generation by default\n    keys2.length - 1\n  );\n  return keys2[generation];\n};\n\n// src/team/selectors/lockboxesInScope.ts\nvar lockboxesInScope = (state, scope) => {\n  const lockboxes = state.lockboxes.filter(\n    ({ contents }) => contents.type === scope.type && contents.name === scope.name\n  );\n  const latestGeneration = lockboxes.reduce(maxGeneration, 0);\n  const latestLockboxes = lockboxes.filter(\n    ({ contents }) => contents.generation === latestGeneration\n  );\n  return latestLockboxes;\n};\nvar maxGeneration = (max, lockbox) => {\n  const { generation } = lockbox.contents;\n  if (generation > max) {\n    return generation;\n  }\n  return max;\n};\n\n// src/team/selectors/member.ts\nvar member = (state, userId, options = { includeRemoved: false }) => {\n  const membersToSearch = [\n    ...state.members,\n    ...options.includeRemoved ? state.removedMembers : []\n  ];\n  const member2 = membersToSearch.find((m) => m.userId === userId);\n  if (member2 === void 0) {\n    throw new Error(`A member named '${userId}' was not found`);\n  }\n  return member2;\n};\n\n// src/team/selectors/memberByDeviceId.ts\nvar memberByDeviceId = (state, deviceId, options = { includeRemoved: false }) => {\n  if (hasServer(state, deviceId)) return castServer.toMember(server(state, deviceId));\n  const { userId } = device(state, deviceId, options);\n  return member(state, userId, options);\n};\n\n// src/team/selectors/memberHasRole.ts\nvar memberHasRole = (state, userId, role2) => {\n  if (!hasMember(state, userId)) {\n    return false;\n  }\n  const member2 = member(state, userId);\n  const { roles = [] } = member2;\n  return roles.includes(role2);\n};\nvar memberIsAdmin = (state, userId) => memberHasRole(state, userId, ADMIN);\n\n// src/team/selectors/memberWasRemoved.ts\nvar memberWasRemoved = (state, userId) => {\n  return state.removedMembers.some((m) => m.userId === userId);\n};\n\n// src/team/selectors/membersInRole.ts\nvar membersInRole = (state, roleName) => state.members.filter((member2) => member2.roles?.includes(roleName));\nvar admins = (state) => membersInRole(state, ADMIN);\n\n// src/team/selectors/messages.ts\nvar messages = (state) => state.messages;\n\n// src/team/selectors/role.ts\nvar role = (state, roleName) => {\n  const role2 = state.roles.find((r) => r.roleName === roleName);\n  if (!role2) throw new Error(`A role called '${roleName}' was not found`);\n  return role2;\n};\n\n// src/team/selectors/serverWasRemoved.ts\nvar serverWasRemoved = (state, host) => state.removedServers.some((s) => s.host === host);\n\n// src/team/selectors/teamKeyring.ts\nvar { TEAM } = KeyType;\nvar teamKeyring = (state, keys2) => keyring(state, { type: TEAM, name: TEAM }, keys2);\n\n// src/team/selectors/visibleScopes.ts\nvar visibleScopes = (state, { type, name }) => {\n  const scopes = state.lockboxes.filter(({ recipient }) => recipient.type === type && recipient.name === name).map(({ contents: { type: type2, name: name2 } }) => ({ type: type2, name: name2 }));\n  const derivedScopes = scopes.flatMap((scope) => visibleScopes(state, scope));\n  const allScopes = [...scopes, ...derivedScopes];\n  return unique(allScopes, (s) => s.name + s.type);\n};\n\n// src/team/transforms/removeDevice.ts\nvar removeDevice = (deviceId, lockboxes = []) => (state) => {\n  const removedDevice = device(state, deviceId);\n  const member2 = memberByDeviceId(state, deviceId);\n  const { userId } = member2;\n  let { keys: keys2 } = member2;\n  const userLockbox = lockboxes.find(\n    ({ contents }) => contents.type === KeyType.USER && contents.name === userId\n  );\n  if (userLockbox) {\n    const { type, name, generation, encryption, signature } = userLockbox.contents;\n    if (keys2.generation < generation && encryption !== void 0 && signature !== void 0) {\n      keys2 = { type, name, generation, encryption, signature };\n    }\n  }\n  const removeDeviceFromMember = (member3) => member3.userId === userId ? {\n    ...member3,\n    devices: member3.devices?.filter((d) => d.deviceId !== removedDevice.deviceId),\n    keys: keys2\n  } : member3;\n  const members = state.members.map(removeDeviceFromMember);\n  const removedDevices = [...state.removedDevices, removedDevice];\n  return {\n    ...state,\n    members,\n    removedDevices\n  };\n};\n\n// src/team/transforms/removeMember.ts\nvar removeMember = (userId) => (state) => {\n  const remainingMembers = state.members.filter((m) => m.userId !== userId);\n  const removedMember = state.members.find((m) => m.userId === userId);\n  const removedMembers = [...state.removedMembers];\n  if (removedMember) removedMembers.push(removedMember);\n  return {\n    ...state,\n    members: remainingMembers,\n    removedMembers\n  };\n};\n\n// src/team/transforms/removeMemberRole.ts\nvar removeMemberRole = (userId, roleName) => (state) => ({\n  ...state,\n  // Remove this role from this member's list of roles\n  members: state.members.map((member2) => ({\n    ...member2,\n    roles: member2.userId === userId ? member2.roles.filter((r) => r !== roleName) : member2.roles\n  })),\n  // Remove any lockboxes this member has for this role\n  lockboxes: state.lockboxes.filter(\n    (lockbox) => !(lockbox.recipient.name === userId && lockbox.contents.type === KeyType.ROLE && lockbox.contents.name === roleName)\n  )\n});\n\n// src/team/transforms/removeRole.ts\nvar removeRole = (roleName) => (state) => ({\n  ...state,\n  // Remove this role\n  roles: state.roles.filter((role2) => role2.roleName !== roleName),\n  // Remove any lockboxes for this role\n  lockboxes: state.lockboxes.filter(\n    (lockbox) => !(lockbox.contents.type === KeyType.ROLE && lockbox.contents.name === roleName)\n  )\n});\n\n// src/team/transforms/removeServer.ts\nvar removeServer = (host) => (state) => {\n  const remainingServers = state.servers.filter((m) => m.host !== host);\n  const removedServer = state.servers.find((m) => m.host === host);\n  const removedServers = [...state.removedServers];\n  if (removedServer) {\n    removedServers.push(removedServer);\n  }\n  return {\n    ...state,\n    servers: remainingServers,\n    removedServers\n  };\n};\n\n// src/team/transforms/revokeInvitation.ts\nvar revokeInvitation = (id) => (state) => {\n  const invitations = { ...state.invitations };\n  const revokedInvitation = { ...invitations[id], revoked: true };\n  return {\n    ...state,\n    invitations: {\n      ...invitations,\n      [id]: revokedInvitation\n    }\n  };\n};\n\n// src/team/transforms/rotateKeys.ts\nvar rotateKeys = (userId) => (state) => {\n  const pendingKeyRotations = state.pendingKeyRotations.filter((u) => u !== userId);\n  return {\n    ...state,\n    pendingKeyRotations\n  };\n};\n\n// src/team/transforms/setTeamName.ts\nvar setTeamName = (teamName) => (state) => ({\n  ...state,\n  teamName\n});\n\n// src/team/transforms/useInvitation.ts\nvar useInvitation = (id) => (state) => {\n  const invitations = { ...state.invitations };\n  const invitationState = invitations[id];\n  const uses = invitationState.uses + 1;\n  return {\n    ...state,\n    invitations: {\n      ...invitations,\n      [id]: {\n        ...invitationState,\n        uses\n      }\n    }\n  };\n};\n\n// src/team/validate.ts\nimport { debug, truncateHashes } from \"@localfirst/shared\";\nimport { ROOT } from \"@localfirst/crdx\";\n\n// src/invitation/index.ts\nvar invitation_exports = {};\n__export(invitation_exports, {\n  IKEY_LENGTH: () => IKEY_LENGTH,\n  InvitationValidationError: () => InvitationValidationError,\n  create: () => create2,\n  deriveId: () => deriveId,\n  fail: () => fail,\n  generateProof: () => generateProof,\n  generateStarterKeys: () => generateStarterKeys,\n  invitationCanBeUsed: () => invitationCanBeUsed,\n  randomSeed: () => randomSeed,\n  validate: () => validate\n});\n\n// src/invitation/create.ts\nvar IKEY_LENGTH = 16;\nvar create2 = ({\n  seed,\n  maxUses = 1,\n  // By default an invitation can only be used once\n  expiration = 0,\n  // By default an invitation never expires\n  userId\n}) => {\n  seed = normalize(seed);\n  const id = deriveId(seed);\n  const starterKeys = generateStarterKeys(seed);\n  const { publicKey } = starterKeys.signature;\n  return { id, publicKey, expiration, maxUses, userId };\n};\n\n// src/invitation/randomSeed.ts\nimport { randomKey } from \"@localfirst/crypto\";\nvar randomSeed = (length = IKEY_LENGTH) => randomKey(length);\n\n// src/invitation/validate.ts\nimport { memoize as memoize4 } from \"@localfirst/shared\";\nimport { signatures as signatures2 } from \"@localfirst/crypto\";\nvar invitationCanBeUsed = (invitation, timeOfUse) => {\n  const { revoked, maxUses, uses, expiration } = invitation;\n  if (revoked) {\n    return fail(\"The invitation has been revoked\");\n  }\n  if (maxUses > 0 && uses >= maxUses) {\n    return fail(\"The invitation cannot be used again\");\n  }\n  if (expiration > 0 && expiration < timeOfUse) {\n    return fail(\"The invitation has expired\");\n  }\n  return VALID;\n};\nvar validate = memoize4(\n  (proof, invitation) => {\n    const { id, signature } = proof;\n    if (id !== invitation.id) {\n      return fail(\"IDs don't match\", { proof, invitation });\n    }\n    const { publicKey } = invitation;\n    const signatureIsValid = signatures2.verify({\n      payload: { id },\n      signature,\n      publicKey\n    });\n    if (!signatureIsValid) {\n      return fail(\"Signature provided is not valid\", { proof, invitation });\n    }\n    return VALID;\n  }\n);\nvar fail = (message, details) => ({\n  isValid: false,\n  error: new InvitationValidationError(message, details)\n});\nvar InvitationValidationError = class extends Error {\n  constructor(message, details) {\n    super();\n    this.name = \"Invitation validation failed\";\n    this.message = message;\n    this.details = details;\n  }\n  index;\n  details;\n};\n\n// src/team/validate.ts\nvar log = debug.extend(\"auth:validate\");\nvar validate2 = (...args) => {\n  for (const key in validators) {\n    const validator = validators[key];\n    const validation = validator(...args);\n    if (!validation.isValid) {\n      return validation;\n    }\n  }\n  return VALID;\n};\nvar validators = {\n  rootDeviceBelongsToRootUser(...args) {\n    const [_previousState, link] = args;\n    const { type, payload } = link.body;\n    if (type !== \"ROOT\") return VALID;\n    const { rootDevice, rootMember } = payload;\n    if (rootDevice.userId !== rootMember.userId) {\n      const msg = \"The founding device must belong to the founding member (userIds must match).\";\n      return fail2(msg, ...args);\n    }\n    return VALID;\n  },\n  /** The user who made these changes was a member with appropriate rights at the time */\n  mustBeAdmin(...args) {\n    const [previousState, link] = args;\n    const action = link.body;\n    const { type, userId } = action;\n    if (type === ROOT) return VALID;\n    if (isAdminOnlyAction(action)) {\n      const isntAdmin = !memberIsAdmin(previousState, userId);\n      if (isntAdmin) {\n        return fail2(`Member '${userId}' is not an admin`, ...args);\n      }\n    }\n    return VALID;\n  },\n  /** Unless I'm an admin, I can't remove anyone's devices but my own */\n  canOnlyRemoveYourOwnDevices(...args) {\n    const [previousState, link] = args;\n    const author = link.body.userId;\n    const authorIsAdmin = memberIsAdmin(previousState, author);\n    if (authorIsAdmin) return VALID;\n    if (link.body.type === \"REMOVE_DEVICE\") {\n      const target = link.body.payload.deviceId;\n      const device2 = device(previousState, target);\n      const deviceOwner = device2.userId;\n      if (author !== deviceOwner) {\n        return fail2(\"Can't remove another user's device.\", ...args);\n      }\n    }\n    return VALID;\n  },\n  /** Unless I'm an admin, I can't change anyone's keys but my own */\n  canOnlyChangeYourOwnKeys(...args) {\n    const [previousState, link] = args;\n    const author = link.body.userId;\n    const authorIsAdmin = memberIsAdmin(previousState, author);\n    if (!authorIsAdmin) {\n      if (link.body.type === \"CHANGE_MEMBER_KEYS\") {\n        const target = link.body.payload.keys.name;\n        if (author !== target) {\n          return fail2(\"Can't change another user's keys.\", ...args);\n        }\n      } else if (link.body.type === \"CHANGE_SERVER_KEYS\") {\n        const target = link.body.payload.keys.name;\n        if (author !== target) {\n          return fail2(\"Can't change another server's keys.\", ...args);\n        }\n      }\n    }\n    return VALID;\n  },\n  /** Check for ADMIT with invitations that are revoked OR have been used more than maxUses OR are expired */\n  cantAdmitWithInvalidInvitation(...args) {\n    const [previousState, link] = args;\n    if (link.body.type === \"ADMIT_MEMBER\" || link.body.type === \"ADMIT_DEVICE\") {\n      const { id } = link.body.payload;\n      const invitation = getInvitation(previousState, id);\n      return invitationCanBeUsed(invitation, link.body.timestamp);\n    }\n    return VALID;\n  },\n  /** Check if userId and userName are not used by any other member within the team */\n  uniqueUserNameAndId(...args) {\n    const [previousState, link] = args;\n    if (link.body.type === \"ADMIT_MEMBER\") {\n      const { userName, memberKeys } = link.body.payload;\n      const memberWithSameUserId = previousState.members.find(\n        (member2) => member2.userId === memberKeys.name\n      );\n      if (memberWithSameUserId !== void 0) {\n        return fail2(\"userId is not unique within the team.\", ...args);\n      }\n      const memberWithSameUserName = previousState.members.find(\n        (member2) => member2.userName.toLowerCase() === userName.toLowerCase()\n      );\n      if (memberWithSameUserName !== void 0) {\n        return fail2(\"Username is not unique within the team.\", ...args);\n      }\n    }\n    return VALID;\n  }\n};\nvar fail2 = (message, previousState, link) => {\n  message = truncateHashes(`${actionFingerprint(link)} ${message}`);\n  log(message);\n  return {\n    isValid: false,\n    error: new ValidationError(message, { prevState: previousState, link })\n  };\n};\n\n// src/team/reducer.ts\nvar reducer = (state, link) => {\n  if (link.isInvalid) {\n    return invalidLinkReducer(state, link);\n  }\n  state = clone(state);\n  const validation = validate2(state, link);\n  if (!validation.isValid) {\n    throw validation.error;\n  }\n  const action = link.body;\n  const applyTransforms = composeTransforms([\n    setHead(link),\n    collectLockboxes(action.payload.lockboxes),\n    // Any payload can include lockboxes\n    ...getTransforms(action)\n    // Get the specific transforms indicated by this action\n  ]);\n  const newState = applyTransforms(state);\n  return newState;\n};\nvar getTransforms = (action) => {\n  switch (action.type) {\n    case ROOT2: {\n      const { name, rootMember, rootDevice } = action.payload;\n      return [\n        setTeamName(name),\n        addRole({ roleName: ADMIN }),\n        // Create the admin role\n        addMember(rootMember),\n        // Add the founding member\n        addDevice(rootDevice),\n        // Add the founding member's device\n        ...addMemberRoles(rootMember.userId, [ADMIN])\n        // Make the founding member an admin\n      ];\n    }\n    case \"ADD_MEMBER\": {\n      const { member: member2, roles } = action.payload;\n      return [\n        addMember(member2),\n        // Add this member to the team\n        ...addMemberRoles(member2.userId, roles)\n        // Add each of these roles to the member's list of roles\n      ];\n    }\n    case \"ADD_ROLE\": {\n      const newRole = action.payload;\n      return [\n        addRole(newRole)\n        // Add this role to the team\n      ];\n    }\n    case \"ADD_MEMBER_ROLE\": {\n      const { userId, roleName } = action.payload;\n      return [\n        ...addMemberRoles(userId, [roleName])\n        // Add this role to the member's list of roles\n      ];\n    }\n    case \"REMOVE_MEMBER\": {\n      const { userId } = action.payload;\n      return [\n        removeMember(userId)\n        // Remove this member from the team\n      ];\n    }\n    case \"ADD_DEVICE\": {\n      const { device: device2 } = action.payload;\n      return [\n        addDevice(device2)\n        // Add this device to the member's list of devices\n      ];\n    }\n    case \"REMOVE_DEVICE\": {\n      const { deviceId, lockboxes } = action.payload;\n      return [\n        removeDevice(deviceId, lockboxes)\n        // Remove this device from the member's list of devices\n      ];\n    }\n    case \"REMOVE_ROLE\": {\n      const { roleName } = action.payload;\n      return [\n        removeRole(roleName)\n        // Remove this role from the team\n      ];\n    }\n    case \"REMOVE_MEMBER_ROLE\": {\n      const { userId, roleName } = action.payload;\n      return [\n        removeMemberRole(userId, roleName)\n        // Remove this role from the member's list of roles\n      ];\n    }\n    case \"INVITE_MEMBER\": {\n      const { invitation } = action.payload;\n      return [\n        postInvitation(invitation)\n        // Add the invitation to the list of open invitations.\n      ];\n    }\n    case \"INVITE_DEVICE\": {\n      const { invitation } = action.payload;\n      return [\n        postInvitation(invitation)\n        // Add the invitation to the list of open invitations.\n      ];\n    }\n    case \"REVOKE_INVITATION\": {\n      const { id } = action.payload;\n      return [\n        revokeInvitation(id)\n        // Mark the invitation revoked so it can't be used\n      ];\n    }\n    case \"ADMIT_MEMBER\": {\n      const { id, memberKeys, userName } = action.payload;\n      const userId = memberKeys.name;\n      const member2 = {\n        userId,\n        userName,\n        keys: memberKeys,\n        roles: []\n      };\n      return [\n        useInvitation(id),\n        // Mark the invitation as used\n        addMember(member2)\n        // Add this member to the team\n      ];\n    }\n    case \"ADMIT_DEVICE\": {\n      const { id, device: device2 } = action.payload;\n      return [\n        useInvitation(id),\n        // Mark the invitation as used\n        addDevice(device2)\n        // Add this device\n      ];\n    }\n    case \"CHANGE_MEMBER_KEYS\": {\n      const { keys: keys2 } = action.payload;\n      return [\n        changeMemberKeys(keys2)\n        // Replace this member's public keys with the ones provided\n      ];\n    }\n    case \"ROTATE_KEYS\": {\n      const { userId } = action.payload;\n      return [\n        rotateKeys(userId)\n        // Mark this member's keys as having been rotated (the rotated keys themselves are in the lockboxes)\n      ];\n    }\n    case \"ADD_SERVER\": {\n      const { server: server2 } = action.payload;\n      return [\n        addServer(server2)\n        // Add the specified server to the team\n      ];\n    }\n    case \"REMOVE_SERVER\": {\n      const { host } = action.payload;\n      return [\n        removeServer(host)\n        // Remove the specified server from the team\n      ];\n    }\n    case \"CHANGE_SERVER_KEYS\": {\n      const { keys: keys2 } = action.payload;\n      return [\n        changeServerKeys(keys2)\n        // Replace this server's public keys with the ones provided\n      ];\n    }\n    case \"MESSAGE\": {\n      const { message } = action.payload;\n      return [\n        addMessage(message)\n        // Add the message to the team's message log\n      ];\n    }\n    case \"SET_TEAM_NAME\": {\n      const { teamName } = action.payload;\n      return [\n        setTeamName(teamName)\n        // Set the team's name\n      ];\n    }\n    default: {\n      throw unrecognizedLinkType(action);\n    }\n  }\n};\nfunction unrecognizedLinkType(action) {\n  const { type } = action;\n  return new Error(`Unrecognized link type: ${type}`);\n}\n\n// src/team/teamMachine.ts\nvar teamMachine = makeMachine({ initialState, reducer, resolver: membershipResolver });\n\n// src/team/getTeamState.ts\nvar getTeamState = (serializedGraph, keyring2) => {\n  const graph = deserializeTeamGraph(serializedGraph, keyring2);\n  return teamMachine(graph);\n};\n\n// src/connection/getDeviceUserFromGraph.ts\nvar { USER } = KeyType;\nvar getDeviceUserFromGraph = ({\n  serializedGraph,\n  teamKeyring: teamKeyring2,\n  invitationSeed\n}) => {\n  const starterKeys = generateStarterKeys(invitationSeed);\n  const invitationId = generateProof(invitationSeed).id;\n  const state = getTeamState(serializedGraph, teamKeyring2);\n  const { userId } = getInvitation(state, invitationId);\n  assert6(userId);\n  const { userName } = member(state, userId);\n  assert6(userName);\n  const userKeyring = keyring(state, { type: USER, name: userId }, starterKeys);\n  const keys2 = getLatestGeneration(userKeyring);\n  const user = { userName, userId, keys: keys2 };\n  return { user, userKeyring };\n};\n\n// src/connection/identity.ts\nimport { signatures as signatures3, randomKey as randomKey2 } from \"@localfirst/crypto\";\nvar challenge = (identityClaim) => ({\n  ...identityClaim,\n  nonce: randomKey2(),\n  timestamp: Date.now()\n});\nvar prove = (challenge2, keys2) => signatures3.sign(challenge2, keys2.signature.secretKey);\nvar verify = (challenge2, signature, publicKeys) => {\n  const details = { challenge: challenge2, signature };\n  const signatureIsValid = signatures3.verify({\n    payload: challenge2,\n    signature,\n    publicKey: publicKeys.signature\n  });\n  if (!signatureIsValid) {\n    return fail3(\"Signature is not valid\", details);\n  }\n  return VALID;\n};\nvar fail3 = (message, details) => ({\n  isValid: false,\n  error: new IdentityChallengeFailure(message, details)\n});\nvar IdentityChallengeFailure = class extends Error {\n  constructor(message, details) {\n    super();\n    this.name = \"Identity challenge failed\";\n    this.message = message + \"\\n\" + JSON.stringify(details, null, 2).replaceAll('\"', \"\");\n    this.details = details;\n  }\n  details;\n};\n\n// src/device/index.ts\nvar device_exports = {};\n__export(device_exports, {\n  createDevice: () => createDevice,\n  redactDevice: () => redactDevice\n});\n\n// src/device/createDevice.ts\nimport { createKeyset as createKeyset2 } from \"@localfirst/crdx\";\nimport { createId } from \"@paralleldrive/cuid2\";\nimport { randomKey as randomKey3 } from \"@localfirst/crypto\";\nvar createDevice = ({\n  userId,\n  deviceName,\n  deviceInfo = {},\n  created = Date.now(),\n  seed = randomKey3()\n}) => {\n  const deviceId = createId();\n  const keys2 = createKeyset2({ type: KeyType.DEVICE, name: deviceId }, seed);\n  return { userId, deviceId, deviceName, keys: keys2, created, deviceInfo };\n};\n\n// src/device/redact.ts\nimport { redactKeys as redactKeys2 } from \"@localfirst/crdx\";\nvar redactDevice = (device2) => ({\n  ...device2,\n  keys: redactKeys2(device2.keys)\n});\n\n// src/connection/Connection.ts\nimport { pack as pack2, unpack as unpack2 } from \"msgpackr\";\n\n// src/team/Team.ts\nimport { EventEmitter } from \"@herbcaudill/eventemitter42\";\nimport {\n  createKeyring as createKeyring2,\n  createKeyset as createKeyset3,\n  createStore,\n  getLatestGeneration as getLatestGeneration2,\n  isKeyset,\n  redactKeys as redactKeys3\n} from \"@localfirst/crdx\";\nimport { randomKey as randomKey4, signatures as signatures4, symmetric } from \"@localfirst/crypto\";\nimport { assert as assert7, debug as debug2 } from \"@localfirst/shared\";\n\n// src/team/redactUser.ts\nimport { redactUser as _redactUser } from \"@localfirst/crdx\";\nvar redactUser = (user) => ({\n  ..._redactUser(user),\n  roles: []\n});\n\n// src/team/types.ts\nvar isNewTeam = (options) => \"teamName\" in options;\n\n// src/team/Team.ts\nvar { DEVICE, USER: USER2 } = KeyType;\nvar Team = class extends EventEmitter {\n  state = initialState;\n  store;\n  context;\n  log;\n  seed;\n  /**\n   * We can make a team instance either by creating a brand-new team, or restoring one from a stored graph.\n   */\n  constructor(options) {\n    super();\n    this.seed = options.seed ?? randomKey4();\n    if (\"user\" in options.context) {\n      this.context = options.context;\n    } else {\n      const { server: server2 } = options.context;\n      this.context = {\n        ...options.context,\n        device: castServer.toDevice(server2),\n        user: castServer.toUser(server2)\n      };\n    }\n    const { device: device2, user } = this.context;\n    this.log = debug2.extend(`auth:team:${this.userName}`);\n    if (isNewTeam(options)) {\n      assert7(!this.isServer, `Servers can't create teams`);\n      const lockboxTeamKeysForMember = create(options.teamKeys, user.keys);\n      const adminKeys = createKeyset3(ADMIN_SCOPE, this.seed);\n      const lockboxAdminKeysForMember = create(adminKeys, user.keys);\n      const lockboxUserKeysForDevice = create(user.keys, this.context.device.keys);\n      const rootPayload = {\n        name: options.teamName,\n        rootMember: redactUser(user),\n        rootDevice: redactDevice(device2),\n        lockboxes: [lockboxTeamKeysForMember, lockboxAdminKeysForMember, lockboxUserKeysForDevice]\n      };\n      this.store = createStore({\n        user,\n        reducer,\n        resolver: membershipResolver,\n        initialState,\n        rootPayload,\n        keys: options.teamKeys\n      });\n    } else {\n      this.store = createStore({\n        user,\n        reducer,\n        resolver: membershipResolver,\n        initialState,\n        graph: maybeDeserialize(options.source, options.teamKeyring),\n        keys: options.teamKeyring\n      });\n    }\n    this.state = this.store.getState();\n    this.updateUserKeys();\n    this.on(\"updated\", () => {\n      this.updateUserKeys();\n      this.checkForPendingKeyRotations();\n    });\n  }\n  /** ************** PUBLIC API */\n  get graph() {\n    return this.store.getGraph();\n  }\n  /** We use the hash of the graph's root as a unique ID for the team. */\n  get id() {\n    return this.graph.root;\n  }\n  /** Returns this team's user-facing name. */\n  get teamName() {\n    return this.state.teamName;\n  }\n  setTeamName(teamName) {\n    this.dispatch({ type: \"SET_TEAM_NAME\", payload: { teamName } });\n  }\n  /** ************** CONTEXT */\n  get userName() {\n    return this.context.user.userId;\n  }\n  get userId() {\n    return this.context.user.userId;\n  }\n  get isServer() {\n    return \"server\" in this.context;\n  }\n  /** ************** TEAM STATE\n   *\n   * All the logic for *reading* team state is in selectors (see `/team/selectors`).\n   *\n   * Most of the logic for *modifying* team state is in transforms (see `/team/transforms`), which\n   * are executed by the reducer. To mutate team state, we dispatch changes to the graph, and then\n   * run the graph through the reducer to recalculate team state.\n   *\n   * Any crypto operations involving the current user's secrets (for example, opening or creating\n   * lockboxes, or signing links) are done here, not in the selectors or in the reducer. Only the\n   * public-facing outputs (for example, the resulting lockboxesInScope, or the signed links) are\n   * posted on the graph.\n   */\n  save = () => serializeTeamGraph(this.graph);\n  /**\n   * Merges another graph (e.g. from a peer) with ours.\n   * @returns This `Team` instance.\n   */\n  merge = (theirGraph) => {\n    this.store.merge(theirGraph);\n    this.state = this.store.getState();\n    this.emit(\"updated\", { head: this.graph.head });\n    return this;\n  };\n  /** Add a link to the graph, then recompute team state from the new graph */\n  dispatch(action, teamKeys = this.teamKeys()) {\n    this.store.dispatch(action, teamKeys);\n    this.state = this.store.getState();\n    this.emit(\"updated\", { head: this.graph.head });\n  }\n  /** ************** MEMBERS */\n  /** Returns true if the team has a member with the given userId */\n  has = (userId) => hasMember(this.state, userId);\n  // Overload: one member\n  //\n  members(userId = ALL, options = { includeRemoved: true }) {\n    return userId === ALL ? this.state.members : member(this.state, userId, options);\n  }\n  /**\n   * Adds a member to the team, along with an (optional) device. Since this method assumes that you\n   * know the member's secret keys, it only makes sense for unit tests. In real-world scenarios,\n   * you'll need to use the `team.invite` workflow to add members without relying on some kind of\n   * public key infrastructure.\n   *\n   * This can be used to add a device for an existing member - just pass the existing user as the\n   * first argument.\n   */\n  addForTesting = (user, roles = [], device2) => {\n    const member2 = { ...redactUser(user), roles };\n    if (!this.has(member2.userId)) {\n      const lockboxes = this.createMemberLockboxes(member2);\n      this.dispatch({\n        type: \"ADD_MEMBER\",\n        payload: { member: member2, roles, lockboxes }\n      });\n    }\n    if (device2) {\n      const lockboxUserKeysForDevice = create(user.keys, device2.keys);\n      this.dispatch({\n        type: \"ADD_DEVICE\",\n        payload: { device: device2, lockboxes: [lockboxUserKeysForDevice] }\n      });\n    }\n  };\n  /** Remove a member from the team */\n  remove = (userId) => {\n    const lockboxes = this.rotateKeys({ type: USER2, name: userId });\n    this.dispatch({\n      type: \"REMOVE_MEMBER\",\n      payload: {\n        userId,\n        lockboxes\n      }\n    });\n  };\n  /** Returns true if the member was once on the team but was removed */\n  memberWasRemoved = (userId) => memberWasRemoved(this.state, userId);\n  //\n  roles(roleName = ALL) {\n    return roleName === ALL ? this.state.roles : role(this.state, roleName);\n  }\n  /** Returns true if the member with the given userId has the given role */\n  memberHasRole = (userId, roleName) => memberHasRole(this.state, userId, roleName);\n  /** Returns true if the member with the given userId is a member of the 3 role */\n  memberIsAdmin = (userId) => memberIsAdmin(this.state, userId);\n  /** Returns true if the team has a role with the given name */\n  hasRole = (roleName) => hasRole(this.state, roleName);\n  /** Returns a list of members who have the given role */\n  membersInRole = (roleName) => membersInRole(this.state, roleName);\n  /** Returns a list of members who are in the admin role */\n  admins = () => admins(this.state);\n  /** Add a role to the team */\n  addRole = (role2) => {\n    if (typeof role2 === \"string\") {\n      role2 = { roleName: role2 };\n    }\n    const roleKeys = createKeyset3({ type: KeyType.ROLE, name: role2.roleName }, this.seed);\n    const lockboxRoleKeysForAdmins = create(roleKeys, this.adminKeys());\n    this.dispatch({\n      type: \"ADD_ROLE\",\n      payload: { ...role2, lockboxes: [lockboxRoleKeysForAdmins] }\n    });\n  };\n  /** Remove a role from the team */\n  removeRole = (roleName) => {\n    assert7(roleName !== ADMIN, \"Cannot remove admin role\");\n    this.dispatch({\n      type: \"REMOVE_ROLE\",\n      payload: { roleName }\n    });\n  };\n  /** Give a member a role */\n  addMemberRole = (userId, roleName) => {\n    const member2 = this.members(userId);\n    const lockboxRoleKeysForMember = create(this.roleKeys(roleName), member2.keys);\n    this.dispatch({\n      type: \"ADD_MEMBER_ROLE\",\n      payload: { userId, roleName, lockboxes: [lockboxRoleKeysForMember] }\n    });\n  };\n  /** Remove a role from a member */\n  removeMemberRole = (userId, roleName) => {\n    if (roleName === ADMIN) {\n      const adminCount = this.membersInRole(ADMIN).length;\n      assert7(adminCount > 1, \"Can't remove the last admin\");\n    }\n    const lockboxes = this.rotateKeys({ type: KeyType.ROLE, name: roleName });\n    this.dispatch({\n      type: \"REMOVE_MEMBER_ROLE\",\n      payload: { userId, roleName, lockboxes }\n    });\n  };\n  /** ************** DEVICES */\n  /** Returns true if the given member has a device by the given name */\n  hasDevice = (deviceId, options) => hasDevice(this.state, deviceId, options);\n  /** Find a member's device by name */\n  device(deviceId, options) {\n    return device(this.state, deviceId, options);\n  }\n  /** Remove a member's device */\n  removeDevice = (deviceId) => {\n    if (!this.hasDevice(deviceId)) throw new Error(`Device ${deviceId} not found`);\n    const lockboxes = this.rotateKeys({ type: DEVICE, name: deviceId });\n    this.dispatch({\n      type: \"REMOVE_DEVICE\",\n      payload: {\n        deviceId,\n        lockboxes\n      }\n    });\n  };\n  /** Returns true if the device was once on the team but was removed */\n  deviceWasRemoved = (deviceId) => {\n    return deviceWasRemoved(this.state, deviceId);\n  };\n  /** Looks for a member that has this device. If none is found, return  */\n  memberByDeviceId = (deviceId, options) => {\n    return memberByDeviceId(this.state, deviceId, options);\n  };\n  verifyIdentityProof = (challenge2, proof) => {\n    assert7(challenge2.type === DEVICE);\n    const deviceId = challenge2.name;\n    const device2 = this.hasServer(deviceId) ? this.servers(deviceId) : this.device(deviceId, { includeRemoved: true });\n    const validation = verify(challenge2, proof, device2.keys);\n    return validation.isValid;\n  };\n  /** ************** INVITATIONS */\n  /**\n   * To invite a new member:\n   *\n   * Alice generates an invitation using a secret seed. The seed an be randomly generated, or\n   * selected by Alice. Alice sends the invitation to Bob using a trusted channel.\n   *\n   * Meanwhile, Alice adds Bob to the graph as a new member, with appropriate roles (if\n   * any) and any corresponding lockboxes.\n   *\n   * Bob can't authenticate directly as that member, since it has random temporary keys created by\n   * Alice. Instead, Bob generates a proof of invitation, and when they try to connect to Alice or\n   * Charlie they present that proof instead of authenticating.\n   *\n   * Once Alice or Charlie verifies Bob's proof, they send him the team graph. Bob uses that to\n   * instantiate the team, then he updates the team with his real public keys and adds his current\n   * device information.\n   */\n  inviteMember({\n    seed = randomSeed(),\n    expiration,\n    maxUses\n  } = {}) {\n    seed = normalize(seed);\n    const invitation = create2({ seed, expiration, maxUses });\n    const { id } = invitation;\n    this.dispatch({\n      type: \"INVITE_MEMBER\",\n      payload: { invitation }\n    });\n    return { id, seed };\n  }\n  /**\n   *  To invite an existing member's device:\n   *\n   *  On his laptop, Bob generates an invitation using a secret seed. He gets that seed to his phone\n   *  using a QR code or by typing it in.\n   *\n   *  On his phone, Bob connects to his laptop (or to Alice or Charlie). Bob's phone presents its\n   *  proof of invitation.\n   *\n   *  Once an existing device (Bob's laptop or Alice or Charlie) verifies Bob's phone's proof, they\n   *  send it the team graph. Using the graph, the phone instantiates the team, then adds itself as\n   *  a device.\n   */\n  inviteDevice({\n    seed = randomSeed(),\n    expiration = Date.now() + 30 * 60 * 1e3\n  } = {}) {\n    assert7(!this.isServer, \"Servers can't invite a device\");\n    seed = normalize(seed);\n    const maxUses = 1;\n    const invitation = create2({ seed, expiration, maxUses, userId: this.userId });\n    const starterKeys = generateStarterKeys(seed);\n    const allUserKeys = Object.values(this.userKeyring());\n    const lockboxes = allUserKeys.map((keys2) => create(keys2, starterKeys));\n    const { id } = invitation;\n    this.dispatch({\n      type: \"INVITE_DEVICE\",\n      payload: { invitation, lockboxes }\n    });\n    return { id, seed };\n  }\n  /** Revoke an invitation. */\n  revokeInvitation = (id) => {\n    this.dispatch({\n      type: \"REVOKE_INVITATION\",\n      payload: { id }\n    });\n  };\n  /** Returns true if the invitation has ever existed in this team (even if it's been used or revoked) */\n  hasInvitation(id) {\n    return hasInvitation(this.state, id);\n  }\n  /** Gets the invitation corresponding to the given id. If it does not exist, throws an error. */\n  getInvitation = (id) => getInvitation(this.state, id);\n  /** Check whether (1) the invitation is still valid, and (2) the proof of invitation checks out. */\n  validateInvitation = (proof) => {\n    const { id } = proof;\n    if (!this.hasInvitation(id)) return fail(\"This invitation code doesn't match.\");\n    const invitation = this.getInvitation(id);\n    const canBeUsedResult = invitationCanBeUsed(invitation, Date.now());\n    if (canBeUsedResult !== VALID) return canBeUsedResult;\n    return validate(proof, invitation);\n  };\n  /** Check if userId and userName are not used by any other member within the team. */\n  validateUser = (userId, userName) => {\n    const memberWithSameUserId = this.members().find((member2) => member2.userId === userId);\n    if (memberWithSameUserId !== void 0) {\n      return fail(\"userId is not unique within the team.\");\n    }\n    const memberWithSameUserName = this.members().find(\n      (member2) => member2.userName.toLowerCase() === userName.toLowerCase()\n    );\n    if (memberWithSameUserName !== void 0) {\n      return fail(\"Username is not unique within the team.\");\n    }\n    return VALID;\n  };\n  /** An existing team member calls this to admit a new member & their device to the team based on proof of invitation */\n  admitMember = (proof, memberKeys, userName) => {\n    const invitationValidation = this.validateInvitation(proof);\n    if (!invitationValidation.isValid) throw invitationValidation.error;\n    const userValidation = this.validateUser(memberKeys.name, userName);\n    if (!userValidation.isValid) throw userValidation.error;\n    const { id } = proof;\n    const allTeamKeys = Object.values(this.teamKeyring());\n    const lockboxes = allTeamKeys.map((keys2) => create(keys2, memberKeys));\n    this.dispatch({\n      type: \"ADMIT_MEMBER\",\n      payload: {\n        id,\n        userName,\n        memberKeys: redactKeys3(memberKeys),\n        lockboxes\n      }\n    });\n  };\n  /** An existing team member calls this to admit a new device based on proof of invitation */\n  admitDevice = (proof, firstUseDevice) => {\n    const validation = this.validateInvitation(proof);\n    if (!validation.isValid) throw validation.error;\n    const { id } = proof;\n    const invitation = this.getInvitation(id);\n    const userId = invitation.userId;\n    const device2 = { ...firstUseDevice, userId };\n    this.dispatch({\n      type: \"ADMIT_DEVICE\",\n      payload: {\n        id,\n        device: device2\n      }\n    });\n  };\n  /** Once the new member has received the graph and can instantiate the team, they call this to add their device. */\n  join = (teamKeyring2, userKeyring = createKeyring2(this.context.user.keys)) => {\n    assert7(!this.isServer, \"Can't join as member on server\");\n    const { device: device2 } = this.context;\n    const teamKeys = getLatestGeneration2(teamKeyring2);\n    const lockboxes = Object.values(userKeyring).map((keys2) => create(keys2, device2.keys));\n    this.dispatch(\n      {\n        type: \"ADD_DEVICE\",\n        payload: {\n          device: redactDevice(device2),\n          lockboxes\n        }\n      },\n      teamKeys\n    );\n  };\n  /** ************** SERVERS */\n  /**\n   * A server is an always-on, always-connected device that is available to the team but does not\n   * belong to any one member. For example, `automerge-repo` calls this a \"sync server\".\n   *\n   * A server has a host name that uniquely identifies it (e.g. `example.com`, `localhost:8080`, or\n   * `188.26.221.135`).\n   *\n   * The expected usage is for the application to add a server or servers immediately after the team\n   * is created. However, the application can add or remove servers at any time.\n   *\n   * Just before adding a server, the application should send it the latest graph and the team keys\n   * (so it can decrypt the team graph). No invitation or authentication is necessary in this phase,\n   * as a TLS connection to a trusted address is sufficient to ensure the security of that\n   * connection. In response, the server should send back its public keys. This library is not\n   * involved in that process.\n   *\n   * The application should then add the server to the team using `addServer`, passing in the\n   * server's public keys. At that point the server will be able to authenticate with other devices\n   * using the same protocol as for members.\n   *\n   * The only actions that a server can dispatch to the graph are `ADMIT_MEMBER` and `ADMIT_DEVICE`.\n   * The server needs to be able to admit invited members and devices in order to support\n   * star-shaped networks where every device connects to a server, rather than directly to each\n   * other.)\n   */\n  addServer = (server2) => {\n    const lockboxes = this.createMemberLockboxes(castServer.toMember(server2));\n    this.dispatch({\n      type: \"ADD_SERVER\",\n      payload: { server: server2, lockboxes }\n    });\n  };\n  /** Removes a server from the team. */\n  removeServer = (host) => {\n    this.dispatch({\n      type: \"REMOVE_SERVER\",\n      payload: { host }\n    });\n  };\n  // Overload: one server\n  //\n  servers(host = ALL, options = { includeRemoved: true }) {\n    return host === ALL ? this.state.servers : server(this.state, host, options);\n  }\n  /** Returns true if the server was once on the team but was removed */\n  serverWasRemoved = (host) => serverWasRemoved(this.state, host);\n  hasServer = (host) => hasServer(this.state, host);\n  /** ************** MESSAGES */\n  addMessage = (message) => {\n    this.dispatch({\n      type: \"MESSAGE\",\n      payload: { message }\n    });\n  };\n  messages = () => messages(this.state);\n  /** ************** CRYPTO */\n  /**\n   * Symmetrically encrypt a payload for the given scope using keys available to the current user.\n   *\n   * > *Note*: Since this convenience function uses symmetric encryption, we can only use it to\n   * encrypt for scopes the current user has keys for (e.g. the whole team, or roles they belong\n   * to). If we need to encrypt asymmetrically, we use the functions in the crypto module directly.\n   */\n  encrypt = (payload, roleName) => {\n    const scope = roleName ? { type: KeyType.ROLE, name: roleName } : TEAM_SCOPE;\n    const { secretKey, generation } = this.keys(scope);\n    return {\n      contents: symmetric.encryptBytes(payload, secretKey),\n      recipient: { ...scope, generation }\n    };\n  };\n  /** Decrypt a payload using keys available to the current user. */\n  decrypt = (message) => {\n    const { secretKey } = this.keys(message.recipient);\n    return symmetric.decryptBytes(message.contents, secretKey);\n  };\n  /** Sign a message using the current user's keys. */\n  sign = (contents) => {\n    assert7(this.context.user);\n    const {\n      keys: {\n        type,\n        name,\n        generation,\n        signature: { secretKey }\n      }\n    } = this.context.user;\n    return {\n      contents,\n      signature: signatures4.sign(contents, secretKey),\n      author: { type, name, generation }\n    };\n  };\n  /** Verify a signed message against the author's public key */\n  verify = (message) => signatures4.verify({\n    payload: message.contents,\n    signature: message.signature,\n    publicKey: this.members(message.author.name).keys.signature\n  });\n  /** ************** KEYS\n   *\n   * These methods all return keysets *with secrets* that are available to the local user. To get\n   * other members' public keys, look up the member - the `keys` property contains their public keys.\n   */\n  /**\n   * Returns the secret keyset (if available to the current device) for the given type and name. To\n   * get other members' public keys, look up the member - the `keys` property contains their public\n   * keys.\n   */\n  keys = (scope) => keys(this.state, this.context.device.keys, scope);\n  userKeyring = (userId = this.userId) => keyring(this.state, { type: USER2, name: userId }, this.context.device.keys);\n  /** Returns the keys for the given role. */\n  roleKeys = (roleName, generation) => this.keys({ type: KeyType.ROLE, name: roleName, generation });\n  /** Returns the current team keys or a specific generation of team keys */\n  teamKeys = (generation) => this.keys({ ...TEAM_SCOPE, generation });\n  teamKeyring = () => teamKeyring(this.state, this.context.device.keys);\n  /** Returns the admin keyset. */\n  adminKeys = (generation) => this.roleKeys(ADMIN, generation);\n  /**\n   * Replaces the current user or device's secret keyset with the one provided.\n   * (This can also be used by an admin to change another user's secret keyset.)\n   */\n  changeKeys = (newKeys) => {\n    const { device: device2, user } = this.context;\n    const { type } = newKeys;\n    assert7(type !== DEVICE, \"Can't change device keys\");\n    const isForUser = type === USER2;\n    const isForServer = type === KeyType.SERVER;\n    const oldKeys = user.keys;\n    newKeys.generation = oldKeys.generation + 1;\n    const lockboxes = this.rotateKeys(newKeys);\n    const action = isForUser ? \"CHANGE_MEMBER_KEYS\" : \"CHANGE_SERVER_KEYS\";\n    const keys2 = redactKeys3(newKeys);\n    this.dispatch({ type: action, payload: { keys: keys2, lockboxes } });\n    if (isForServer || isForUser) user.keys = newKeys;\n    if (isForServer) device2.keys = newKeys;\n  };\n  updateUserKeys() {\n    const { user } = this.context;\n    const latestUserKeys = getLatestGeneration2(this.userKeyring());\n    if (latestUserKeys && user.keys.generation < latestUserKeys.generation) {\n      user.keys = latestUserKeys;\n    }\n  }\n  checkForPendingKeyRotations() {\n    if (!this.memberIsAdmin(this.userId)) {\n      return;\n    }\n    for (const userId of this.state.pendingKeyRotations) {\n      const lockboxes = this.rotateKeys({\n        type: USER2,\n        name: this.userId\n      });\n      this.dispatch({ type: \"ROTATE_KEYS\", payload: { userId, lockboxes } });\n    }\n  }\n  createMemberLockboxes = (member2) => {\n    const roleKeys = member2.roles.map(this.roleKeys);\n    const createLockboxRoleKeysForMember = (keys2) => {\n      return create(keys2, member2.keys);\n    };\n    return [...roleKeys, this.teamKeys()].map(createLockboxRoleKeysForMember);\n  };\n  /**\n   * Given a compromised scope (e.g. a member or a role), find all scopes that are visible from that\n   * scope, and generates new keys and lockboxes for each of those. Returns all of the new lockboxes\n   * in a single array to be posted to the graph.\n   *\n   * You can pass it a scope, or a keyset (which includes the scope information). If you pass a\n   * keyset, it will replace the existing keys with these.\n   *\n   * @param compromised If `compromised` is a keyset, that will become the new keyset for the\n   * compromised scope. If it is just a scope, new keys will be randomly generated for that scope.\n   */\n  rotateKeys = (compromised) => {\n    const newKeyset = isKeyset(compromised) ? compromised : createKeyset3(compromised);\n    const visibleScopes2 = visibleScopes(this.state, compromised);\n    const otherNewKeysets = visibleScopes2.map((scope) => createKeyset3(scope));\n    const newKeysets = [newKeyset, ...otherNewKeysets];\n    const newLockboxes = newKeysets.flatMap((newKeyset2) => {\n      const oldLockboxes = lockboxesInScope(this.state, newKeyset2);\n      return oldLockboxes.map((oldLockbox) => {\n        const updatedKeyset = newKeysets.find((k) => scopesMatch(k, oldLockbox.recipient));\n        return rotate({\n          oldLockbox,\n          newContents: newKeyset2,\n          // If we did, address the new lockbox to those keys\n          updatedRecipientKeys: updatedKeyset ? redactKeys3(updatedKeyset) : void 0\n        });\n      });\n    });\n    return newLockboxes;\n  };\n};\n\n// src/team/createTeam.ts\nimport { createKeyset as createKeyset4 } from \"@localfirst/crdx\";\nfunction createTeam(teamName, context, seed) {\n  const teamKeys = createKeyset4(TEAM_SCOPE, seed);\n  return new Team({ teamName, context, teamKeys });\n}\n\n// src/team/decryptTeamGraph.ts\nimport {\n  createKeyring as createKeyring3,\n  decryptLink\n} from \"@localfirst/crdx\";\nvar decryptTeamGraph = ({\n  encryptedGraph,\n  teamKeys,\n  deviceKeys\n}) => {\n  const keyring2 = createKeyring3(teamKeys);\n  const { encryptedLinks, childMap, root } = encryptedGraph;\n  const links = encryptedGraph.links ?? {};\n  const decrypt = (hash3, previousKeys, previousDecryptedLinks = {}, previousState = initialState) => {\n    const encryptedLink = encryptedLinks[hash3];\n    const decryptedLink = links[hash3] ?? // If it's already decrypted, don't bother decrypting it again\n    decryptLink(encryptedLink, previousKeys);\n    let decryptedLinks2 = {\n      [hash3]: decryptedLink\n    };\n    const newState = reducer(previousState, decryptedLink);\n    let newKeys;\n    try {\n      newKeys = keys(newState, deviceKeys, TEAM_SCOPE);\n      keyring2[newKeys.encryption.publicKey] = newKeys;\n    } catch {\n      newKeys = previousKeys;\n    }\n    const children = childMap[hash3];\n    if (children) {\n      for (const hash4 of children) {\n        decryptedLinks2 = {\n          ...decryptedLinks2,\n          ...decrypt(hash4, newKeys, decryptedLinks2, newState)\n        };\n      }\n    }\n    return { ...previousDecryptedLinks, ...decryptedLinks2 };\n  };\n  const rootPublicKey = encryptedLinks[root].recipientPublicKey;\n  const rootKeys = keyring2[rootPublicKey];\n  const decryptedLinks = decrypt(root, rootKeys);\n  return {\n    ...encryptedGraph,\n    links: decryptedLinks\n  };\n};\n\n// src/team/load.ts\nimport { createKeyring as createKeyring4 } from \"@localfirst/crdx\";\nvar load = (source, context, teamKeys) => {\n  const teamKeyring2 = createKeyring4(teamKeys);\n  return new Team({ source, context, teamKeyring: teamKeyring2 });\n};\n\n// src/util/testing/messageSummary.ts\nimport { truncateHashes as truncateHashes2 } from \"@localfirst/shared\";\nvar syncMessageSummary = (m) => {\n  if (m === void 0) {\n    return \"DONE\";\n  }\n  const { head, links, need } = m;\n  const body = { head };\n  if (links) {\n    body.links = Object.keys(links).join(\", \");\n  }\n  if (need) {\n    body.need = need.join(\", \");\n  }\n  return truncateHashes2(JSON.stringify(body));\n};\n\n// src/connection/Connection.ts\nimport { and, assertEvent, assign, createActor, setup } from \"xstate\";\n\n// src/connection/MessageQueue.ts\nimport { EventEmitter as EventEmitter2 } from \"@herbcaudill/eventemitter42\";\nimport { debug as debug3 } from \"@localfirst/shared\";\nvar log2 = debug3.extend(\"message-queue\");\nvar MessageQueue = class extends EventEmitter2 {\n  #started = false;\n  #inbound = {};\n  #nextInbound = 0;\n  #waiting = {};\n  #timeout;\n  #outbound = {};\n  #nextOutbound = 0;\n  #sendMessage;\n  constructor({ sendMessage, timeout: timeout2 = 1e3 }) {\n    super();\n    this.#sendMessage = (message) => {\n      this.#nextOutbound = message.index + 1;\n      sendMessage(message);\n    };\n    this.#timeout = timeout2;\n  }\n  /**\n   * Messages can be received before the service is started (e.g. while waiting to be ready to send\n   * over the network). They will be emitted in order when start() is called.\n   */\n  start() {\n    this.#started = true;\n    this.#processInbound();\n    this.#processOutbound();\n    return this;\n  }\n  /**\n   * Stop emitting messages. Messages will be queued until start() is called again.\n   */\n  stop() {\n    this.#started = false;\n    return this;\n  }\n  /**\n   * Assigns a number to the message and sends it.\n   */\n  send(message) {\n    const index = highestIndex(this.#outbound) + 1;\n    const numberedMessage = { ...message, index };\n    this.#outbound[index] = numberedMessage;\n    log2(\"send %o\", numberedMessage);\n    if (this.#started) this.#sendMessage(numberedMessage);\n    return this;\n  }\n  /**\n   * Resends a message that was previously sent.\n   */\n  resend(index) {\n    const message = this.#outbound[index];\n    if (!message)\n      throw new Error(`Received resend request for message #${index}, which doesn't exist.`);\n    log2(\"resend %o\", message);\n    this.#sendMessage(message);\n    return this;\n  }\n  /**\n   * Queues inbound messages and, if we're started, emits them in order.\n   */\n  receive(message) {\n    const { index } = message;\n    log2(\"receive %o\", message);\n    if (!this.#inbound[index]) {\n      this.#inbound[index] = message;\n      if (this.#started) this.#processInbound();\n    }\n    return this;\n  }\n  #processOutbound() {\n    log2(\"processOutbound\");\n    while (this.#outbound[this.#nextOutbound]) {\n      const message = this.#outbound[this.#nextOutbound];\n      this.#sendMessage(message);\n    }\n  }\n  /**\n   * Receives any messages that are pending in the inbound queue, and requests any missing messages.\n   */\n  #processInbound() {\n    log2(\"processInbound\");\n    while (this.#inbound[this.#nextInbound]) {\n      const message = this.#inbound[this.#nextInbound];\n      this.#nextInbound++;\n      this.emit(\"message\", message);\n    }\n    const highest = highestIndex(this.#inbound);\n    for (let i = this.#nextInbound; i < highest; i++) {\n      if (this.#waiting[i]) continue;\n      this.#waiting[i] = setTimeout(() => {\n        if (!this.#inbound[i]) this.emit(\"request\", i);\n        delete this.#waiting[i];\n      }, this.#timeout);\n    }\n  }\n};\nfunction highestIndex(queue) {\n  return Math.max(...Object.keys(queue).map(Number), -1);\n}\n\n// src/connection/helpers.ts\nvar messageSummary = (message) => message.type === \"SYNC\" ? `SYNC ${syncMessageSummary(message.payload)}` : (\n  // @ts-expect-error utility function don't worry about it\n  `${message.type} ${message.payload?.head?.slice(0, 5) || message.payload?.message || \"\"}`\n);\nvar isString = (state) => typeof state === \"string\";\nvar stateSummary = (state) => isString(state) ? state : Object.keys(state).map((key) => `${key}:${stateSummary(state[key])}`).filter((s) => s.length).join(\",\");\nvar extendServerContext = (context) => {\n  const { keys: keys2, host } = context.server;\n  return {\n    ...context,\n    user: { userId: host, userName: host, keys: keys2 },\n    device: { userId: host, deviceId: host, deviceName: host, keys: keys2 }\n  };\n};\nvar getUserName = (context) => {\n  if (\"server\" in context) return context.server.host;\n  if (\"userName\" in context) return context.userName;\n  if (\"user\" in context) return context.user.userName;\n  return \"\";\n};\n\n// src/connection/types.ts\nvar isMemberContext = (c) => {\n  return \"team\" in c && c.team !== void 0;\n};\nvar isInviteeContext = (c) => {\n  return \"invitationSeed\" in c && c.invitationSeed !== void 0;\n};\nvar isInviteeMemberContext = (c) => {\n  return isInviteeContext(c) && \"user\" in c && c.user !== void 0;\n};\nvar isInviteeDeviceContext = (c) => {\n  return isInviteeContext(c) && !isInviteeMemberContext(c);\n};\nvar isServerContext = (c) => {\n  return \"server\" in c && c.server !== void 0;\n};\nvar isMemberClaim = (claim) => {\n  return \"deviceId\" in claim && claim.deviceId !== void 0;\n};\nvar isInviteeMemberClaim = (claim) => {\n  return isInviteeClaim(claim) && \"userKeys\" in claim && claim.userKeys !== void 0;\n};\nvar isInviteeDeviceClaim = (claim) => {\n  return isInviteeClaim(claim) && !(\"userKeys\" in claim);\n};\nvar isInviteeClaim = (claim) => {\n  return \"proofOfInvitation\" in claim && claim.proofOfInvitation !== void 0;\n};\n\n// src/connection/Connection.ts\nvar Connection = class extends EventEmitter3 {\n  #machine;\n  #messageQueue;\n  #started = false;\n  #log = debug4.extend(\"auth:connection\");\n  constructor({ sendMessage, context }) {\n    super();\n    this.#messageQueue = this.#initializeMessageQueue(sendMessage);\n    this.#log = this.#log.extend(getUserName(context));\n    const initialContext = isServerContext(context) ? extendServerContext(context) : context;\n    const machine = setup({\n      types: {\n        context: {},\n        events: {}\n      },\n      // ******* ACTIONS\n      // these are referred to by name in the state machine definition\n      actions: {\n        // IDENTITY CLAIMS\n        requestIdentityClaim: () => {\n          this.#queueMessage(\"REQUEST_IDENTITY\");\n        },\n        sendIdentityClaim: assign(({ context: context2 }) => {\n          const createIdentityClaim = (context3) => {\n            if (isMemberContext(context3)) {\n              return {\n                deviceId: context3.device.deviceId\n              };\n            }\n            if (isInviteeMemberContext(context3)) {\n              assert8(context3.invitationSeed);\n              const { userName, keys: keys2 } = context3.user;\n              return {\n                proofOfInvitation: generateProof(context3.invitationSeed),\n                userName,\n                userKeys: redactKeys4(keys2),\n                device: redactDevice(context3.device)\n              };\n            }\n            if (isInviteeDeviceContext(context3)) {\n              assert8(context3.invitationSeed);\n              const { userName, device: device2 } = context3;\n              return {\n                proofOfInvitation: generateProof(context3.invitationSeed),\n                userName,\n                device: redactDevice(device2)\n              };\n            }\n            throw new Error(\"Invalid context\");\n          };\n          const ourIdentityClaim = createIdentityClaim(context2);\n          this.#queueMessage(\"CLAIM_IDENTITY\", ourIdentityClaim);\n          return { ourIdentityClaim };\n        }),\n        receiveIdentityClaim: assign(({ event }) => {\n          assertEvent(event, \"CLAIM_IDENTITY\");\n          const identityClaim = event.payload;\n          const theirDevice = \"device\" in identityClaim ? identityClaim.device : void 0;\n          return { theirIdentityClaim: identityClaim, theirDevice };\n        }),\n        // INVITATIONS\n        acceptInvitation: assign(({ context: context2 }) => {\n          const { team, theirIdentityClaim } = context2;\n          assert8(team);\n          assert8(theirIdentityClaim);\n          assert8(isInviteeClaim(theirIdentityClaim));\n          const { proofOfInvitation } = theirIdentityClaim;\n          const admit = () => {\n            if (isInviteeMemberClaim(theirIdentityClaim)) {\n              const { userName, userKeys } = theirIdentityClaim;\n              team.admitMember(proofOfInvitation, userKeys, userName);\n              const userId = userKeys.name;\n              return team.members(userId);\n            } else {\n              const { device: device2 } = theirIdentityClaim;\n              team.admitDevice(proofOfInvitation, device2);\n              const { deviceId } = device2;\n              const { userId } = team.memberByDeviceId(deviceId);\n              return team.members(userId);\n            }\n          };\n          const peer = admit();\n          this.#queueMessage(\"ACCEPT_INVITATION\", {\n            serializedGraph: team.save(),\n            teamKeyring: team.teamKeyring()\n          });\n          return { peer };\n        }),\n        joinTeam: assign(({ context: context2, event }) => {\n          assertEvent(event, \"ACCEPT_INVITATION\");\n          const { serializedGraph, teamKeyring: teamKeyring2 } = event.payload;\n          const { device: device2, invitationSeed } = context2;\n          assert8(invitationSeed);\n          const { user, userKeyring } = context2.user === void 0 ? getDeviceUserFromGraph({ serializedGraph, teamKeyring: teamKeyring2, invitationSeed }) : { user: context2.user, userKeyring: void 0 };\n          const team = new Team({ source: serializedGraph, context: { user, device: device2 }, teamKeyring: teamKeyring2 });\n          team.join(teamKeyring2, userKeyring);\n          this.emit(\"joined\", { team, user, teamKeyring: teamKeyring2 });\n          return { user, team };\n        }),\n        // AUTHENTICATION\n        challengeIdentity: assign(({ context: context2 }) => {\n          const { team, theirIdentityClaim } = context2;\n          assert8(team);\n          assert8(isMemberClaim(theirIdentityClaim));\n          const { deviceId } = theirIdentityClaim;\n          const theirDevice = team.device(deviceId, { includeRemoved: true });\n          const peer = team.memberByDeviceId(deviceId, { includeRemoved: true });\n          this.#log = this.#log.extend(peer.userName);\n          const challenge2 = challenge({ type: KeyType.DEVICE, name: deviceId });\n          this.#queueMessage(\"CHALLENGE_IDENTITY\", { challenge: challenge2 });\n          return { theirDevice, peer, challenge: challenge2 };\n        }),\n        proveIdentity: ({ context: context2, event }) => {\n          assertEvent(event, \"CHALLENGE_IDENTITY\");\n          const { challenge: challenge2 } = event.payload;\n          const { keys: keys2 } = context2.device;\n          const proof = prove(challenge2, keys2);\n          this.#queueMessage(\"PROVE_IDENTITY\", { challenge: challenge2, proof });\n        },\n        acceptIdentity: () => this.#queueMessage(\"ACCEPT_IDENTITY\"),\n        // SYNCHRONIZATION\n        listenForTeamUpdates: ({ context: context2 }) => {\n          assert8(context2.team);\n          context2.team.on(\"updated\", ({ head }) => {\n            if (this.#machine.getSnapshot().status !== \"done\") {\n              this.#machine.send({ type: \"LOCAL_UPDATE\", payload: { head } });\n            }\n            this.emit(\"updated\");\n          });\n        },\n        sendSyncMessage: assign(({ context: context2 }) => {\n          assert8(context2.team);\n          const previousSyncState = context2.syncState ?? initSyncState();\n          const [syncState, syncMessage] = generateMessage(context2.team.graph, previousSyncState);\n          if (syncMessage) {\n            this.#log(\"sending sync message\", syncMessageSummary(syncMessage));\n            this.#queueMessage(\"SYNC\", syncMessage);\n          } else {\n            this.#log(\"no sync message to send\");\n          }\n          return { syncState };\n        }),\n        receiveSyncMessage: assign(({ context: context2, event }) => {\n          assertEvent(event, \"SYNC\");\n          const syncMessage = event.payload;\n          const { syncState: prevSyncState = initSyncState(), team, device: device2 } = context2;\n          assert8(team);\n          const teamKeys = team.teamKeys();\n          const deviceKeys = device2.keys;\n          const decrypt = ({ encryptedGraph, keys: keys2 }) => decryptTeamGraph({ encryptedGraph, teamKeys: keys2, deviceKeys });\n          const [newChain, syncState] = receiveMessage(\n            team.graph,\n            prevSyncState,\n            syncMessage,\n            teamKeys,\n            decrypt\n          );\n          if (headsAreEqual(newChain.head, team.graph.head)) {\n            return { syncState };\n          } else {\n            this.emit(\"updated\");\n            return { team: team.merge(newChain), syncState };\n          }\n        }),\n        // SHARED SECRET NEGOTIATION\n        sendSeed: assign(({ context: context2 }) => {\n          const { user, peer, seed = randomKeyBytes() } = context2;\n          const recipientPublicKey = peer.keys.encryption;\n          const senderSecretKey = user.keys.encryption.secretKey;\n          this.#log(`encrypting seed with key ${recipientPublicKey}`);\n          const encryptedSeed = asymmetric3.encryptBytes({\n            secret: seed,\n            recipientPublicKey,\n            senderSecretKey\n          });\n          this.#queueMessage(\"SEED\", { encryptedSeed });\n          return { seed };\n        }),\n        deriveSharedKey: assign(({ context: context2, event }) => {\n          assertEvent(event, \"SEED\");\n          const { encryptedSeed } = event.payload;\n          const { seed, user, peer } = context2;\n          const cipher = encryptedSeed;\n          const senderPublicKey = peer.keys.encryption;\n          const recipientSecretKey = user.keys.encryption.secretKey;\n          try {\n            const theirSeed = asymmetric3.decryptBytes({\n              cipher,\n              senderPublicKey,\n              recipientSecretKey\n            });\n            return { sessionKey: deriveSharedKey(seed, theirSeed) };\n          } catch (error) {\n            if (String(error).includes(\"incorrect key pair\")) {\n              this.#log(`failed to decrypt seed using public key ${senderPublicKey}`, error);\n              return this.#fail(ENCRYPTION_FAILURE);\n            } else throw error;\n          }\n        }),\n        // ENCRYPTED COMMUNICATION\n        receiveEncryptedMessage: ({ context: context2, event }) => {\n          assertEvent(event, \"ENCRYPTED_MESSAGE\");\n          const sessionKey = context2.sessionKey;\n          const encryptedMessage = event.payload;\n          try {\n            const decryptedMessage = symmetric2.decryptBytes(encryptedMessage, sessionKey);\n            this.emit(\"message\", decryptedMessage);\n          } catch (error) {\n            if (String(error).includes(\"wrong secret key\")) {\n              this.#log(\n                `failed to decrypt message using session key ${base582.encode(sessionKey)}`,\n                error\n              );\n              return this.#fail(ENCRYPTION_FAILURE);\n            } else throw error;\n          }\n        },\n        // FAILURE\n        fail: assign((_, { error }) => {\n          return this.#fail(error);\n        }),\n        receiveError: assign(({ event }) => {\n          assertEvent(event, \"ERROR\");\n          const error = event.payload;\n          this.#log(\"receiveError: %o\", error);\n          this.emit(\"remoteError\", error);\n          return { error };\n        }),\n        sendError: assign(({ event }) => {\n          assertEvent(event, \"LOCAL_ERROR\");\n          const error = event.payload;\n          this.#log(\"sendError %o\", error);\n          this.#messageQueue.send(createErrorMessage(error.type, \"REMOTE\"));\n          this.emit(\"localError\", error);\n          return { error };\n        }),\n        // EVENTS FOR EXTERNAL LISTENERS\n        onConnected: () => this.emit(\"connected\"),\n        onDisconnected: ({ event }) => this.emit(\"disconnected\", event)\n      },\n      // ******* GUARDS\n      // these are referred to by name in the state machine definition\n      guards: {\n        theySentIdentityClaim: ({ context: context2 }) => context2.theirIdentityClaim !== void 0,\n        weSentIdentityClaim: ({ context: context2 }) => context2.ourIdentityClaim !== void 0,\n        bothSentIdentityClaim: and([\"theySentIdentityClaim\", \"weSentIdentityClaim\"]),\n        weHaveInvitation: ({ context: context2 }) => isInviteeContext(context2),\n        theyHaveInvitation: ({ context: context2 }) => isInviteeClaim(context2.theirIdentityClaim),\n        neitherIsMember: and([\"weHaveInvitation\", \"theyHaveInvitation\"]),\n        invitationIsValid: ({ context: context2 }) => {\n          const { team, theirIdentityClaim } = context2;\n          assert8(isInviteeClaim(theirIdentityClaim));\n          return team.validateInvitation(theirIdentityClaim.proofOfInvitation).isValid;\n        },\n        joinedTheRightTeam: ({ context: context2, event }) => {\n          assertEvent(event, \"ACCEPT_INVITATION\");\n          const invitationSeed = context2.invitationSeed;\n          const { serializedGraph, teamKeyring: teamKeyring2 } = event.payload;\n          const state = getTeamState(serializedGraph, teamKeyring2);\n          const { id } = generateProof(invitationSeed);\n          return hasInvitation(state, id);\n        },\n        deviceUnknown: ({ context: context2 }) => {\n          const { theirIdentityClaim } = context2;\n          assert8(isMemberClaim(theirIdentityClaim));\n          return !context2.team.hasDevice(theirIdentityClaim.deviceId, { includeRemoved: true });\n        },\n        identityIsValid: ({ context: context2, event }) => {\n          assertEvent(event, \"PROVE_IDENTITY\");\n          const { challenge: challenge2, proof } = event.payload;\n          return context2.team.verifyIdentityProof(challenge2, proof);\n        },\n        memberWasRemoved: ({ context: context2 }) => context2.team.memberWasRemoved(context2.peer.userId),\n        deviceWasRemoved: ({ context: context2 }) => context2.team.deviceWasRemoved(context2.theirDevice.deviceId),\n        serverWasRemoved: ({ context: context2 }) => context2.team.serverWasRemoved(context2.peer.userId),\n        headsAreEqual: ({ context: context2 }) => arraysAreEqual(\n          context2.team.graph.head,\n          // our head\n          context2.syncState?.lastCommonHead\n          // last head we had in common with peer\n        )\n      }\n    }).createMachine({\n      context: initialContext,\n      // ******* STATE MACHINE DEFINITION\n      id: \"connection\",\n      entry: \"requestIdentityClaim\",\n      initial: \"awaitingIdentityClaim\",\n      on: {\n        REQUEST_IDENTITY: { actions: \"sendIdentityClaim\", target: \".awaitingIdentityClaim\" },\n        // Remote error (sent by peer)\n        ERROR: { actions: \"receiveError\", target: \"#disconnected\" },\n        // Local error (detected by us, sent to peer)\n        LOCAL_ERROR: { actions: \"sendError\", target: \"#disconnected\" }\n      },\n      states: {\n        awaitingIdentityClaim: {\n          // Don't respond to a request for an identity claim if we've already sent one\n          always: { guard: \"bothSentIdentityClaim\", target: \"authenticating\" },\n          on: { CLAIM_IDENTITY: { actions: \"receiveIdentityClaim\" } }\n        },\n        // To authenticate, each peer either presents an invitation (as a new device or as a new\n        // member) or a deviceId.\n        authenticating: {\n          initial: \"checkingInvitations\",\n          states: {\n            // A new member or new device is invited by being given a randomly-generated secret\n            // seed. This seed is used to generate a temporary keypair, the public half of which is\n            // recorded on the team graph by the device creating the invitation. The invitee can\n            // then use the seed to generate the same keypair, and use that to sign a payload that\n            // can be verified by anyone on the team.\n            checkingInvitations: {\n              always: [\n                // We can't both present invitations - someone has to be a member\n                { guard: \"neitherIsMember\", ...fail4(NEITHER_IS_MEMBER) },\n                // If I have an invitation, wait for acceptance\n                { guard: \"weHaveInvitation\", target: \"awaitingInvitationAcceptance\" },\n                // If they have an invitation, validate it\n                { guard: \"theyHaveInvitation\", target: \"validatingInvitation\" },\n                // If there are no invitations, we can proceed directly to verifying each other's identity\n                { target: \"#checkingIdentity\" }\n              ]\n            },\n            awaitingInvitationAcceptance: {\n              // Wait for them to validate the invitation we included in our identity claim\n              on: {\n                ACCEPT_INVITATION: [\n                  // Make sure the team I'm joining is actually the one that invited me\n                  { guard: \"joinedTheRightTeam\", actions: \"joinTeam\", target: \"#checkingIdentity\" },\n                  fail4(JOINED_WRONG_TEAM)\n                ]\n              },\n              ...timeout\n            },\n            validatingInvitation: {\n              always: [\n                // If the proof succeeds, add them to the team and send an acceptance message,\n                // then proceed to the standard identity claim & challenge process\n                {\n                  guard: \"invitationIsValid\",\n                  actions: \"acceptInvitation\",\n                  target: \"#checkingIdentity\"\n                },\n                // If the proof fails, disconnect with error\n                fail4(INVITATION_PROOF_INVALID)\n              ]\n            },\n            // We use a signature challenge to verify the identity of an existing team member: We\n            // send them a payload that includes a random element, they sign it with their private\n            // signature key, and we verify it with their public signature key.\n            //\n            // Note: The signature challenge is probably not sufficient on its own to prove\n            // identity; I suspect it can be defeated with a replay attack, in which Eve\n            // simultaneously authenticates to Alice as Bob, and to Bob as Alice, using each of them\n            // to sign the challenges provided by the other.\n            //\n            // In practice the session key negotiation process (below) provides much stronger\n            // guarantees of authenticity, because it doesn't involve sending a proof that could be\n            // replayed; instead it requires all further communication to be encrypted with an\n            // independently derived shared secret that can only be calculated by the parties if\n            // they have the correct private encryption keys. See\n            // https://github.com/local-first-web/auth/discussions/42\n            //\n            // We considered removing the signature challenge entirely, but it does provide an\n            // additional layer of security in the sense that it requires the peer to demonstrate\n            // that they have the signature key in addition to the encrypted key.\n            checkingIdentity: {\n              id: \"checkingIdentity\",\n              type: \"parallel\",\n              // Peers mutually authenticate to each other, so we have to complete two 'parallel' processes:\n              // 1. prove our identity\n              // 2. verify their identity\n              states: {\n                // 1. prove our identity\n                provingMyIdentity: {\n                  initial: \"awaitingIdentityChallenge\",\n                  states: {\n                    awaitingIdentityChallenge: {\n                      // If we just presented an invitation, they already know who we are\n                      always: { guard: \"weHaveInvitation\", target: \"done\" },\n                      on: {\n                        // When we receive a challenge, respond with proof\n                        CHALLENGE_IDENTITY: {\n                          actions: \"proveIdentity\",\n                          target: \"awaitingIdentityAcceptance\"\n                        }\n                      },\n                      ...timeout\n                    },\n                    // Wait for a message confirming that they've validated our proof of identity\n                    awaitingIdentityAcceptance: {\n                      on: { ACCEPT_IDENTITY: { target: \"done\" } },\n                      ...timeout\n                    },\n                    done: { type: \"final\" }\n                  }\n                },\n                // 2. verify their identity\n                verifyingTheirIdentity: {\n                  initial: \"challengingIdentity\",\n                  states: {\n                    // Send a signature challenge\n                    challengingIdentity: {\n                      always: [\n                        // If they just presented an invitation, we already know who they are\n                        { guard: \"theyHaveInvitation\", target: \"done\" },\n                        // We received their identity claim in their CLAIM_IDENTITY message. Do we\n                        // have a device on the team matching their identity claim?\n                        { guard: \"deviceUnknown\", ...fail4(DEVICE_UNKNOWN) },\n                        // Send a challenge.\n                        { actions: \"challengeIdentity\", target: \"awaitingIdentityProof\" }\n                      ]\n                    },\n                    // Then wait for them to respond to the challenge with proof\n                    awaitingIdentityProof: {\n                      on: {\n                        PROVE_IDENTITY: [\n                          // If the proof succeeds, send them an acceptance message and continue\n                          { guard: \"identityIsValid\", actions: \"acceptIdentity\", target: \"done\" },\n                          // If the proof fails, disconnect with error\n                          fail4(IDENTITY_PROOF_INVALID)\n                        ]\n                      },\n                      ...timeout\n                    },\n                    done: { type: \"final\" }\n                  }\n                }\n              },\n              // Once BOTH processes complete, we continue\n              onDone: { target: \"done\" }\n            },\n            done: { type: \"final\" }\n          },\n          onDone: { target: \"#negotiating\" }\n        },\n        // Negotiate a session key (shared secret). Alice generates a random seed, asymmetrically\n        // encrypts it with her private key and Bob's public key, and sends it to Bob, who decrypts\n        // it with his private key and Alice's public key; and vice versa. Both parties then combine\n        // the two seeds to derive a shared key.\n        negotiating: {\n          id: \"negotiating\",\n          entry: \"sendSeed\",\n          on: { SEED: { actions: \"deriveSharedKey\", target: \"synchronizing\" } },\n          ...timeout\n        },\n        // Synchronize our team graph with the peer\n        synchronizing: {\n          entry: \"sendSyncMessage\",\n          always: { guard: \"headsAreEqual\", target: \"connected\" },\n          on: { SYNC: { actions: [\"receiveSyncMessage\", \"sendSyncMessage\"] } }\n        },\n        // Once we're connected, all we need to do is just keep team graph in sync with our peer,\n        // and relay encrypted messages.\n        connected: {\n          id: \"connected\",\n          entry: [\"onConnected\", \"listenForTeamUpdates\"],\n          always: [\n            // If updates to the team graph result in our peer being removed from the team,\n            // disconnect\n            { guard: \"memberWasRemoved\", ...fail4(MEMBER_REMOVED) },\n            { guard: \"deviceWasRemoved\", ...fail4(DEVICE_REMOVED) },\n            { guard: \"serverWasRemoved\", ...fail4(SERVER_REMOVED) }\n          ],\n          on: {\n            // If the team graph is modified locally, send them a sync message\n            LOCAL_UPDATE: { actions: \"sendSyncMessage\" },\n            // If they send a sync message, process it\n            SYNC: { actions: [\"receiveSyncMessage\", \"sendSyncMessage\"] },\n            // Deliver any encrypted messages\n            ENCRYPTED_MESSAGE: { actions: \"receiveEncryptedMessage\" },\n            // If they disconnect we disconnect\n            DISCONNECT: \"#disconnected\"\n          }\n        },\n        // Once we disconnect, no further messages will be sent or received; to reconnect,\n        // a new Connection object must be created.\n        disconnected: {\n          id: \"disconnected\",\n          always: { actions: \"onDisconnected\" }\n        }\n      }\n    });\n    this.#machine = createActor(machine);\n    this.#machine.subscribe({\n      next: (state) => {\n        const summary = stateSummary(state.value);\n        this.emit(\"change\", summary);\n        this.#log(`\\u23E9 ${summary} `);\n      },\n      error: (error) => {\n        console.error(\"Connection encountered an unhandled error\", error);\n        this.#fail(UNHANDLED);\n      }\n    });\n    this.emit = (event, ...args) => {\n      this.#log(`emit ${event} %o`, ...args);\n      return super.emit(event, ...args);\n    };\n  }\n  // PUBLIC API\n  /** Starts the state machine. Returns this Connection object. */\n  start = (storedMessages = []) => {\n    this.#log(\"starting\");\n    this.#machine.start();\n    this.#messageQueue.start();\n    this.#started = true;\n    for (const m of storedMessages) this.deliver(m);\n    return this;\n  };\n  /** Shuts down and sends a disconnect message to the peer. */\n  stop = () => {\n    if (this.#started && this.#machine.getSnapshot().status !== \"done\") {\n      const disconnectMessage = { type: \"DISCONNECT\" };\n      this.#machine.send(disconnectMessage);\n      this.#messageQueue.send(disconnectMessage);\n    }\n    this.removeAllListeners();\n    this.#messageQueue.stop();\n    this.#log(\"connection stopped\");\n    return this;\n  };\n  /**\n   * Adds connection messages from the peer to the MessageQueue's incoming message queue, which\n   * will pass them to the state machine in order.\n   */\n  deliver(serializedMessage) {\n    const message = unpack2(serializedMessage);\n    this.#messageQueue.receive(message);\n  }\n  /**\n   * Public interface for sending a message from the application to our peer via this connection's\n   * encrypted channel. We don't care about the content of this message.\n   */\n  send = (message) => {\n    assert8(this._sessionKey, \"Can't send encrypted messages until we've finished connecting\");\n    const encryptedMessage = symmetric2.encryptBytes(message, this._sessionKey);\n    this.#log(`encrypted message with session key ${base582.encode(this._sessionKey)}`);\n    this.#queueMessage(\"ENCRYPTED_MESSAGE\", encryptedMessage);\n  };\n  /** Returns the current state of the protocol machine.  */\n  get state() {\n    assert8(this.#started);\n    return this.#machine.getSnapshot().value;\n  }\n  // PUBLIC FOR TESTING\n  /**\n   * Returns the team that the connection's user is a member of. If the user has not yet joined a\n   * team, returns undefined.\n   */\n  get team() {\n    return this._context.team;\n  }\n  // PRIVATE\n  /**\n   * Returns the connection's session key when we are in a connected state. Otherwise, returns\n   * `undefined`.\n   */\n  get _sessionKey() {\n    return this._context.sessionKey;\n  }\n  get _context() {\n    assert8(this.#started);\n    return this.#machine.getSnapshot().context;\n  }\n  #initializeMessageQueue(sendMessage) {\n    return new MessageQueue({\n      sendMessage: (message) => {\n        this.#logMessage(\"out\", message);\n        const serialized = pack2(message);\n        sendMessage(serialized);\n      }\n    }).on(\"message\", (message) => {\n      this.#logMessage(\"in\", message);\n      if (message.type === \"REQUEST_RESEND\") {\n        const { index } = message.payload;\n        this.#messageQueue.resend(index);\n      } else {\n        this.#machine.send(message);\n      }\n    }).on(\"request\", (index) => {\n      this.#queueMessage(\"REQUEST_RESEND\", { index });\n    });\n  }\n  /** Force local error state */\n  #fail(error) {\n    this.#log(\"error: %o\", error);\n    const localMessage = createErrorMessage(error, \"LOCAL\");\n    this.#machine.send(localMessage);\n    return { error: localMessage.payload };\n  }\n  /** Shorthand for sending a message to our peer. */\n  #queueMessage(type, payload) {\n    this.#messageQueue.send({ type, payload });\n  }\n  #logMessage(direction, message) {\n    const arrow = direction === \"in\" ? \"<-\" : \"->\";\n    const peerUserName = this.#started ? this._context.peer?.userName ?? \"?\" : \"?\";\n    this.#log(`${arrow}${peerUserName} #${message.index} ${messageSummary(message)}`);\n  }\n};\nvar fail4 = (error) => ({\n  actions: [{ type: \"fail\", params: { error } }, \"onDisconnected\"],\n  target: \"#disconnected\"\n});\nvar TIMEOUT_DELAY = 7e3;\nvar timeout = { after: { [TIMEOUT_DELAY]: fail4(TIMEOUT) } };\n\n// src/index.ts\nimport {\n  createKeyset as createKeyset5,\n  createUser,\n  redactKeys as redactKeys5,\n  redactUser as redactUser2\n} from \"@localfirst/crdx\";\nimport { asymmetric as asymmetric4, signatures as signatures5, symmetric as symmetric3 } from \"@localfirst/crypto\";\nexport {\n  ADMIN,\n  ADMIN_SCOPE,\n  ALL,\n  Connection,\n  DEVICE_ID,\n  ENCRYPTION,\n  EPHEMERAL_SCOPE2 as EPHEMERAL_SCOPE,\n  HashPurpose,\n  INVITATION,\n  LINK_HASH,\n  LINK_TO_PREVIOUS,\n  SHARED_KEY,\n  SIGNATURE,\n  SYMMETRIC,\n  TEAM_SCOPE,\n  Team,\n  VALID,\n  asymmetric4 as asymmetric,\n  castServer,\n  connection_exports as connection,\n  createDevice,\n  createKeyset5 as createKeyset,\n  createTeam,\n  createUser,\n  device_exports as device,\n  generateProof,\n  graphSummary,\n  initialState,\n  invitation_exports as invitation,\n  load as loadTeam,\n  redactDevice,\n  redactKeys5 as redactKeys,\n  redactUser2 as redactUser,\n  role_exports as role,\n  signatures5 as signatures,\n  symmetric3 as symmetric\n};\n//# sourceMappingURL=index.js.map"],"names":["symbolTag","isSymbol","value","isObjectLike","baseGetTag","arrayMap","array","iteratee","index","length","result","symbolProto","Symbol","symbolToString","baseToString","isArray","noop","baseFindIndex","predicate","fromIndex","fromRight","baseIsNaN","strictIndexOf","baseIndexOf","arrayIncludes","reIsDeepProp","reIsPlainProp","isKey","object","type","MAX_MEMOIZE_SIZE","memoizeCapped","func","memoize","key","cache","rePropName","reEscapeChar","stringToPath","string","match","number","quote","subString","toString","castPath","toKey","baseGet","path","get","defaultValue","CLONE_SYMBOLS_FLAG","clone","baseClone","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseIsMatch","source","matchData","customizer","data","objValue","srcValue","stack","Stack","baseIsEqual","isStrictComparable","isObject","getMatchData","keys","matchesStrictComparable","baseMatches","baseHasIn","hasPath","hasFunc","isLength","isIndex","isArguments","hasIn","baseMatchesProperty","baseProperty","basePropertyDeep","property","baseIteratee","identity","INFINITY","createSet","Set","setToArray","values","LARGE_ARRAY_SIZE","baseUniq","comparator","includes","isCommon","seen","set","cacheHas","SetCache","outer","computed","seenIndex","uniq","uniqBy","EventEmitter","#listenerMap","#eventsCount","event","args","listeners","i","once","fn","#addListener","removals","listener","events","_assert","anumber","abytes","ahash","aexists","aoutput","n","isBytes","a","b","lengths","h","instance","checkFinished","out","min","_u64","fromBig","split","add","U32_MASK64","_32n","le","lst","Ah","Al","l","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","crypto","exports","u8","u32","createView","rotr","rotl","byteSwap","byteSwap32","bytesToHex","hexToBytes","asyncLoop","utf8ToBytes","toBytes","concatBytes","checkOpts","wrapConstructor","wrapConstructorWithOpts","wrapXOFConstructorWithOpts","randomBytes","crypto_1","require$$0","_assert_js_1","require$$1","arr","word","shift","hexes","_","bytes","hex","asciis","asciiToBase16","ch","hl","al","ai","hi","n1","n2","char","nextTick","iters","tick","cb","ts","diff","str","arrays","sum","res","pad","Hash","defaults","opts","hashCons","hashC","msg","tmp","bytesLength","sha3","keccakP","_u64_js_1","utils_js_1","require$$2","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","t","j","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","blockLen","suffix","outputLen","enableXOF","state","len","pos","take","bufferOut","to","gen","genShake","defaultLength","bigLength","createEntropy","random","entropy","bufToBigInt","buf","bits","bi","hash","input","alphabet","randomLetter","createFingerprint","globalObj","global","globals","sourceString","createCounter","count","initialCountMax","init","counter","fingerprint","firstLetter","time","salt","hashInput","createId","isCuid","id","minLength","maxLength","regex","src","getConstants","cuid2","SIGNATURE","ENCRYPTION","SYMMETRIC","LINK_HASH","HashPurpose","ROOT","VALID","EPHEMERAL_SCOPE","LINK_HASH2","hashEncryptedLink","body","append","graph","action","user","context","senderPublicKey","senderSecretKey","recipientPublicKey","encryptedBody","asymmetric","hash4","link","encryptedLink","getLink","getChildrenHashes","calculateChildren","childrenLookup","parents","parent","children","getHashes","memoizeResolver","getPredecessorHashes","memoize2","assert","predecessors","isPredecessor","isPredecessorHash","memoizeResolver2","getSuccessorHashes","memoize3","successors","uniq2","isSuccessorHash","getConcurrentHashes","calculateConcurrency","memoize4","concurrencyLookup","isConcurrent","getConcurrentBubbles","getBubble","bubble","bubbles","EMPTY_GRAPH","createGraph","name","rootPayload","payload","arrayToMap","keyAccessor","current","KeyType","hasSecrets","isKeyset","k","isKeyring","createKeyring","decryptLink","keyset","assert2","cipher","toUint8Array","decryptedLinkBody","asymmetric2","decryptGraph","encryptedGraph","encryptedLinks","root","childMap","links","decrypt","prevLinks","decryptedLink","newLinks","hash5","decryptedLinks","isBuffer","getEncryptedLinks","hashes","getEncryptedLink","getHead","getParents","linkOrHash","EMPTY","getParentMap","depth","start","end","prev","getTails","parentsToLookup","parentLinks","linkMap","getChildMap","invertLinkMap","inverted","getRoot","topoSort","options","byHash","remainingParents","sorted","child2","childHash","child","nextLink","getSequence","resolver","baseResolver","sort","filter","noFilter","isInvalid","headsAreEqual","merge","ours","theirs","mergedLinks","mergedEncryptedLinks","newHeads","uniq3","isNotParentOfAnyOf","mergedGraph","isParent","redactGraph","head","serialize","pack","deserialize","serialized","unpack","SIGNATURE2","ENCRYPTION2","SYMMETRIC2","createKeyset","scope","seed","randomKey","stretchedSeed","stretch","signatures","hash2","asymmetric3","getLatestGeneration","keyring","latest","publicKey","redactKeys","ValidationError","message","details","validators","computedHash","fail","hasNoPrevLink","hasRootType","isTheGraphRoot","timestamp","now","prevLink","_validate","customValidators","rootHash","rootLink","headHash","headLink","encryptedLinkHashes","linkHashes","compositeValidator","validators2","currentLink","mergedValidators","merge2","validator","error","validate","memoize5","hash3","validatorSets","vs","makeMachine","initialState","reducer","Store","assert3","isGraph","actionWithPayload","prevHash","prevPublicKey","theirGraph","machine","createStore","generateMessage","prevState","their","our","lastCommonHead","ourHead","theirHead","theirHashLookup","hashesWeThinkTheyNeed","linksWeHave","hashesToSend","additionalDependencies","initSyncState","receiveMessage","assert4","ourChildMap","theirChildMap","validation","createUser","userName","userId","createId2","randomKey2","redactUser","getGlobal","getDevTools","w","devToolsAdapter","service","devTools","Mailbox","_process","enqueued","consumed","STATE_DELIMITER","TARGETLESS_KEY","NULL_EVENT","STATE_IDENTIFIER","WILDCARD","XSTATE_INIT","XSTATE_STOP","createAfterEvent","delayRef","createDoneStateEvent","output","createDoneActorEvent","invokeId","createErrorActorEvent","createInitEvent","reportUnhandledError","err","symbolObservable","matchesState","parentStateId","childStateId","parentStateValue","toStateValue","childStateValue","toStatePath","stateId","segment","stateValue","isMachineSnapshot","statePath","pathToStateValue","marker","previous","mapValues","collection","collectionKeys","toArrayStrict","toArray","resolveOutput","mapper","self","isErrorActorEvent","toTransitionConfigArray","configLike","transitionLike","normalizeTarget","target","toObserver","nextHandler","errorHandler","completionHandler","isObserver","createInvokeId","stateNodeId","resolveReferencedActor","indexStr","nodeId","invokeConfig","createScheduledEventId","actorRef","idCounter","createSystem","rootActor","keyedActors","reverseKeyedActors","inspectionObservers","timerMap","clock","logger","scheduler","delay","scheduledEvent","scheduledEventId","system","timeout","sendInspectionEvent","resolvedInspectionEvent","observer","sessionId","systemId","existing","observerOrFn","scheduledEvents","scheduledId","executingCustomAction","$$ACTOR_TYPE","ProcessingStatus","defaultOptions","ms","Actor","logic","resolvedOptions","syncSnapshot","inspect","emittedEvent","wildcardListener","allListeners","handler","exec","saveExecutingCustomAction","persistedState","snapshot","deferredFn","nextListenerOrObserver","errorListener","completeListener","wrappedHandler","initEvent","nextState","caughtError","reportError","err2","createActor","resolveCancel","actionArgs","actionParams","sendId","resolvedSendId","executeCancel","actorScope","params","cancel","_args","_params","resolveSpawn","_actionParams","resolvedId","resolvedInput","cloneMachineSnapshot","executeSpawn","spawnChild","resolveStop","actorRefOrString","resolvedActorRef","executeStop","stopChild","stop","checkAnd","guards","guard","evaluateGuard","and","isInline","resolved","guardArgs","guardParams","isAtomicStateNode","stateNode","getChildren","sn","getProperAncestors","toStateNode","ancestors","m","getAllStateNodes","stateNodes","nodeSet","adjList","getAdjList","getInitialStateNodesWithTheirAncestors","initialStates","initialStateNode","getValueFromAdj","baseNode","childStateNodes","childStateNode","getStateValue","rootNode","config","isInFinalState","stateNodeSet","isStateId","getCandidates","receivedEventType","eventDescriptor","partialEventTokens","eventTokens","tokenIndex","partialEventToken","eventToken","getDelayedTransitions","afterConfig","mutateEntryExit","afterEvent","eventType","raise","configTransition","resolvedTransition","resolvedDelay","transition","delayedTransition","formatTransition","descriptor","transitionConfig","normalizedTarget","reenter","resolveTarget","formatTransitions","transitions","transitionsConfig","invokeDef","formatInitialTransition","_target","resolvedTarget","targets","isInternalTarget","getStateNodeByPath","resolveHistoryDefaultTransition","isHistoryNode","states","getInitialStateNodes","ancestor","iter","descStateNode","getStateNode","stateKey","arrayStatePath","currentStateNode","getStateNodes","childStateKeys","subStateKey","allSubStateNodes","subStateNode","subStateNodes","transitionAtomicNode","next","transitionCompoundNode","subStateKeys","transitionNode","transitionParallelNode","allInnerTransitions","subStateValue","innerTransitions","getHistoryNodes","isDescendant","parentStateNode","hasIntersection","s1","s2","set1","set2","item","removeConflictingTransitions","enabledTransitions","historyValue","filteredTransitions","t1","t1Preempted","transitionsToRemove","t2","computeExitSet","t3","findLeastCommonAncestor","tail","getEffectiveTargetStates","targetNode","node","getTransitionDomain","targetStates","lca","statesToExit","domain","areStateNodeCollectionsEqual","prevStateNodes","nextStateNodeSet","microstep","currentSnapshot","isInitial","internalQueue","mutStateNodeSet","exitStates","resolveActionsAndContext","enterStates","nextStateNodes","e","getMachineOutput","rootCompletionNode","doneStateEvent","nextSnapshot","statesToEnter","statesForDefaultEntry","computeEntrySet","completedNodes","stateNodeToEnter","actions","initialActions","ancestorMarker","addDescendantStatesToEnter","addAncestorStatesToEnter","historyStateNodes","addProperAncestorStatesToEnter","historyDefaultTransition","reentrancyDomain","anc","_actionExecutor","changedHistory","exitStateNode","historyNode","def","getAction","actionType","resolveAndExecuteActionsWithContext","extra","retries","intermediateSnapshot","resolvedAction","builtinAction","deferredActorIds","macrostep","microstates","addMicrostate","microstate","stopChildren","nextEvent","currentEvent","isErr","selectTransitions","shouldSelectEventlessTransitions","selectEventlessTransitions","previousState","enabledTransitionSet","atomicStates","loop","resolveStateValue","allStateNodes","machineSnapshotMatches","testValue","machineSnapshotHasTag","tag","machineSnapshotCan","transitionData","machineSnapshotToJSON","nodes","tags","getMeta","toJSON","can","hasTag","matches","jsonValues","machineSnapshotGetMeta","acc","createMachineSnapshot","getPersistedSnapshot","childrenJson","persistContext","contextPart","copy","resolveRaise","eventOrExpr","delaysMap","resolvedEvent","configDelay","executeRaise","createSpawner","spawnedChildren","spawn","resolveAssign","assignment","assignArgs","partialUpdate","propAssignment","updatedContext","assign","assertEvent","types","typesText","memo","memoizedData","EMPTY_OBJECT","toSerializableAction","StateNode","stateConfig","sourceName","onDone","onError","invokeDefValues","map","selectedTransition","candidates","candidate","resolvedContext","guardPassed","guardType","StateMachine","implementations","actors","delays","resolvedStateValue","preInitial","preInitialState","macroState","fullPath","relativePath","resolvedStateId","_actorScope","snapshotChildren","actorId","actorData","childState","restoredSnapshot","reviveContext","createMachine","setup","schemas","__defProp","__export","all","connection_exports","Connection","DEVICE_REMOVED","DEVICE_UNKNOWN","ENCRYPTION_FAILURE","IDENTITY_PROOF_INVALID","INVITATION_PROOF_INVALID","JOINED_WRONG_TEAM","MEMBER_REMOVED","NEITHER_IS_MEMBER","SERVER_REMOVED","TIMEOUT","UNHANDLED","connectionErrors","createErrorMessage","isInviteeClaim","isInviteeContext","isInviteeDeviceClaim","isInviteeDeviceContext","isInviteeMemberClaim","isInviteeMemberContext","isMemberClaim","isMemberContext","isServerContext","actionFingerprint","fingerprintPayload","arraysAreEqual","normalize2","isAdminOnlyAction","role_exports","ADMIN","bySeniority","chain","isFounder","linkThatAddedMember","addedMember","addedA","addedB","membershipResolver","invalidLinks","ruleName","membershipRules","rule","invalidLinksByThisRule","alsoInvalid","findDependentLinks","linkNotIn","invalidLink","dependentLinks","invitation","usesInvitation","authorIs","removed","getRemovedAndDemotedMembers","removers","getRemovalsAndDemotions","getAuthor","leastSenior","removedMembers","getAdditions","addedUserId","getRemovedMembers","authorIn","demotedMembers","getDemotedMembers","authorDemoted","isAdminOnly","userNames","isAddAction","isRemovalAction","getRemovals","isDemotionAction","getDemotions","getTarget","author","excludeList","graphSummary","LINK_TO_PREVIOUS","INVITATION","DEVICE_ID","SHARED_KEY","composeTransforms","transforms","state2","transform","getScope","lockboxSummary","trunc","scopesMatch","assertScopesMatch","deriveSharedKey","aBytes","base58","bBytes","concatenatedSeeds","byteArraySortComparator","hashBytes","aString","bString","destination","localMessage","remoteMessage","deriveId","stretchedKey","normalize","secretKey","generateStarterKeys","generateProof","ephemeralKeys","signature","serializeTeamGraph","deserializeTeamGraph","keys2","maybeDeserialize","teamKeyring2","ALL","TEAM_SCOPE","ADMIN_SCOPE","EPHEMERAL_SCOPE2","invalidLinkReducer","member2","pendingKeyRotations","setHead","addDevice","device2","devices","d","addMember","newMember","addMemberRoles","roles","roleName","addMessage","addRole","newRole","unique","addServer","newServer","changeMemberKeys","changeServerKeys","server2","collectLockboxes","newLockboxes","lockboxes","postInvitation","invitationState","server","host","hasServer","toMember","toUser","toDevice","castServer","hasDevice","deviceId","getDevice","device","deviceWasRemoved","hasMember","hasRole","r","hasInvitation","getInvitation","isKeyManifest","create","contents","recipientKeys","redactedRecipientKeys","redactedContents","encryptionKeys","encryptedPayload","EPHEMERAL_SCOPE3","open","lockbox","decryptionKeys","encryptionKey","rotate","oldLockbox","newContents","updatedRecipientKeys","recipientManifest","visibleKeys","keysets","recipient","keyset2","keyMap","deviceKeys","organizeKeysIntoMap","generation","keysetsForScope","keysetHistory","allKeys","keysFromLockboxes","assert5","lockboxesInScope","latestGeneration","maxGeneration","max","member","memberByDeviceId","memberHasRole","role2","memberIsAdmin","memberWasRemoved","membersInRole","admins","messages","role","serverWasRemoved","TEAM","teamKeyring","visibleScopes","scopes","type2","name2","derivedScopes","allScopes","removeDevice","removedDevice","userLockbox","encryption","removeDeviceFromMember","member3","members","removedDevices","removeMember","remainingMembers","removedMember","removeMemberRole","removeRole","removeServer","remainingServers","removedServer","removedServers","revokeInvitation","invitations","revokedInvitation","rotateKeys","u","setTeamName","teamName","useInvitation","uses","invitation_exports","IKEY_LENGTH","InvitationValidationError","create2","invitationCanBeUsed","randomSeed","maxUses","expiration","starterKeys","timeOfUse","revoked","proof","signatures2","log","debug","validate2","_previousState","rootDevice","rootMember","fail2","deviceOwner","memberKeys","truncateHashes","getTransforms","ROOT2","unrecognizedLinkType","teamMachine","getTeamState","serializedGraph","keyring2","USER","getDeviceUserFromGraph","invitationSeed","invitationId","assert6","userKeyring","challenge","identityClaim","prove","challenge2","signatures3","verify","publicKeys","fail3","IdentityChallengeFailure","device_exports","createDevice","redactDevice","deviceName","deviceInfo","created","randomKey3","createKeyset2","redactKeys2","_redactUser","isNewTeam","DEVICE","USER2","Team","randomKey4","debug2","assert7","lockboxTeamKeysForMember","adminKeys","createKeyset3","lockboxAdminKeysForMember","lockboxUserKeysForDevice","teamKeys","roleKeys","lockboxRoleKeysForAdmins","lockboxRoleKeysForMember","adminCount","canBeUsedResult","invitationValidation","userValidation","redactKeys3","firstUseDevice","createKeyring2","getLatestGeneration2","symmetric","signatures4","newKeys","isForUser","isForServer","oldKeys","latestUserKeys","createLockboxRoleKeysForMember","compromised","newKeyset","otherNewKeysets","newKeysets","newKeyset2","updatedKeyset","createTeam","createKeyset4","decryptTeamGraph","createKeyring3","previousKeys","previousDecryptedLinks","decryptedLinks2","newState","rootPublicKey","rootKeys","load","createKeyring4","syncMessageSummary","need","truncateHashes2","log2","debug3","MessageQueue","EventEmitter2","#started","#inbound","#nextInbound","#waiting","#timeout","#outbound","#nextOutbound","#sendMessage","sendMessage","timeout2","#processInbound","#processOutbound","highestIndex","numberedMessage","highest","queue","messageSummary","isString","stateSummary","extendServerContext","getUserName","c","claim","EventEmitter3","#machine","#messageQueue","#log","debug4","#initializeMessageQueue","initialContext","#queueMessage","context2","ourIdentityClaim","context3","assert8","redactKeys4","theirDevice","team","theirIdentityClaim","proofOfInvitation","peer","userKeys","previousSyncState","syncState","syncMessage","prevSyncState","newChain","randomKeyBytes","encryptedSeed","recipientSecretKey","theirSeed","#fail","sessionKey","encryptedMessage","decryptedMessage","symmetric2","base582","fail4","summary","storedMessages","disconnectMessage","serializedMessage","unpack2","#logMessage","pack2","direction","arrow","peerUserName","TIMEOUT_DELAY"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]}